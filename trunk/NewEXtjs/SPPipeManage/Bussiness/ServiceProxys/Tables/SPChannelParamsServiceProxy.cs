// Generated by MyGeneration Version # (1.3.0.9)
using System;
using System.Collections.Generic;
using System.Text;
using LD.SPPipeManage.Bussiness.Wrappers;
using Legendigital.Framework.Common.Bussiness.Interfaces;
using Legendigital.Framework.Common.Data.Interfaces;
using Legendigital.Framework.Common.Bussiness.NHibernate;
using LD.SPPipeManage.Data.Tables;
using LD.SPPipeManage.Entity.Tables;


namespace LD.SPPipeManage.Bussiness.ServiceProxys.Tables
{
	public interface ISPChannelParamsServiceProxy : IBaseSpringNHibernateEntityServiceProxy<SPChannelParamsEntity>,ISPChannelParamsServiceProxyDesigner
    {
	    List<SPChannelParamsEntity> FindPageDataByChannelID(string orderByColumnName, bool isDesc, int pageIndex, int pageSize, int channleId, out int recordCount);
    }

    internal partial class SPChannelParamsServiceProxy : ISPChannelParamsServiceProxy
    {
        public List<SPChannelParamsEntity> FindPageDataByChannelID(string orderByColumnName, bool isDesc, int pageIndex, int pageSize, int channleId, out int recordCount)
        {
            SPChannelEntity channel = null;

            if(channleId>0)
            {
                channel = this.DataObjectsContainerIocID.SPChannelDataObjectInstance.Load(channleId);
            }

            return this.SelfDataObj.FindPageDataByChannelID(orderByColumnName, isDesc, pageIndex, pageSize, channel,
                                                            out recordCount);
        }
    }
}
