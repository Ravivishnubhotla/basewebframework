// Generated by MyGeneration Version # (1.3.0.9)
using System;
using System.Collections.Generic;
using System.Text;
using Legendigital.Framework.Common.Bussiness.Interfaces;
using Legendigital.Framework.Common.Data.Interfaces;
using Legendigital.Framework.Common.Bussiness.NHibernate;
using LD.SPPipeManage.Data.Tables;
using LD.SPPipeManage.Entity.Tables;
using Spring.Transaction.Interceptor;


namespace LD.SPPipeManage.Bussiness.ServiceProxys.Tables
{
    public interface ISPChannelDefaultClientSycnParamsServiceProxy : IBaseSpringNHibernateEntityServiceProxy<SPChannelDefaultClientSycnParamsEntity>, ISPChannelDefaultClientSycnParamsServiceProxyDesigner
    {
        void PatchAdd(int channleId);
    }

    internal partial class SPChannelDefaultClientSycnParamsServiceProxy : ISPChannelDefaultClientSycnParamsServiceProxy
    {
        [Transaction(ReadOnly = false)]
        public void PatchAdd(int channleId)
        {
            SPChannelEntity spChannelEntity =
                this.DataObjectsContainerIocID.SPChannelDataObjectInstance.Load(channleId);

            List<SPChannelDefaultClientSycnParamsEntity> paramsEntities =
                this.SelfDataObj.GetList_By_ChannelID_SPChannelEntity(spChannelEntity);

            foreach (SPChannelDefaultClientSycnParamsEntity paramsEntity in paramsEntities)
            {
                this.DataObjectsContainerIocID.SPChannelDefaultClientSycnParamsDataObjectInstance.Delete(paramsEntity);
            }

            SPChannelDefaultClientSycnParamsEntity moParamsEntity = new SPChannelDefaultClientSycnParamsEntity();

            moParamsEntity.ChannelID = spChannelEntity;
            moParamsEntity.Name = "mo";
            moParamsEntity.Title = "mo";
            moParamsEntity.Description = "上行内容";
            moParamsEntity.IsEnable = true;
            moParamsEntity.IsRequired = true;
            moParamsEntity.MappingParams = "ywid";

            this.DataObjectsContainerIocID.SPChannelDefaultClientSycnParamsDataObjectInstance.Save(moParamsEntity);

            SPChannelDefaultClientSycnParamsEntity linkidParamsEntity = new SPChannelDefaultClientSycnParamsEntity();

            linkidParamsEntity.ChannelID = spChannelEntity;
            linkidParamsEntity.Name = "linkid";
            linkidParamsEntity.Title = "linkid";
            linkidParamsEntity.Description = "唯一标识";
            linkidParamsEntity.IsEnable = true;
            linkidParamsEntity.IsRequired = true;
            linkidParamsEntity.MappingParams = "linkid";

            this.DataObjectsContainerIocID.SPChannelDefaultClientSycnParamsDataObjectInstance.Save(linkidParamsEntity);

            SPChannelDefaultClientSycnParamsEntity mobileParamsEntity = new SPChannelDefaultClientSycnParamsEntity();

            mobileParamsEntity.ChannelID = spChannelEntity;
            mobileParamsEntity.Name = "mobile";
            mobileParamsEntity.Title = "mobile";
            mobileParamsEntity.Description = "手机号码";
            mobileParamsEntity.IsEnable = true;
            mobileParamsEntity.IsRequired = true;
            mobileParamsEntity.MappingParams = "mobile";

            this.DataObjectsContainerIocID.SPChannelDefaultClientSycnParamsDataObjectInstance.Save(mobileParamsEntity);


            SPChannelDefaultClientSycnParamsEntity spCodeParamsEntity = new SPChannelDefaultClientSycnParamsEntity();

            spCodeParamsEntity.ChannelID = spChannelEntity;
            spCodeParamsEntity.Name = "spCode";
            spCodeParamsEntity.Title = "spCode";
            spCodeParamsEntity.Description = "通道号码";
            spCodeParamsEntity.IsEnable = true;
            spCodeParamsEntity.IsRequired = true;
            spCodeParamsEntity.MappingParams = "cpid";

            this.DataObjectsContainerIocID.SPChannelDefaultClientSycnParamsDataObjectInstance.Save(spCodeParamsEntity);


        }
    }
}
