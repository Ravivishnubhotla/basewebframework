// Generated by MyGeneration Version # (1.3.0.9)
using System;
using System.Collections.Generic;
using System.Text;
using System.Web.Security;
using LD.SPPipeManage.Bussiness.Wrappers;
using Legendigital.Framework.Common.BaseFramework.Bussiness.Wrappers;
using Legendigital.Framework.Common.Bussiness.Interfaces;
using Legendigital.Framework.Common.Data.Interfaces;
using Legendigital.Framework.Common.Bussiness.NHibernate;
using LD.SPPipeManage.Data.Tables;
using LD.SPPipeManage.Entity.Tables;
using Spring.Transaction.Interceptor;


namespace LD.SPPipeManage.Bussiness.ServiceProxys.Tables
{
    public interface ISPChannelServiceProxy : IBaseSpringNHibernateEntityServiceProxy<SPChannelEntity>, ISPChannelServiceProxyDesigner
    {
	    SPChannelEntity FindByAlias(string fileName);
        List<SPChannelParamsEntity> GetAllEnableParams(SPChannelEntity entity);
        List<SPChannelParamsEntity> GetAllShowParams(SPChannelEntity entity);
        List<SPChannelDefaultClientSycnParamsEntity> GetAllEnableDefaultSendParams(SPChannelEntity spChannelEntity);
        void QuickAdd(SPChannelEntity spChannelWrapper, string linkPName, string mobilePName, string spCodePName, string moPName, int userID);
    }

    internal partial class SPChannelServiceProxy : ISPChannelServiceProxy
    {
        public SPChannelEntity FindByAlias(string fileName)
        {
            return this.SelfDataObj.FindByAlias(fileName);
        }

        public List<SPChannelParamsEntity> GetAllEnableParams(SPChannelEntity entity)
        {
            return this.DataObjectsContainerIocID.SPChannelParamsDataObjectInstance.GetAllEnableParams(entity);
        }

        public List<SPChannelParamsEntity> GetAllShowParams(SPChannelEntity entity)
        {
            return this.DataObjectsContainerIocID.SPChannelParamsDataObjectInstance.GetAllShowParams(entity);
        }

        public List<SPChannelDefaultClientSycnParamsEntity> GetAllEnableDefaultSendParams(SPChannelEntity spChannelEntity)
        {
            return this.DataObjectsContainerIocID.SPChannelDefaultClientSycnParamsDataObjectInstance.GetAllEnableDefaultSendParams(spChannelEntity);
        }

        [Transaction(ReadOnly = false)]
        public void QuickAdd(SPChannelEntity spChannelWrapper, string linkPName, string mobilePName, string spCodePName, string moPName, int userID)
        {
            this.SelfDataObj.Save(spChannelWrapper);

            SPClientEntity spClientEntity = new SPClientEntity();
            spClientEntity.Name = spChannelWrapper.Name + "默认下家";
            spClientEntity.Description = spChannelWrapper.Name + "默认下家";
            spClientEntity.UserID = userID;
            spClientEntity.IsDefaultClient = true;
            spClientEntity.Alias = "";

            this.DataObjectsContainerIocID.SPClientDataObjectInstance.Save(spClientEntity);


            SPClientChannelSettingEntity obj = new SPClientChannelSettingEntity();

            obj.Name = spChannelWrapper.Name + "默认下家";
            obj.Description = spChannelWrapper.Name + "默认下家";
            obj.ChannelID = spChannelWrapper;
            obj.ClinetID = spClientEntity;
            obj.InterceptRate = 0;
            obj.OrderIndex = 0;
            obj.UpRate = 0;
            obj.DownRate = 0;
            obj.CommandColumn = "ywid";
            obj.CommandType = "7";
            obj.CommandCode = "";
            obj.SyncData = false;

            this.DataObjectsContainerIocID.SPClientChannelSettingDataObjectInstance.Save(obj);

            SPChannelParamsEntity moParamsEntity = new SPChannelParamsEntity();

            moParamsEntity.ChannelID = spChannelWrapper;
            moParamsEntity.Name = moPName;
            moParamsEntity.Title = moPName;
            moParamsEntity.Description = "上行内容";
            moParamsEntity.IsEnable = true;
            moParamsEntity.IsRequired = true;
            moParamsEntity.IsUnique = false;
            moParamsEntity.ParamsMappingName = "ywid";
            moParamsEntity.ParamsType = "普通参数";

            this.DataObjectsContainerIocID.SPChannelParamsDataObjectInstance.Save(moParamsEntity);

            SPChannelParamsEntity linkidParamsEntity = new SPChannelParamsEntity();

            linkidParamsEntity.ChannelID = spChannelWrapper;
            linkidParamsEntity.Name = linkPName;
            linkidParamsEntity.Title = linkPName;
            linkidParamsEntity.Description = "唯一标识";
            linkidParamsEntity.IsEnable = true;
            linkidParamsEntity.IsRequired = true;
            linkidParamsEntity.IsUnique = false;
            linkidParamsEntity.ParamsMappingName = "linkid";
            linkidParamsEntity.ParamsType = "普通参数";

            this.DataObjectsContainerIocID.SPChannelParamsDataObjectInstance.Save(linkidParamsEntity);

            SPChannelParamsEntity mobileParamsEntity = new SPChannelParamsEntity();

            mobileParamsEntity.ChannelID = spChannelWrapper;
            mobileParamsEntity.Name = mobilePName;
            mobileParamsEntity.Title = mobilePName;
            mobileParamsEntity.Description = "手机号码";
            mobileParamsEntity.IsEnable = true;
            mobileParamsEntity.IsRequired = true;
            mobileParamsEntity.IsUnique = false;
            mobileParamsEntity.ParamsMappingName = "mobile";
            mobileParamsEntity.ParamsType = "普通参数";

            this.DataObjectsContainerIocID.SPChannelParamsDataObjectInstance.Save(mobileParamsEntity);


            SPChannelParamsEntity spCodeParamsEntity = new SPChannelParamsEntity();

            spCodeParamsEntity.ChannelID = spChannelWrapper;
            spCodeParamsEntity.Name = spCodePName;
            spCodeParamsEntity.Title = spCodePName;
            spCodeParamsEntity.Description = "通道号码";
            spCodeParamsEntity.IsEnable = true;
            spCodeParamsEntity.IsRequired = true;
            spCodeParamsEntity.IsUnique = false;
            spCodeParamsEntity.ParamsMappingName = "cpid";
            spCodeParamsEntity.ParamsType = "普通参数";

            this.DataObjectsContainerIocID.SPChannelParamsDataObjectInstance.Save(spCodeParamsEntity);

            string sycnParamNameMO = "mo";

            if (!string.IsNullOrEmpty(System.Configuration.ConfigurationManager.AppSettings["DefaultSycnParamNameMO"]))
            {
                sycnParamNameMO = System.Configuration.ConfigurationManager.AppSettings["DefaultSycnParamNameMO"];
            }

            SPChannelDefaultClientSycnParamsEntity moSendParamsEntity = new SPChannelDefaultClientSycnParamsEntity();

            moSendParamsEntity.ChannelID = spChannelWrapper;
            moSendParamsEntity.Name = sycnParamNameMO;
            moSendParamsEntity.Title = sycnParamNameMO;
            moSendParamsEntity.Description = "上行内容";
            moSendParamsEntity.IsEnable = true;
            moSendParamsEntity.IsRequired = true;
            moSendParamsEntity.MappingParams = "ywid";

            this.DataObjectsContainerIocID.SPChannelDefaultClientSycnParamsDataObjectInstance.Save(moSendParamsEntity);

            string sycnParamNameLinkID = "linkid";

            if (!string.IsNullOrEmpty(System.Configuration.ConfigurationManager.AppSettings["DefaultSycnParamNameLinkID"]))
            {
                sycnParamNameLinkID = System.Configuration.ConfigurationManager.AppSettings["DefaultSycnParamNameLinkID"];
            }

            SPChannelDefaultClientSycnParamsEntity linkidSendParamsEntity = new SPChannelDefaultClientSycnParamsEntity();

            linkidSendParamsEntity.ChannelID = spChannelWrapper;
            linkidSendParamsEntity.Name = sycnParamNameLinkID;
            linkidSendParamsEntity.Title = sycnParamNameLinkID;
            linkidSendParamsEntity.Description = "唯一标识";
            linkidSendParamsEntity.IsEnable = true;
            linkidSendParamsEntity.IsRequired = true;
            linkidSendParamsEntity.MappingParams = "linkid";

            this.DataObjectsContainerIocID.SPChannelDefaultClientSycnParamsDataObjectInstance.Save(linkidSendParamsEntity);


            string sycnParamNameMobile = "mobile";

            if (!string.IsNullOrEmpty(System.Configuration.ConfigurationManager.AppSettings["DefaultSycnParamNameMobile"]))
            {
                sycnParamNameMobile = System.Configuration.ConfigurationManager.AppSettings["DefaultSycnParamNameMobile"];
            }

            SPChannelDefaultClientSycnParamsEntity mobileSendParamsEntity = new SPChannelDefaultClientSycnParamsEntity();

            mobileSendParamsEntity.ChannelID = spChannelWrapper;
            mobileSendParamsEntity.Name = sycnParamNameMobile;
            mobileSendParamsEntity.Title = sycnParamNameMobile;
            mobileSendParamsEntity.Description = "手机号码";
            mobileSendParamsEntity.IsEnable = true;
            mobileSendParamsEntity.IsRequired = true;
            mobileSendParamsEntity.MappingParams = "mobile";

            this.DataObjectsContainerIocID.SPChannelDefaultClientSycnParamsDataObjectInstance.Save(mobileSendParamsEntity);


            string sycnParamNameSPCode = "spCode";

            if (!string.IsNullOrEmpty(System.Configuration.ConfigurationManager.AppSettings["DefaultSycnParamNameSPCode"]))
            {
                sycnParamNameSPCode = System.Configuration.ConfigurationManager.AppSettings["DefaultSycnParamNameSPCode"];
            }



            SPChannelDefaultClientSycnParamsEntity spCodeSendParamsEntity = new SPChannelDefaultClientSycnParamsEntity();

            spCodeSendParamsEntity.ChannelID = spChannelWrapper;
            spCodeSendParamsEntity.Name = sycnParamNameSPCode;
            spCodeSendParamsEntity.Title = sycnParamNameSPCode;
            spCodeSendParamsEntity.Description = "通道号码";
            spCodeSendParamsEntity.IsEnable = true;
            spCodeSendParamsEntity.IsRequired = true;
            spCodeSendParamsEntity.MappingParams = "cpid";

            this.DataObjectsContainerIocID.SPChannelDefaultClientSycnParamsDataObjectInstance.Save(spCodeSendParamsEntity);





        }
    }
}
