// Generated by MyGeneration Version # (1.3.0.9)
using System;
using System.Collections.Generic;
using System.Text;
using Legendigital.Framework.Common.Bussiness.Interfaces;
using Legendigital.Framework.Common.Data.Interfaces;
using Legendigital.Framework.Common.Bussiness.NHibernate;
using LD.SPPipeManage.Data.Tables;
using LD.SPPipeManage.Entity.Tables;


namespace LD.SPPipeManage.Bussiness.ServiceProxys.Tables
{
    public interface ISPSendClientParamsServiceProxy : IBaseSpringNHibernateEntityServiceProxy<SPSendClientParamsEntity>, ISPSendClientParamsServiceProxyDesigner
    {


        List<SPSendClientParamsEntity> FindAllByOrderByAndClientID(string sortFieldName, bool isDesc, int pageIndex, int limit, int clientId, out int recordCount);
    }

    internal partial class SPSendClientParamsServiceProxy : ISPSendClientParamsServiceProxy
    {
        public List<SPSendClientParamsEntity> FindAllByOrderByAndClientID(string sortFieldName, bool isDesc, int pageIndex, int limit, int clientId, out int recordCount)
        {
            SPClientEntity clientEntity = this.DataObjectsContainerIocID.SPClientDataObjectInstance.Load(clientId);

            return this.SelfDataObj.FindAllByOrderByAndClientID(sortFieldName, isDesc, pageIndex, limit, clientEntity,
                                                                out recordCount);
        }
    }
}
