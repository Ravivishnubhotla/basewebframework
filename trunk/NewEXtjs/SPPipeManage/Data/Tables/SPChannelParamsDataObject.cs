// Generated by MyGeneration Version # (1.3.0.9)
using System;
using System.Collections.Generic;
using System.Text;
using NHibernate.Criterion;
using Legendigital.Framework.Common.Data.NHibernate.DynamicQuery;
using LD.SPPipeManage.Entity.Tables;
using Legendigital.Framework.Common.Data.NHibernate;

namespace LD.SPPipeManage.Data.Tables
{
    public partial class SPChannelParamsDataObject
    {
        public List<SPChannelParamsEntity> FindPageDataByChannelID(string orderByColumnName, bool isDesc, int pageIndex, int pageSize, SPChannelEntity channle, out int recordCount)
        {
            NHibernateDynamicQueryGenerator<SPChannelParamsEntity> queryGenerator = this.GetNewQueryBuilder();

            if(channle==null)
            {
                recordCount = 0;
                return new List<SPChannelParamsEntity>();
            }
            else
            {
                queryGenerator.AddWhereClause(PROPERTY_CHANNELID.Eq(channle));
            }

            AddDefaultOrderByToQueryGenerator(orderByColumnName, isDesc, queryGenerator);

            return this.FindListByPageByQueryBuilder(queryGenerator, pageIndex, pageSize, out recordCount);
        }
    }
}
