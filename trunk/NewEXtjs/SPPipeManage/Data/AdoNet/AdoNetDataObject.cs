// Generated by MyGeneration Version # (1.3.0.9)
using System;
using System.Data;
using Spring.Data.Common;

namespace LD.SPPipeManage.Data.AdoNet
{











    public partial class AdoNetDataObject
    {
        #region Common

        private T GetScalarFromDataSet<T>(DataTable dt, int columnIndex)
        {
            DataRow dr = GetFristDataRowFromDataTable(dt);

            if (dr != null && dr.Table.Columns.Count >= columnIndex + 1)
                return (T) dr[columnIndex];
            return default(T);
        }

        private T GetScalarFromDataSet<T>(DataSet ds, int columnIndex)
        {
            return GetScalarFromDataSet<T>(GetDataTableFromDataSet(ds), columnIndex);
        }

        private DataRow GetFristDataRowFromDataSet(DataSet ds)
        {
            return GetFristDataRowFromDataTable(GetDataTableFromDataSet(ds));
        }

        private DataRow GetFristDataRowFromDataTable(DataTable dt)
        {
            if (dt != null && dt.Rows.Count > 0)
                return dt.Rows[0];
            return null;
        }

        private DataTable GetDataTableFromDataSet(DataSet ds)
        {
            if (ds != null && ds.Tables.Count > 0)
                return ds.Tables[0];
            return null;
        }

        #endregion

        public DataSet GetAllReportData(int year, int month, int day)
        {
            string sql = "Select * from wiew_NoPayReport where CYear = @year and  CMonth =  @month and  CDay=@day";
 
            DbParameters dbParameters = this.CreateNewDbParameters();

            dbParameters.AddWithValue("year", year.ToString());

            dbParameters.AddWithValue("month", month.ToString());

            dbParameters.AddWithValue("day", day.ToString());

            return this.ExecuteDataSet(sql, CommandType.Text, dbParameters);
        }

        public void ClearAllReportedData(DateTime date)
        {
            string sql = "update SPPaymentInfo set  IsReport = 1  where Year(CreateDate) = @year and  Month(CreateDate) =  @month and  Day(CreateDate)=@day and  IsReport = 0";

            DbParameters dbParameters = this.CreateNewDbParameters();

            dbParameters.AddWithValue("year", date.Year.ToString());

            dbParameters.AddWithValue("month", date.Month.ToString());

            dbParameters.AddWithValue("day", date.Day.ToString());

            this.ExecuteNoQuery(sql, CommandType.Text, dbParameters);
        }

        public DataSet GetAllClientChannel()
        {
            string sql = "Select * from view_ClientChannel";

            DbParameters dbParameters = this.CreateNewDbParameters();

            return this.ExecuteDataSet(sql, CommandType.Text, dbParameters);
        }

        //public DataSet GetAllCountData(int year, int month, int day)
        //{
        //    string sql = "select ChannelID,ClientID,Count(*) as TotalCount from (Select ChannelID,ClientID,IsIntercept,SucesssToSend from dbo.SPPaymentInfo where Year(CreateDate) = @year and  Month(CreateDate) =  @month and  Day(CreateDate)=@day and IsReport = 0) as tb1 group by ChannelID,ClientID";

        //    DbParameters dbParameters = this.CreateNewDbParameters();

        //    dbParameters.AddWithValue("year", year.ToString());

        //    dbParameters.AddWithValue("month", month.ToString());

        //    dbParameters.AddWithValue("day", day.ToString());

        //    return this.ExecuteDataSet(sql, CommandType.Text, dbParameters);
        //}

        //public DataSet GetAllIsInterceptCountData(int year, int month, int day)
        //{
        //    string sql = "select ChannelID,ClientID,Count(*) as TotalCount from (Select ChannelID,ClientID,IsIntercept,SucesssToSend from dbo.SPPaymentInfo where Year(CreateDate) = @year and  Month(CreateDate) =  @month and  Day(CreateDate)=@day and IsIntercept=1  and IsReport = 0) as tb1 group by ChannelID,ClientID";

        //    DbParameters dbParameters = this.CreateNewDbParameters();

        //    dbParameters.AddWithValue("year", year.ToString());

        //    dbParameters.AddWithValue("month", month.ToString());

        //    dbParameters.AddWithValue("day", day.ToString());

        //    return this.ExecuteDataSet(sql, CommandType.Text, dbParameters);
        //}


        //public DataSet GetAllNoIsInterceptCountData(int year, int month, int day)
        //{
        //    string sql = "select ChannelID,ClientID,Count(*) as TotalCount from (Select ChannelID,ClientID,IsIntercept,SucesssToSend from dbo.SPPaymentInfo where Year(CreateDate) = @year and  Month(CreateDate) =  @month and  Day(CreateDate)=@day  and IsIntercept=0  and IsReport = 0) as tb1 group by ChannelID,ClientID";

        //    DbParameters dbParameters = this.CreateNewDbParameters();

        //    dbParameters.AddWithValue("year", year.ToString());

        //    dbParameters.AddWithValue("month", month.ToString());

        //    dbParameters.AddWithValue("day", day.ToString());

        //    return this.ExecuteDataSet(sql, CommandType.Text, dbParameters);
        //}

        //public DataSet GetAllSuccessSendCountData(int year, int month, int day)
        //{
        //    string sql = "select ChannelID,ClientID,Count(*) as TotalCount from (Select ChannelID,ClientID,IsIntercept,SucesssToSend from dbo.SPPaymentInfo where Year(CreateDate) = @year and  Month(CreateDate) =  @month and  Day(CreateDate)=@day and IsIntercept=0 and  SucesssToSend =1 and IsReport = 0) as tb1 group by ChannelID,ClientID";

        //    DbParameters dbParameters = this.CreateNewDbParameters();

        //    dbParameters.AddWithValue("year", year.ToString());

        //    dbParameters.AddWithValue("month", month.ToString());

        //    dbParameters.AddWithValue("day", day.ToString());

        //    return this.ExecuteDataSet(sql, CommandType.Text, dbParameters);
        //}


        //public DataSet GetAllFailedSendCountData(int year, int month, int day)
        //{
        //    string sql = "select ChannelID,ClientID,Count(*) as TotalCount from (Select ChannelID,ClientID,IsIntercept,SucesssToSend from dbo.SPPaymentInfo where Year(CreateDate) = @year and  Month(CreateDate) =  @month and  Day(CreateDate)=@day and IsIntercept=0 and  SucesssToSend =0 and IsReport = 0) as tb1 group by ChannelID,ClientID";

        //    DbParameters dbParameters = this.CreateNewDbParameters();

        //    dbParameters.AddWithValue("year", year.ToString());

        //    dbParameters.AddWithValue("month", month.ToString());

        //    dbParameters.AddWithValue("day", day.ToString());

        //    return this.ExecuteDataSet(sql, CommandType.Text, dbParameters);
        //}



        public void DeleteAllReportData(DateTime date)
        {
            string sql = "delete from SPPaymentInfo where Year(CreateDate) = @year and  Month(CreateDate) =  @month and  Day(CreateDate)=@day and IsReport = 1";

            DbParameters dbParameters = this.CreateNewDbParameters();

            dbParameters.AddWithValue("year", date.Year.ToString());

            dbParameters.AddWithValue("month", date.Month.ToString());

            dbParameters.AddWithValue("day", date.Day.ToString());

            this.ExecuteNoQuery(sql, CommandType.Text, dbParameters);
        }



    }
}