// Generated by MyGeneration Version # (1.3.0.9)
using System;
using System.Collections.Generic;
using System.Text;
using NHibernate.Criterion;
using Legendigital.Framework.Common.Data.NHibernate.DynamicQuery;
using Legendigital.Framework.Common.BaseFramework.Entity.Tables;
using Legendigital.Framework.Common.Data.NHibernate;

namespace Legendigital.Framework.Common.BaseFramework.Data.Tables
{
    public partial class SystemUserGroupUserRelationDataObject
    {
        public SystemUserGroupUserRelationEntity GetUserUserGroupRelation(SystemUserEntity userentity, SystemUserGroupEntity groupEntity)
        {
            NHibernateDynamicQueryGenerator<SystemUserGroupUserRelationEntity> queryGenerator = this.GetNewQueryBuilder();

            queryGenerator.AddWhereClause(PROPERTY_USERID.Eq(userentity));

            queryGenerator.AddWhereClause(PROPERTY_USERGROUPID.Eq(groupEntity));

            return this.FindSingleEntityByQueryBuilder(queryGenerator);
        }

        public List<SystemUserGroupUserRelationEntity> GetAllRelationByUser(SystemUserEntity systemUserEntity)
        {
            NHibernateDynamicQueryGenerator<SystemUserGroupUserRelationEntity> dynamicQueryGenerator = this.GetNewQueryBuilder();

            dynamicQueryGenerator.AddWhereClause(PROPERTY_USERID.Eq(systemUserEntity));

            return this.FindListByQueryBuilder(dynamicQueryGenerator);
        }
    }
}
