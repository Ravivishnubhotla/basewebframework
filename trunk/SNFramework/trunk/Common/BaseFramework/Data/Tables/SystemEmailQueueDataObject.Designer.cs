// Generated by MyGeneration Version # (1.3.0.9)
using System;
using System.Collections.Generic;
using System.Text;
using NHibernate.Criterion;
using Legendigital.Framework.Common.Data.NHibernate.DynamicQuery;
using Legendigital.Framework.Common.BaseFramework.Entity.Tables;
using Legendigital.Framework.Common.Data.NHibernate;


namespace Legendigital.Framework.Common.BaseFramework.Data.Tables
{
    public partial class SystemEmailQueueDataObject : BaseNHibernateDataObject<SystemEmailQueueEntity>
    {
				#region Expression Query Property (标准查询字段)
		public static readonly Property PROPERTY_QUEUEID = Property.ForName(SystemEmailQueueEntity.PROPERTY_NAME_QUEUEID);
		public static readonly Property PROPERTY_TITLE = Property.ForName(SystemEmailQueueEntity.PROPERTY_NAME_TITLE);
		public static readonly Property PROPERTY_BODY = Property.ForName(SystemEmailQueueEntity.PROPERTY_NAME_BODY);
		public static readonly Property PROPERTY_FROMADDRESS = Property.ForName(SystemEmailQueueEntity.PROPERTY_NAME_FROMADDRESS);
		public static readonly Property PROPERTY_FROMNAME = Property.ForName(SystemEmailQueueEntity.PROPERTY_NAME_FROMNAME);
		public static readonly Property PROPERTY_TOADDRESSS = Property.ForName(SystemEmailQueueEntity.PROPERTY_NAME_TOADDRESSS);
		public static readonly Property PROPERTY_TONAMES = Property.ForName(SystemEmailQueueEntity.PROPERTY_NAME_TONAMES);
		public static readonly Property PROPERTY_CCADDRESSS = Property.ForName(SystemEmailQueueEntity.PROPERTY_NAME_CCADDRESSS);
		public static readonly Property PROPERTY_CCNAMES = Property.ForName(SystemEmailQueueEntity.PROPERTY_NAME_CCNAMES);
		public static readonly Property PROPERTY_BCCADDRESSS = Property.ForName(SystemEmailQueueEntity.PROPERTY_NAME_BCCADDRESSS);
		public static readonly Property PROPERTY_BCCNAMES = Property.ForName(SystemEmailQueueEntity.PROPERTY_NAME_BCCNAMES);
		public static readonly Property PROPERTY_EMAILTEMPLATEID = Property.ForName(SystemEmailQueueEntity.PROPERTY_NAME_EMAILTEMPLATEID);
		public static readonly Property PROPERTY_STATUES = Property.ForName(SystemEmailQueueEntity.PROPERTY_NAME_STATUES);
		public static readonly Property PROPERTY_SENDRETRY = Property.ForName(SystemEmailQueueEntity.PROPERTY_NAME_SENDRETRY);
		public static readonly Property PROPERTY_MAXRETRYTIME = Property.ForName(SystemEmailQueueEntity.PROPERTY_NAME_MAXRETRYTIME);
		public static readonly Property PROPERTY_MAILLOG = Property.ForName(SystemEmailQueueEntity.PROPERTY_NAME_MAILLOG);
		public static readonly Property PROPERTY_CREATEDATE = Property.ForName(SystemEmailQueueEntity.PROPERTY_NAME_CREATEDATE);
		public static readonly Property PROPERTY_CREATEBY = Property.ForName(SystemEmailQueueEntity.PROPERTY_NAME_CREATEBY);
		public static readonly Property PROPERTY_SENDDATE = Property.ForName(SystemEmailQueueEntity.PROPERTY_NAME_SENDDATE);
      
		#region 子类集合字段查询字段
	
		#endregion

		#endregion

		
		public override string[] PkPropertyName
        {
            get { return new string[] { "QueueID" }; }
        }
		
		public override Type GetFieldTypeByFieldName(string fieldName)
        {
			switch (fieldName)
            {
                case "QueueID":
                    return typeof (int);
                case "Title":
                    return typeof (string);
                case "Body":
                    return typeof (string);
                case "FromAddress":
                    return typeof (string);
                case "FromName":
                    return typeof (string);
                case "ToAddresss":
                    return typeof (string);
                case "ToNames":
                    return typeof (string);
                case "CCAddresss":
                    return typeof (string);
                case "CCNames":
                    return typeof (string);
                case "BCCAddresss":
                    return typeof (string);
                case "BCCNames":
                    return typeof (string);
                case "EmailTemplateID":
                    return typeof (int);
                case "Statues":
                    return typeof (string);
                case "SendRetry":
                    return typeof (int);
                case "MaxRetryTime":
                    return typeof (int);
                case "MailLog":
                    return typeof (string);
                case "CreateDate":
                    return typeof (DateTime);
                case "CreateBy":
                    return typeof (int);
                case "SendDate":
                    return typeof (DateTime);
          }
			return typeof(string);
        }
		

		
		
    }
}
