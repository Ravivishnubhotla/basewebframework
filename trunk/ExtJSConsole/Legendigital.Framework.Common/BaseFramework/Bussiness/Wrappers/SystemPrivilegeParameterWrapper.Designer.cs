// Generated by MyGeneration Version # (1.3.0.9)
using System;
using System.Collections.Generic;
using System.Text;
using Spring.Context.Support;
using Common.Logging;
using Legendigital.Framework.Common.BaseFramework.Entity.Tables;
using Legendigital.Framework.Common.BaseFramework.Bussiness.ServiceProxys.Tables.Container;
using Legendigital.Framework.Common.BaseFramework.Bussiness.ServiceProxys.Tables;

namespace Legendigital.Framework.Common.BaseFramework.Bussiness.Wrappers
{
    public partial class SystemPrivilegeParameterWrapper
    {
        #region Member

		internal static readonly ISystemPrivilegeParameterServiceProxy businessProxy = ((Legendigital.Framework.Common.BaseFramework.Bussiness.ServiceProxys.Tables.Container.BaseFrameworkServiceProxyContainer)(ContextRegistry.GetContext().GetObject("BaseFrameworkServiceProxyContainerIocID", typeof(Legendigital.Framework.Common.BaseFramework.Bussiness.ServiceProxys.Tables.Container.BaseFrameworkServiceProxyContainer)))).SystemPrivilegeParameterServiceProxyInstance;
		//internal static readonly ISystemPrivilegeParameterServiceProxy businessProxy = ((ServiceProxyContainer)(ContextRegistry.GetContext().GetObject("ServiceProxyContainerIocID"))).SystemPrivilegeParameterServiceProxyInstance;

        internal SystemPrivilegeParameterEntity entity;
		
		private static ILog logger = null;

        public static ILog Logger
        {
            get
            {
                if (logger == null)
                    logger = LogManager.GetLogger(typeof(SystemPrivilegeParameterWrapper));
                return logger;
            }
        }

        #endregion

        #region Construtor
        public SystemPrivilegeParameterWrapper() : this(new SystemPrivilegeParameterEntity())
        {
            
        }

        internal SystemPrivilegeParameterWrapper(SystemPrivilegeParameterEntity entityObj)
        {
            entity = entityObj;
        }
		#endregion
		
		#region Equals 和 HashCode 方法覆盖
		public override bool Equals(object obj)
        {
            if (obj == null && entity!=null)
            {
                if (entity.PrivilegeParameterID == 0)
                    return true;

                return false;
            }
            return entity.Equals(obj);
        }

        public override int GetHashCode()
        {
            return entity.GetHashCode();
        }
		#endregion
		
        #region 公共常量

		public static readonly string CLASS_FULL_NAME = "Legendigital.Framework.Common.BaseFramework.Entity.Tables.SystemPrivilegeParameterEntity";
		public static readonly string PROPERTY_NAME_PRIVILEGEPARAMETERID = "PrivilegeParameterID";
		public static readonly string PROPERTY_NAME_ROLEID = "RoleID";
		public static readonly string PROPERTY_NAME_PRIVILEGEID = "PrivilegeID";
		public static readonly string PROPERTY_NAME_BIZPARAMETER = "BizParameter";
		
        #endregion


		#region Public Property
		/// <summary>
		/// 
		/// </summary>		
		public int PrivilegeParameterID
		{
			get
			{
				return entity.PrivilegeParameterID;
			}
			set
			{
				entity.PrivilegeParameterID = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public SystemRoleWrapper RoleID
		{
			get
			{
				return SystemRoleWrapper.ConvertEntityToWrapper(entity.RoleID) ;
			}
			set
			{
				entity.RoleID = ((value == null) ? null : value.entity);
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public SystemPrivilegeWrapper PrivilegeID
		{
			get
			{
				return SystemPrivilegeWrapper.ConvertEntityToWrapper(entity.PrivilegeID) ;
			}
			set
			{
				entity.PrivilegeID = ((value == null) ? null : value.entity);
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public string BizParameter
		{
			get
			{
				return entity.BizParameter;
			}
			set
			{
				entity.BizParameter = value;
			}
		}
		#endregion 







        #region Static Common Data Operation
		
		internal static List<SystemPrivilegeParameterWrapper> ConvertToWrapperList(List<SystemPrivilegeParameterEntity> entitylist)
        {
            List<SystemPrivilegeParameterWrapper> list = new List<SystemPrivilegeParameterWrapper>();
            foreach (SystemPrivilegeParameterEntity lentity in entitylist)
            {
                list.Add(ConvertEntityToWrapper(lentity));
            }
            return list;
        }

		internal static List<SystemPrivilegeParameterWrapper> ConvertToWrapperList(IList<SystemPrivilegeParameterEntity> entitylist)
        {
            List<SystemPrivilegeParameterWrapper> list = new List<SystemPrivilegeParameterWrapper>();
            foreach (SystemPrivilegeParameterEntity lentity in entitylist)
            {
                list.Add(ConvertEntityToWrapper(lentity));
            }
            return list;
        }
		
		internal static List<SystemPrivilegeParameterEntity> ConvertToEntityList(List<SystemPrivilegeParameterWrapper> wrapperlist)
        {
            List<SystemPrivilegeParameterEntity> list = new List<SystemPrivilegeParameterEntity>();
            foreach (SystemPrivilegeParameterWrapper wrapper in wrapperlist)
            {
                list.Add(wrapper.entity);
            }
            return list;
        }

        internal static SystemPrivilegeParameterWrapper ConvertEntityToWrapper(SystemPrivilegeParameterEntity entity)
        {
            if (entity == null)
                return null;
				
            if (entity.PrivilegeParameterID == 0)
                return null;

            return new SystemPrivilegeParameterWrapper(entity);
        }
		
		#endregion

    }//End Class
}// End Namespace

