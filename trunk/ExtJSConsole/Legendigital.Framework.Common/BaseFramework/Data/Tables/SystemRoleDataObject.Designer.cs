// Generated by MyGeneration Version # (1.3.0.9)
using System;
using System.Collections.Generic;
using System.Text;
using NHibernate.Criterion;
using Legendigital.Framework.Common.Data.NHibernate.DynamicQuery;
using Legendigital.Framework.Common.BaseFramework.Entity.Tables;
using Legendigital.Framework.Common.Data.NHibernate;


namespace Legendigital.Framework.Common.BaseFramework.Data.Tables
{
    public partial class SystemRoleDataObject : BaseNHibernateDataObject<SystemRoleEntity>
    {
				#region Expression Query Property (标准查询字段)
		public static readonly Property PROPERTY_ROLEID = Property.ForName(SystemRoleEntity.PROPERTY_NAME_ROLEID);
		public static readonly Property PROPERTY_ROLENAME = Property.ForName(SystemRoleEntity.PROPERTY_NAME_ROLENAME);
		public static readonly Property PROPERTY_ROLEDESCRIPTION = Property.ForName(SystemRoleEntity.PROPERTY_NAME_ROLEDESCRIPTION);
		public static readonly Property PROPERTY_ROLEISSYSTEMROLE = Property.ForName(SystemRoleEntity.PROPERTY_NAME_ROLEISSYSTEMROLE);
      
		#region 子类集合字段查询字段
	
		#endregion

		#endregion

		
		public override string[] PkPropertyName
        {
            get { return new string[] { "RoleID" }; }
        }
		
		public override Type GetFieldTypeByFieldName(string fieldName)
        {
			switch (fieldName)
            {
                case "RoleID":
                    return typeof (int);
                case "RoleName":
                    return typeof (string);
                case "RoleDescription":
                    return typeof (string);
                case "RoleIsSystemRole":
                    return typeof (bool);
          }
			return typeof(string);
        }
    }
}
