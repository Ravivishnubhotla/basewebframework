// Generated by MyGeneration Version # (1.3.0.9)
using System;
using System.Collections.Generic;
using System.Text;
using NHibernate.Criterion;
using Legendigital.Framework.Common.Data.NHibernate.DynamicQuery;
using Legendigital.Framework.Common.BaseFramework.Entity.Tables;
using Legendigital.Framework.Common.Data.NHibernate;


namespace Legendigital.Framework.Common.BaseFramework.Data.Tables
{
    public partial class SystemLogDataObject : BaseNHibernateDataObject<SystemLogEntity>
    {
				#region Expression Query Property (标准查询字段)
		public static readonly Property PROPERTY_LOGID = Property.ForName(SystemLogEntity.PROPERTY_NAME_LOGID);
		public static readonly Property PROPERTY_LOGLEVEL = Property.ForName(SystemLogEntity.PROPERTY_NAME_LOGLEVEL);
		public static readonly Property PROPERTY_LOGTYPE = Property.ForName(SystemLogEntity.PROPERTY_NAME_LOGTYPE);
		public static readonly Property PROPERTY_LOGDATE = Property.ForName(SystemLogEntity.PROPERTY_NAME_LOGDATE);
		public static readonly Property PROPERTY_LOGSOURCE = Property.ForName(SystemLogEntity.PROPERTY_NAME_LOGSOURCE);
		public static readonly Property PROPERTY_LOGUSER = Property.ForName(SystemLogEntity.PROPERTY_NAME_LOGUSER);
		public static readonly Property PROPERTY_LOGDESCRPTION = Property.ForName(SystemLogEntity.PROPERTY_NAME_LOGDESCRPTION);
		public static readonly Property PROPERTY_LOGREQUESTINFO = Property.ForName(SystemLogEntity.PROPERTY_NAME_LOGREQUESTINFO);
		public static readonly Property PROPERTY_LOGRELATEMOUDLEID = Property.ForName(SystemLogEntity.PROPERTY_NAME_LOGRELATEMOUDLEID);
		public static readonly Property PROPERTY_LOGRELATEMOUDLEDATAID = Property.ForName(SystemLogEntity.PROPERTY_NAME_LOGRELATEMOUDLEDATAID);
		public static readonly Property PROPERTY_LOGRELATEUSERID = Property.ForName(SystemLogEntity.PROPERTY_NAME_LOGRELATEUSERID);
		public static readonly Property PROPERTY_LOGRELATEDATETIME = Property.ForName(SystemLogEntity.PROPERTY_NAME_LOGRELATEDATETIME);
      
		#region 子类集合字段查询字段
	
		#endregion

		#endregion

		
		public override string[] PkPropertyName
        {
            get { return new string[] { "LogID" }; }
        }
		
		public override Type GetFieldTypeByFieldName(string fieldName)
        {
			switch (fieldName)
            {
                case "LogID":
                    return typeof (int);
                case "LogLevel":
                    return typeof (string);
                case "LogType":
                    return typeof (string);
                case "LogDate":
                    return typeof (DateTime);
                case "LogSource":
                    return typeof (string);
                case "LogUser":
                    return typeof (string);
                case "LogDescrption":
                    return typeof (string);
                case "LogRequestInfo":
                    return typeof (string);
                case "LogRelateMoudleID":
                    return typeof (int);
                case "LogRelateMoudleDataID":
                    return typeof (int);
                case "LogRelateUserID":
                    return typeof (int);
                case "LogRelateDateTime":
                    return typeof (DateTime);
          }
			return typeof(string);
        }
    }
}
