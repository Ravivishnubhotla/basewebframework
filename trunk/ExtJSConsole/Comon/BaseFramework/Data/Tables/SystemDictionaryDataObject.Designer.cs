// Generated by MyGeneration Version # (1.3.0.9)
using System;
using System.Collections.Generic;
using System.Text;
using NHibernate.Criterion;
using Legendigital.Framework.Common.Data.NHibernate.DynamicQuery;
using Legendigital.Framework.Common.BaseFramework.Entity.Tables;
using Legendigital.Framework.Common.Data.NHibernate;


namespace Legendigital.Framework.Common.BaseFramework.Data.Tables
{
    public partial class SystemDictionaryDataObject : BaseNHibernateDataObject<SystemDictionaryEntity>
    {
				#region Expression Query Property (标准查询字段)
		public static readonly Property PROPERTY_SYSTEMDICTIONARYID = Property.ForName(SystemDictionaryEntity.PROPERTY_NAME_SYSTEMDICTIONARYID);
		public static readonly Property PROPERTY_SYSTEMDICTIONARYCATEGORYID = Property.ForName(SystemDictionaryEntity.PROPERTY_NAME_SYSTEMDICTIONARYCATEGORYID);
		public static readonly Property PROPERTY_SYSTEMDICTIONARYKEY = Property.ForName(SystemDictionaryEntity.PROPERTY_NAME_SYSTEMDICTIONARYKEY);
		public static readonly Property PROPERTY_SYSTEMDICTIONARYVALUE = Property.ForName(SystemDictionaryEntity.PROPERTY_NAME_SYSTEMDICTIONARYVALUE);
		public static readonly Property PROPERTY_SYSTEMDICTIONARYDESCIPTION = Property.ForName(SystemDictionaryEntity.PROPERTY_NAME_SYSTEMDICTIONARYDESCIPTION);
		public static readonly Property PROPERTY_SYSTEMDICTIONARYORDER = Property.ForName(SystemDictionaryEntity.PROPERTY_NAME_SYSTEMDICTIONARYORDER);
		public static readonly Property PROPERTY_SYSTEMDICTIONARYISENABLE = Property.ForName(SystemDictionaryEntity.PROPERTY_NAME_SYSTEMDICTIONARYISENABLE);
      
		#region 子类集合字段查询字段
	
		#endregion

		#endregion

		
		public override string[] PkPropertyName
        {
            get { return new string[] { "SystemDictionaryID" }; }
        }
		
		public override Type GetFieldTypeByFieldName(string fieldName)
        {
			switch (fieldName)
            {
                case "SystemDictionaryID":
                    return typeof (int);
                    break;
                case "SystemDictionaryCategoryID":
                    return typeof (string);
                    break;
                case "SystemDictionaryKey":
                    return typeof (string);
                    break;
                case "SystemDictionaryValue":
                    return typeof (string);
                    break;
                case "SystemDictionaryDesciption":
                    return typeof (string);
                    break;
                case "SystemDictionaryOrder":
                    return typeof (int);
                    break;
                case "SystemDictionaryIsEnable":
                    return typeof (bool);
                    break;
          }
			return typeof(string);
        }
    }
}
