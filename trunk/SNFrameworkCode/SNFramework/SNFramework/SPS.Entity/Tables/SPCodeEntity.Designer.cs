// Generated by MyGeneration Version # (1.3.0.9)
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace SPS.Entity.Tables
{
	/// <summary>
	///	
	/// </summary>
	[DataContract]
	public partial class SPCodeEntity : ICloneable
	{
        #region 公共常量

		public static readonly string CLASS_FULL_NAME = "SPS.Entity.Tables.SPCodeEntity";
		public static readonly string PROPERTY_NAME_ID = "Id";
		public static readonly string PROPERTY_NAME_NAME = "Name";
		public static readonly string PROPERTY_NAME_DESCRIPTION = "Description";
		public static readonly string PROPERTY_NAME_CODE = "Code";
		public static readonly string PROPERTY_NAME_CODETYPE = "CodeType";
		public static readonly string PROPERTY_NAME_CHANNELID = "ChannelID";
		public static readonly string PROPERTY_NAME_MO = "Mo";
		public static readonly string PROPERTY_NAME_MOTYPE = "MOType";
		public static readonly string PROPERTY_NAME_MOLENGTH = "MOLength";
		public static readonly string PROPERTY_NAME_ORDERINDEX = "OrderIndex";
		public static readonly string PROPERTY_NAME_SPCODE = "SPCode";
		public static readonly string PROPERTY_NAME_SPCODETYPE = "SPCodeType";
		public static readonly string PROPERTY_NAME_SPCODELENGTH = "SPCodeLength";
		public static readonly string PROPERTY_NAME_HASFILTERS = "HasFilters";
		public static readonly string PROPERTY_NAME_HASPARAMSCONVERT = "HasParamsConvert";
		public static readonly string PROPERTY_NAME_ISDIABLE = "IsDiable";
		public static readonly string PROPERTY_NAME_PRICE = "Price";
		public static readonly string PROPERTY_NAME_OPERATIONTYPE = "OperationType";
		public static readonly string PROPERTY_NAME_HASDAYTOTALLIMIT = "HasDayTotalLimit";
		public static readonly string PROPERTY_NAME_DAYTOTALLIMITCOUNT = "DayTotalLimitCount";
		public static readonly string PROPERTY_NAME_HASPHONELIMIT = "HasPhoneLimit";
		public static readonly string PROPERTY_NAME_PHONELIMITDAYCOUNT = "PhoneLimitDayCount";
		public static readonly string PROPERTY_NAME_PHONELIMITMONTHCOUNT = "PhoneLimitMonthCount";
		public static readonly string PROPERTY_NAME_PHONELIMITTYPE = "PhoneLimitType";
		public static readonly string PROPERTY_NAME_LIMITPROVINCE = "LimitProvince";
		public static readonly string PROPERTY_NAME_LIMITPROVINCEAREA = "LimitProvinceArea";
		public static readonly string PROPERTY_NAME_PARENTID = "ParentID";
		public static readonly string PROPERTY_NAME_CREATEBY = "CreateBy";
		public static readonly string PROPERTY_NAME_CREATEAT = "CreateAt";
		public static readonly string PROPERTY_NAME_LASTMODIFYBY = "LastModifyBy";
		public static readonly string PROPERTY_NAME_LASTMODIFYAT = "LastModifyAt";
		public static readonly string PROPERTY_NAME_LASTMODIFYCOMMENT = "LastModifyComment";
		
        #endregion
	
        #region 私有成员变量

		private bool _isChanged;		
		private bool _isDeleted;
		
		private int _id;
		private string _name;
		private string _description;
		private string _code;
		private string _codeType;
		private SPChannelEntity _channelID;
		private string _mo;
		private string _mOType;
		private int? _mOLength;
		private int _orderIndex;
		private string _sPCode;
		private string _sPCodeType;
		private int? _sPCodeLength;
		private bool _hasFilters;
		private bool _hasParamsConvert;
		private bool _isDiable;
		private decimal? _price;
		private string _operationType;
		private bool _hasDayTotalLimit;
		private int _dayTotalLimitCount;
		private bool _hasPhoneLimit;
		private int _phoneLimitDayCount;
		private int _phoneLimitMonthCount;
		private int _phoneLimitType;
		private bool? _limitProvince;
		private string _limitProvinceArea;
		private SPCodeEntity _parentID;
		private int? _createBy;
		private DateTime? _createAt;
		private int? _lastModifyBy;
		private DateTime? _lastModifyAt;
		private string _lastModifyComment;
		
		#endregion

		#region 构造函数
		/// <summary>
		/// 默认构造函数
		/// </summary>
		public SPCodeEntity()
		{
			_id = 0;
			_name = String.Empty;
			_description = String.Empty;
			_code = String.Empty;
			_codeType = null;
			_channelID = null;
			_mo = String.Empty;
			_mOType = String.Empty;
			_mOLength = null;
			_orderIndex = 0;
			_sPCode = String.Empty;
			_sPCodeType = null;
			_sPCodeLength = null;
			_hasFilters = false;
			_hasParamsConvert = false;
			_isDiable = false;
			_price = null;
			_operationType = null;
			_hasDayTotalLimit = false;
			_dayTotalLimitCount = 0;
			_hasPhoneLimit = false;
			_phoneLimitDayCount = 0;
			_phoneLimitMonthCount = 0;
			_phoneLimitType = 1;
			_limitProvince = false;
			_limitProvinceArea = null;
			_parentID = null;
			_createBy = null;
			_createAt = null;
			_lastModifyBy = null;
			_lastModifyAt = null;
			_lastModifyComment = null;
		}
		#endregion

		#region 全构造函数
		/// <summary>
		/// 全构造函数
		/// </summary>
		public SPCodeEntity( int id, string name, string description, string code, string codeType, SPChannelEntity channelID, string mo, string mOType, int? mOLength, int orderIndex, string sPCode, string sPCodeType, int? sPCodeLength, bool hasFilters, bool hasParamsConvert, bool isDiable, decimal? price, string operationType, bool hasDayTotalLimit, int dayTotalLimitCount, bool hasPhoneLimit, int phoneLimitDayCount, int phoneLimitMonthCount, int phoneLimitType, bool? limitProvince, string limitProvinceArea, SPCodeEntity parentID, int? createBy, DateTime? createAt, int? lastModifyBy, DateTime? lastModifyAt, string lastModifyComment)
		{
			_id = id;
			_name = name;
			_description = description;
			_code = code;
			_codeType = codeType;
			_channelID = channelID;
			_mo = mo;
			_mOType = mOType;
			_mOLength = mOLength;
			_orderIndex = orderIndex;
			_sPCode = sPCode;
			_sPCodeType = sPCodeType;
			_sPCodeLength = sPCodeLength;
			_hasFilters = hasFilters;
			_hasParamsConvert = hasParamsConvert;
			_isDiable = isDiable;
			_price = price;
			_operationType = operationType;
			_hasDayTotalLimit = hasDayTotalLimit;
			_dayTotalLimitCount = dayTotalLimitCount;
			_hasPhoneLimit = hasPhoneLimit;
			_phoneLimitDayCount = phoneLimitDayCount;
			_phoneLimitMonthCount = phoneLimitMonthCount;
			_phoneLimitType = phoneLimitType;
			_limitProvince = limitProvince;
			_limitProvinceArea = limitProvinceArea;
			_parentID = parentID;
			_createBy = createBy;
			_createAt = createAt;
			_lastModifyBy = lastModifyBy;
			_lastModifyAt = lastModifyAt;
			_lastModifyComment = lastModifyComment;
		}
		#endregion     
	
	    #region 公共属性

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual int Id
		{
			get { return _id; }

			set	
			{
				_isChanged |= (_id != value); _id = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual string Name
		{
			get { return _name; }

			set	
			{

				if( value != null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for Name", value, value.ToString());
				_isChanged |= (_name != value); _name = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual string Description
		{
			get { return _description; }

			set	
			{

				if( value != null && value.Length > 400)
					throw new ArgumentOutOfRangeException("Invalid value for Description", value, value.ToString());
				_isChanged |= (_description != value); _description = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual string Code
		{
			get { return _code; }

			set	
			{

				if( value != null && value.Length > 400)
					throw new ArgumentOutOfRangeException("Invalid value for Code", value, value.ToString());
				_isChanged |= (_code != value); _code = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual string CodeType
		{
			get { return _codeType; }

			set	
			{

				if( value != null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for CodeType", value, value.ToString());
				_isChanged |= (_codeType != value); _codeType = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual SPChannelEntity ChannelID
		{
			get { return _channelID; }

			set	
			{
				_isChanged |= (_channelID != value); _channelID = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual string Mo
		{
			get { return _mo; }

			set	
			{

				if( value != null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for Mo", value, value.ToString());
				_isChanged |= (_mo != value); _mo = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual string MOType
		{
			get { return _mOType; }

			set	
			{

				if( value != null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for MOType", value, value.ToString());
				_isChanged |= (_mOType != value); _mOType = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual int? MOLength
		{
			get { return _mOLength; }

			set	
			{
				_isChanged |= (_mOLength != value); _mOLength = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual int OrderIndex
		{
			get { return _orderIndex; }

			set	
			{
				_isChanged |= (_orderIndex != value); _orderIndex = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual string SPCode
		{
			get { return _sPCode; }

			set	
			{

				if( value != null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for SPCode", value, value.ToString());
				_isChanged |= (_sPCode != value); _sPCode = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual string SPCodeType
		{
			get { return _sPCodeType; }

			set	
			{

				if( value != null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for SPCodeType", value, value.ToString());
				_isChanged |= (_sPCodeType != value); _sPCodeType = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual int? SPCodeLength
		{
			get { return _sPCodeLength; }

			set	
			{
				_isChanged |= (_sPCodeLength != value); _sPCodeLength = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual bool HasFilters
		{
			get { return _hasFilters; }

			set	
			{
				_isChanged |= (_hasFilters != value); _hasFilters = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual bool HasParamsConvert
		{
			get { return _hasParamsConvert; }

			set	
			{
				_isChanged |= (_hasParamsConvert != value); _hasParamsConvert = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual bool IsDiable
		{
			get { return _isDiable; }

			set	
			{
				_isChanged |= (_isDiable != value); _isDiable = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual decimal? Price
		{
			get { return _price; }

			set	
			{
				_isChanged |= (_price != value); _price = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual string OperationType
		{
			get { return _operationType; }

			set	
			{

				if( value != null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for OperationType", value, value.ToString());
				_isChanged |= (_operationType != value); _operationType = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual bool HasDayTotalLimit
		{
			get { return _hasDayTotalLimit; }

			set	
			{
				_isChanged |= (_hasDayTotalLimit != value); _hasDayTotalLimit = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual int DayTotalLimitCount
		{
			get { return _dayTotalLimitCount; }

			set	
			{
				_isChanged |= (_dayTotalLimitCount != value); _dayTotalLimitCount = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual bool HasPhoneLimit
		{
			get { return _hasPhoneLimit; }

			set	
			{
				_isChanged |= (_hasPhoneLimit != value); _hasPhoneLimit = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual int PhoneLimitDayCount
		{
			get { return _phoneLimitDayCount; }

			set	
			{
				_isChanged |= (_phoneLimitDayCount != value); _phoneLimitDayCount = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual int PhoneLimitMonthCount
		{
			get { return _phoneLimitMonthCount; }

			set	
			{
				_isChanged |= (_phoneLimitMonthCount != value); _phoneLimitMonthCount = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual int PhoneLimitType
		{
			get { return _phoneLimitType; }

			set	
			{
				_isChanged |= (_phoneLimitType != value); _phoneLimitType = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual bool? LimitProvince
		{
			get { return _limitProvince; }

			set	
			{
				_isChanged |= (_limitProvince != value); _limitProvince = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual string LimitProvinceArea
		{
			get { return _limitProvinceArea; }

			set	
			{

				if( value != null && value.Length > 400)
					throw new ArgumentOutOfRangeException("Invalid value for LimitProvinceArea", value, value.ToString());
				_isChanged |= (_limitProvinceArea != value); _limitProvinceArea = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual SPCodeEntity ParentID
		{
			get { return _parentID; }

			set	
			{
				_isChanged |= (_parentID != value); _parentID = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual int? CreateBy
		{
			get { return _createBy; }

			set	
			{
				_isChanged |= (_createBy != value); _createBy = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual DateTime? CreateAt
		{
			get { return _createAt; }

			set	
			{
				_isChanged |= (_createAt != value); _createAt = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual int? LastModifyBy
		{
			get { return _lastModifyBy; }

			set	
			{
				_isChanged |= (_lastModifyBy != value); _lastModifyBy = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual DateTime? LastModifyAt
		{
			get { return _lastModifyAt; }

			set	
			{
				_isChanged |= (_lastModifyAt != value); _lastModifyAt = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual string LastModifyComment
		{
			get { return _lastModifyComment; }

			set	
			{

				if( value != null && value.Length > 600)
					throw new ArgumentOutOfRangeException("Invalid value for LastModifyComment", value, value.ToString());
				_isChanged |= (_lastModifyComment != value); _lastModifyComment = value;
			}
		}
		/// <summary>
		/// 返回对象是否被改变。
		/// </summary>
		public virtual bool IsChanged
		{
			get { return _isChanged; }
		}
		
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public virtual bool IsDeleted
		{
			get { return _isDeleted; }
		}
		
		#endregion 

        #region 公共方法
		
		/// <summary>
		/// mark the item as deleted
		/// </summary>
		public virtual void MarkAsDeleted()
		{
			_isDeleted = true;
			_isChanged = true;
		}
		
		#endregion

		#region Equals 和 HashCode 方法覆盖
		/// <summary>
		/// local implementation of Equals based on unique value members
		/// </summary>
		public override bool Equals( object obj )
		{
			if( this == obj ) return true;
			
			if( ( obj == null ) || ( obj.GetType() != this.GetType() ) ) return false;
			
			SPCodeEntity castObj = (SPCodeEntity)obj;
			
			return ( castObj != null ) && ( this._id == castObj.Id );
		}
		
		/// <summary>
		/// local implementation of GetHashCode based on unique value members
		/// </summary>
		public override int GetHashCode()
		{
			
			int hash = 57; 
			hash = 27 * hash * _id.GetHashCode();

			return hash; 
		}
		#endregion
	
		#region ICloneable methods
		
		public virtual object Clone()
		{
			return this.MemberwiseClone();
		}
		
		#endregion
	
	}
}
