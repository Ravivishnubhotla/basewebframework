// Generated by MyGeneration Version # (1.3.0.9)
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace Legendigital.Framework.Common.BaseFramework.Entity.Tables
{
	/// <summary>
	///	
	/// </summary>
	[DataContract]
	public partial class SystemDictionaryEntity : ICloneable
	{
        #region 公共常量

		public static readonly string CLASS_FULL_NAME = "Legendigital.Framework.Common.BaseFramework.Entity.Tables.SystemDictionaryEntity";
		public static readonly string PROPERTY_NAME_SYSTEMDICTIONARYID = "SystemDictionaryID";
		public static readonly string PROPERTY_NAME_SYSTEMDICTIONARYGROUPID = "SystemDictionaryGroupID";
		public static readonly string PROPERTY_NAME_SYSTEMDICTIONARYKEY = "SystemDictionaryKey";
		public static readonly string PROPERTY_NAME_SYSTEMDICTIONARYCODE = "SystemDictionaryCode";
		public static readonly string PROPERTY_NAME_SYSTEMDICTIONARYVALUE = "SystemDictionaryValue";
		public static readonly string PROPERTY_NAME_SYSTEMDICTIONARYDESCIPTION = "SystemDictionaryDesciption";
		public static readonly string PROPERTY_NAME_SYSTEMDICTIONARYORDER = "SystemDictionaryOrder";
		public static readonly string PROPERTY_NAME_SYSTEMDICTIONARYISENABLE = "SystemDictionaryIsEnable";
		public static readonly string PROPERTY_NAME_SYSTEMDICTIONARYISSYSTEM = "SystemDictionaryIsSystem";
		
        #endregion
	
        #region 私有成员变量

		private bool _isChanged;		
		private bool _isDeleted;
		
		private int _systemDictionaryID;
		private SystemDictionaryGroupEntity _systemDictionaryGroupID;
		private string _systemDictionaryKey;
		private string _systemDictionaryCode;
		private string _systemDictionaryValue;
		private string _systemDictionaryDesciption;
		private int? _systemDictionaryOrder;
		private bool? _systemDictionaryIsEnable;
		private bool? _systemDictionaryIsSystem;
		
		#endregion

		#region 构造函数
		/// <summary>
		/// 默认构造函数
		/// </summary>
		public SystemDictionaryEntity()
		{
			_systemDictionaryID = 0;
			_systemDictionaryGroupID = null;
			_systemDictionaryKey = null;
			_systemDictionaryCode = null;
			_systemDictionaryValue = null;
			_systemDictionaryDesciption = null;
			_systemDictionaryOrder = null;
			_systemDictionaryIsEnable = null;
			_systemDictionaryIsSystem = null;
		}
		#endregion

		#region 全构造函数
		/// <summary>
		/// 全构造函数
		/// </summary>
		public SystemDictionaryEntity( int systemDictionaryID, SystemDictionaryGroupEntity systemDictionaryGroupID, string systemDictionaryKey, string systemDictionaryCode, string systemDictionaryValue, string systemDictionaryDesciption, int? systemDictionaryOrder, bool? systemDictionaryIsEnable, bool? systemDictionaryIsSystem)
		{
			_systemDictionaryID = systemDictionaryID;
			_systemDictionaryGroupID = systemDictionaryGroupID;
			_systemDictionaryKey = systemDictionaryKey;
			_systemDictionaryCode = systemDictionaryCode;
			_systemDictionaryValue = systemDictionaryValue;
			_systemDictionaryDesciption = systemDictionaryDesciption;
			_systemDictionaryOrder = systemDictionaryOrder;
			_systemDictionaryIsEnable = systemDictionaryIsEnable;
			_systemDictionaryIsSystem = systemDictionaryIsSystem;
		}
		#endregion     
	
	    #region 公共属性

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual int SystemDictionaryID
		{
			get { return _systemDictionaryID; }

			set	
			{
				_isChanged |= (_systemDictionaryID != value); _systemDictionaryID = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual SystemDictionaryGroupEntity SystemDictionaryGroupID
		{
			get { return _systemDictionaryGroupID; }

			set	
			{
				_isChanged |= (_systemDictionaryGroupID != value); _systemDictionaryGroupID = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual string SystemDictionaryKey
		{
			get { return _systemDictionaryKey; }

			set	
			{

				if( value != null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for SystemDictionaryKey", value, value.ToString());
				_isChanged |= (_systemDictionaryKey != value); _systemDictionaryKey = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual string SystemDictionaryCode
		{
			get { return _systemDictionaryCode; }

			set	
			{

				if( value != null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for SystemDictionaryCode", value, value.ToString());
				_isChanged |= (_systemDictionaryCode != value); _systemDictionaryCode = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual string SystemDictionaryValue
		{
			get { return _systemDictionaryValue; }

			set	
			{

				if( value != null && value.Length > 400)
					throw new ArgumentOutOfRangeException("Invalid value for SystemDictionaryValue", value, value.ToString());
				_isChanged |= (_systemDictionaryValue != value); _systemDictionaryValue = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual string SystemDictionaryDesciption
		{
			get { return _systemDictionaryDesciption; }

			set	
			{

				if( value != null && value.Length > 4000)
					throw new ArgumentOutOfRangeException("Invalid value for SystemDictionaryDesciption", value, value.ToString());
				_isChanged |= (_systemDictionaryDesciption != value); _systemDictionaryDesciption = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual int? SystemDictionaryOrder
		{
			get { return _systemDictionaryOrder; }

			set	
			{
				_isChanged |= (_systemDictionaryOrder != value); _systemDictionaryOrder = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual bool? SystemDictionaryIsEnable
		{
			get { return _systemDictionaryIsEnable; }

			set	
			{
				_isChanged |= (_systemDictionaryIsEnable != value); _systemDictionaryIsEnable = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual bool? SystemDictionaryIsSystem
		{
			get { return _systemDictionaryIsSystem; }

			set	
			{
				_isChanged |= (_systemDictionaryIsSystem != value); _systemDictionaryIsSystem = value;
			}
		}
		/// <summary>
		/// 返回对象是否被改变。
		/// </summary>
		public virtual bool IsChanged
		{
			get { return _isChanged; }
		}
		
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public virtual bool IsDeleted
		{
			get { return _isDeleted; }
		}
		
		#endregion 

        #region 公共方法
		
		/// <summary>
		/// mark the item as deleted
		/// </summary>
		public virtual void MarkAsDeleted()
		{
			_isDeleted = true;
			_isChanged = true;
		}
		
		#endregion

		#region Equals 和 HashCode 方法覆盖
		/// <summary>
		/// local implementation of Equals based on unique value members
		/// </summary>
		public override bool Equals( object obj )
		{
			if( this == obj ) return true;
			
			if( ( obj == null ) || ( obj.GetType() != this.GetType() ) ) return false;
			
			SystemDictionaryEntity castObj = (SystemDictionaryEntity)obj;
			
			return ( castObj != null ) && ( this._systemDictionaryID == castObj.SystemDictionaryID );
		}
		
		/// <summary>
		/// local implementation of GetHashCode based on unique value members
		/// </summary>
		public override int GetHashCode()
		{
			
			int hash = 57; 
			hash = 27 * hash * _systemDictionaryID.GetHashCode();

			return hash; 
		}
		#endregion
	
		#region ICloneable methods
		
		public virtual object Clone()
		{
			return this.MemberwiseClone();
		}
		
		#endregion
	
	}
}
