// --------------------------------------------------------------------------------------------------------------------
// <copyright company="foreveross" file="SystemAttachmentContentEntity.Designer.cs">
//   Copyright (c) Foreveross Enterprises. All rights reserved.
// </copyright>
// <summary>
//   Generated by MyGeneration Version # (1.3.0.9)
// </summary>
// --------------------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using Legendigital.Framework.Common.Entity;

namespace Legendigital.Framework.Common.BaseFramework.Entity.Tables
{
	/// <summary>
	///	
	/// </summary>
	[DataContract]
	public partial class SystemAttachmentContentEntity  : BaseTableEntity<int>,ICloneable
	{
      #region 公共常量

		public static readonly string CLASS_FULL_NAME = "Legendigital.Framework.Common.BaseFramework.Entity.Tables.SystemAttachmentContentEntity";
		public static readonly string PROPERTY_NAME_ID = "Id";
		public static readonly string PROPERTY_NAME_ATTACMENTID = "AttacmentID";
		public static readonly string PROPERTY_NAME_FILECONTENT = "FileContent";
		
        #endregion
	
 
		#region attacmentID字段外键查询字段
        public const string PROPERTY_ATTACMENTID_ALIAS_NAME = "AttacmentID_SystemAttachmentContentEntity_Alias";
		public const string PROPERTY_ATTACMENTID_ID = "AttacmentID_SystemAttachmentContentEntity_Alias.Id";
		public const string PROPERTY_ATTACMENTID_NAME = "AttacmentID_SystemAttachmentContentEntity_Alias.Name";
		public const string PROPERTY_ATTACMENTID_TYPE = "AttacmentID_SystemAttachmentContentEntity_Alias.Type";
		public const string PROPERTY_ATTACMENTID_DESCRIPTION = "AttacmentID_SystemAttachmentContentEntity_Alias.Description";
		public const string PROPERTY_ATTACMENTID_FILENAME = "AttacmentID_SystemAttachmentContentEntity_Alias.FileName";
		public const string PROPERTY_ATTACMENTID_MD5 = "AttacmentID_SystemAttachmentContentEntity_Alias.Md5";
		public const string PROPERTY_ATTACMENTID_SIZE = "AttacmentID_SystemAttachmentContentEntity_Alias.Size";
		public const string PROPERTY_ATTACMENTID_FILEEXT = "AttacmentID_SystemAttachmentContentEntity_Alias.FileExt";
		public const string PROPERTY_ATTACMENTID_PAGES = "AttacmentID_SystemAttachmentContentEntity_Alias.Pages";
		public const string PROPERTY_ATTACMENTID_FILEPATH = "AttacmentID_SystemAttachmentContentEntity_Alias.FilePath";
		public const string PROPERTY_ATTACMENTID_PARENTTYPE = "AttacmentID_SystemAttachmentContentEntity_Alias.ParentType";
		public const string PROPERTY_ATTACMENTID_PARENTID = "AttacmentID_SystemAttachmentContentEntity_Alias.ParentID";
		public const string PROPERTY_ATTACMENTID_CREATEBY = "AttacmentID_SystemAttachmentContentEntity_Alias.CreateBy";
		public const string PROPERTY_ATTACMENTID_CREATEAT = "AttacmentID_SystemAttachmentContentEntity_Alias.CreateAt";
		public const string PROPERTY_ATTACMENTID_LASTMODIFYBY = "AttacmentID_SystemAttachmentContentEntity_Alias.LastModifyBy";
		public const string PROPERTY_ATTACMENTID_LASTMODIFYAT = "AttacmentID_SystemAttachmentContentEntity_Alias.LastModifyAt";
		public const string PROPERTY_ATTACMENTID_LASTMODIFYCOMMENT = "AttacmentID_SystemAttachmentContentEntity_Alias.LastModifyComment";
		#endregion
      	
	
	
		 
		
		
		
		
	
        #region 私有成员变量

 
		
		private int _id;
		private SystemAttachmentEntity _attacmentID;
		private byte[] _fileContent;
		
		#endregion

		#region 构造函数
		/// <summary>
		/// 默认构造函数
		/// </summary>
		public SystemAttachmentContentEntity()
		{
			_id = 0;
			_attacmentID = null;
			_fileContent = new byte[1];
		}
		#endregion

		#region 全构造函数
		/// <summary>
		/// 全构造函数
		/// </summary>
		public SystemAttachmentContentEntity( int id, SystemAttachmentEntity attacmentID, byte[] fileContent)
		{
			_id = id;
			_attacmentID = attacmentID;
			_fileContent = fileContent;
		}
		#endregion     
	
	    #region 公共属性

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual int Id
		{
			get { return _id; }

			set	
			{
				_isChanged |= (_id != value); _id = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual SystemAttachmentEntity AttacmentID
		{
			get { return _attacmentID; }

			set	
			{
				_isChanged |= (_attacmentID != value); _attacmentID = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual byte[] FileContent
		{
			get { return _fileContent; }

			set	
			{

				if( value != null && value.Length > 2147483647)
					throw new ArgumentOutOfRangeException("Invalid value for FileContent", value, value.ToString());
				_isChanged |= (_fileContent != value); _fileContent = value;
			}
		}
	

		#endregion 

        

		#region Equals 和 HashCode 方法覆盖
		/// <summary>
		/// local implementation of Equals based on unique value members
		/// </summary>
		public override bool Equals( object obj )
		{
			 return this.CheckEquals(obj as SystemAttachmentContentEntity);
		}
		
		/// <summary>
		/// local implementation of GetHashCode based on unique value members
		/// </summary>
		public override int GetHashCode()
		{
			return GetEntityHashCode();
		}
		#endregion
		
		public override int GetDataEntityKey()
	    {
	        return this._id;
	    }
		
		
	
		#region ICloneable methods
		
		public virtual object Clone()
		{
			return this.MemberwiseClone();
		}
		
		#endregion
	
	}
}
