// Generated by MyGeneration Version # (1.3.0.9)
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using Legendigital.Framework.Common.Entity;

namespace Legendigital.Framework.Common.BaseFramework.Entity.Tables
{
	/// <summary>
	///	System Application
	/// </summary>
	[DataContract]
	public partial class SystemApplicationEntity  : BaseTableEntity,ICloneable
	{
      #region 公共常量

		public static readonly string CLASS_FULL_NAME = "Legendigital.Framework.Common.BaseFramework.Entity.Tables.SystemApplicationEntity";
		public static readonly string PROPERTY_NAME_SYSTEMAPPLICATIONID = "SystemApplicationID";
		public static readonly string PROPERTY_NAME_SYSTEMAPPLICATIONNAME = "SystemApplicationName";
		public static readonly string PROPERTY_NAME_SYSTEMAPPLICATIONCODE = "SystemApplicationCode";
		public static readonly string PROPERTY_NAME_SYSTEMAPPLICATIONDESCRIPTION = "SystemApplicationDescription";
		public static readonly string PROPERTY_NAME_SYSTEMAPPLICATIONURL = "SystemApplicationUrl";
		public static readonly string PROPERTY_NAME_SYSTEMAPPLICATIONISSYSTEMAPPLICATION = "SystemApplicationIsSystemApplication";
		public static readonly string PROPERTY_NAME_ORDERINDEX = "OrderIndex";
		public static readonly string PROPERTY_NAME_CREATEBY = "CreateBy";
		public static readonly string PROPERTY_NAME_CREATEAT = "CreateAt";
		public static readonly string PROPERTY_NAME_LASTMODIFYBY = "LastModifyBy";
		public static readonly string PROPERTY_NAME_LASTMODIFYAT = "LastModifyAt";
		public static readonly string PROPERTY_NAME_LASTMODIFYCOMMENT = "LastModifyComment";
		
        #endregion
	
 
      	
	
	
		 
		
		
		
		
	
        #region 私有成员变量

 
		
		private int _systemApplicationID;
		private string _systemApplicationName;
		private string _systemApplicationCode;
		private string _systemApplicationDescription;
		private string _systemApplicationUrl;
		private bool? _systemApplicationIsSystemApplication;
		private int? _orderIndex;
		private int? _createBy;
		private DateTime? _createAt;
		private int? _lastModifyBy;
		private DateTime? _lastModifyAt;
		private string _lastModifyComment;
		
		#endregion

		#region 构造函数
		/// <summary>
		/// 默认构造函数
		/// </summary>
		public SystemApplicationEntity()
		{
			_systemApplicationID = 0;
			_systemApplicationName = String.Empty;
			_systemApplicationCode = null;
			_systemApplicationDescription = null;
			_systemApplicationUrl = null;
			_systemApplicationIsSystemApplication = false;
			_orderIndex = null;
			_createBy = null;
			_createAt = null;
			_lastModifyBy = null;
			_lastModifyAt = null;
			_lastModifyComment = null;
		}
		#endregion

		#region 全构造函数
		/// <summary>
		/// 全构造函数
		/// </summary>
		public SystemApplicationEntity( int systemApplicationID, string systemApplicationName, string systemApplicationCode, string systemApplicationDescription, string systemApplicationUrl, bool? systemApplicationIsSystemApplication, int? orderIndex, int? createBy, DateTime? createAt, int? lastModifyBy, DateTime? lastModifyAt, string lastModifyComment)
		{
			_systemApplicationID = systemApplicationID;
			_systemApplicationName = systemApplicationName;
			_systemApplicationCode = systemApplicationCode;
			_systemApplicationDescription = systemApplicationDescription;
			_systemApplicationUrl = systemApplicationUrl;
			_systemApplicationIsSystemApplication = systemApplicationIsSystemApplication;
			_orderIndex = orderIndex;
			_createBy = createBy;
			_createAt = createAt;
			_lastModifyBy = lastModifyBy;
			_lastModifyAt = lastModifyAt;
			_lastModifyComment = lastModifyComment;
		}
		#endregion     
	
	    #region 公共属性

		/// <summary>
		/// Primary Key
		/// </summary>
		[DataMember]
		public virtual int SystemApplicationID
		{
			get { return _systemApplicationID; }

			set	
			{
				_isChanged |= (_systemApplicationID != value); _systemApplicationID = value;
			}
		}

		/// <summary>
		/// Application Name
		/// </summary>
		[DataMember]
		public virtual string SystemApplicationName
		{
			get { return _systemApplicationName; }

			set	
			{

				if( value != null && value.Length > 400)
					throw new ArgumentOutOfRangeException("Invalid value for SystemApplicationName", value, value.ToString());
				_isChanged |= (_systemApplicationName != value); _systemApplicationName = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual string SystemApplicationCode
		{
			get { return _systemApplicationCode; }

			set	
			{

				if( value != null && value.Length > 400)
					throw new ArgumentOutOfRangeException("Invalid value for SystemApplicationCode", value, value.ToString());
				_isChanged |= (_systemApplicationCode != value); _systemApplicationCode = value;
			}
		}

		/// <summary>
		/// Application Description
		/// </summary>
		[DataMember]
		public virtual string SystemApplicationDescription
		{
			get { return _systemApplicationDescription; }

			set	
			{

				if( value != null && value.Length > 4000)
					throw new ArgumentOutOfRangeException("Invalid value for SystemApplicationDescription", value, value.ToString());
				_isChanged |= (_systemApplicationDescription != value); _systemApplicationDescription = value;
			}
		}

		/// <summary>
		/// Appilcation Url
		/// </summary>
		[DataMember]
		public virtual string SystemApplicationUrl
		{
			get { return _systemApplicationUrl; }

			set	
			{

				if( value != null && value.Length > 400)
					throw new ArgumentOutOfRangeException("Invalid value for SystemApplicationUrl", value, value.ToString());
				_isChanged |= (_systemApplicationUrl != value); _systemApplicationUrl = value;
			}
		}

		/// <summary>
		/// {$DisplayName:"Is System Application"} Test description
		/// </summary>
		[DataMember]
		public virtual bool? SystemApplicationIsSystemApplication
		{
			get { return _systemApplicationIsSystemApplication; }

			set	
			{
				_isChanged |= (_systemApplicationIsSystemApplication != value); _systemApplicationIsSystemApplication = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual int? OrderIndex
		{
			get { return _orderIndex; }

			set	
			{
				_isChanged |= (_orderIndex != value); _orderIndex = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual int? CreateBy
		{
			get { return _createBy; }

			set	
			{
				_isChanged |= (_createBy != value); _createBy = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual DateTime? CreateAt
		{
			get { return _createAt; }

			set	
			{
				_isChanged |= (_createAt != value); _createAt = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual int? LastModifyBy
		{
			get { return _lastModifyBy; }

			set	
			{
				_isChanged |= (_lastModifyBy != value); _lastModifyBy = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual DateTime? LastModifyAt
		{
			get { return _lastModifyAt; }

			set	
			{
				_isChanged |= (_lastModifyAt != value); _lastModifyAt = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual string LastModifyComment
		{
			get { return _lastModifyComment; }

			set	
			{

				if( value != null && value.Length > 600)
					throw new ArgumentOutOfRangeException("Invalid value for LastModifyComment", value, value.ToString());
				_isChanged |= (_lastModifyComment != value); _lastModifyComment = value;
			}
		}
	

		#endregion 

        

		#region Equals 和 HashCode 方法覆盖
		/// <summary>
		/// local implementation of Equals based on unique value members
		/// </summary>
		public override bool Equals( object obj )
		{
			 return this.CheckEquals(obj as SystemApplicationEntity);
		}
		
		/// <summary>
		/// local implementation of GetHashCode based on unique value members
		/// </summary>
		public override int GetHashCode()
		{
			return GetEntityHashCode();
		}
		#endregion
		
		public override object GetDataEntityKey()
	    {
	        return this._systemApplicationID;
	    }
		
		
	
		#region ICloneable methods
		
		public virtual object Clone()
		{
			return this.MemberwiseClone();
		}
		
		#endregion
	
	}
}
