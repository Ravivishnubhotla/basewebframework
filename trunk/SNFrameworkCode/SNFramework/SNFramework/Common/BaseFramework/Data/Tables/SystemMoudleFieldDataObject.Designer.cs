// Generated by MyGeneration Version # (1.3.0.9)
using System;
using System.Collections.Generic;
using System.Text;
using NHibernate.Criterion;
using Legendigital.Framework.Common.Data.NHibernate.DynamicQuery;
using Legendigital.Framework.Common.Data.NHibernate.DynamicQuery.Propertys;
using Legendigital.Framework.Common.BaseFramework.Entity.Tables;
using Legendigital.Framework.Common.Data.NHibernate;


namespace Legendigital.Framework.Common.BaseFramework.Data.Tables
{
    public partial class SystemMoudleFieldDataObject : BaseNHibernateDataObject<SystemMoudleFieldEntity,int>
    {
		#region Expression Query Property (标准查询字段)
		public static readonly IntProperty PROPERTY_SYSTEMMOUDLEFIELDID = new IntProperty(Property.ForName(SystemMoudleFieldEntity.PROPERTY_NAME_SYSTEMMOUDLEFIELDID));		
		public static readonly StringProperty PROPERTY_SYSTEMMOUDLEFIELDNAMEEN = new StringProperty(Property.ForName(SystemMoudleFieldEntity.PROPERTY_NAME_SYSTEMMOUDLEFIELDNAMEEN));		
		public static readonly StringProperty PROPERTY_SYSTEMMOUDLEFIELDNAMECN = new StringProperty(Property.ForName(SystemMoudleFieldEntity.PROPERTY_NAME_SYSTEMMOUDLEFIELDNAMECN));		
		public static readonly StringProperty PROPERTY_SYSTEMMOUDLEFIELDNAMEDB = new StringProperty(Property.ForName(SystemMoudleFieldEntity.PROPERTY_NAME_SYSTEMMOUDLEFIELDNAMEDB));		
		public static readonly StringProperty PROPERTY_SYSTEMMOUDLEFIELDTYPE = new StringProperty(Property.ForName(SystemMoudleFieldEntity.PROPERTY_NAME_SYSTEMMOUDLEFIELDTYPE));		
		public static readonly BoolProperty PROPERTY_SYSTEMMOUDLEFIELDISREQUIRED = new BoolProperty(Property.ForName(SystemMoudleFieldEntity.PROPERTY_NAME_SYSTEMMOUDLEFIELDISREQUIRED));		
		public static readonly StringProperty PROPERTY_SYSTEMMOUDLEFIELDDEFAULTVALUE = new StringProperty(Property.ForName(SystemMoudleFieldEntity.PROPERTY_NAME_SYSTEMMOUDLEFIELDDEFAULTVALUE));		
		public static readonly BoolProperty PROPERTY_SYSTEMMOUDLEFIELDISKEYFIELD = new BoolProperty(Property.ForName(SystemMoudleFieldEntity.PROPERTY_NAME_SYSTEMMOUDLEFIELDISKEYFIELD));		
		public static readonly IntProperty PROPERTY_SYSTEMMOUDLEFIELDSIZE = new IntProperty(Property.ForName(SystemMoudleFieldEntity.PROPERTY_NAME_SYSTEMMOUDLEFIELDSIZE));		
		public static readonly StringProperty PROPERTY_SYSTEMMOUDLEFIELDDESCRIPTION = new StringProperty(Property.ForName(SystemMoudleFieldEntity.PROPERTY_NAME_SYSTEMMOUDLEFIELDDESCRIPTION));		
		public static readonly EntityProperty<SystemMoudleEntity> PROPERTY_SYSTEMMOUDLEID = new EntityProperty<SystemMoudleEntity>(Property.ForName(SystemMoudleFieldEntity.PROPERTY_NAME_SYSTEMMOUDLEID));
		#region systemMoudleID字段外键查询字段
        public static NHibernateDynamicQueryGenerator<SystemMoudleFieldEntity> InClude_SystemMoudleID_Query(NHibernateDynamicQueryGenerator<SystemMoudleFieldEntity> queryGenerator)
        {
            return queryGenerator.AddAlians(SystemMoudleFieldEntity.PROPERTY_NAME_SYSTEMMOUDLEID, PROPERTY_SYSTEMMOUDLEID_ALIAS_NAME);
        }
        public static readonly string PROPERTY_SYSTEMMOUDLEID_ALIAS_NAME = "SystemMoudleID_SystemMoudleFieldEntity_Alias";
		public static readonly IntProperty PROPERTY_SYSTEMMOUDLEID_MOUDLEID = new IntProperty(Property.ForName(PROPERTY_SYSTEMMOUDLEID_ALIAS_NAME + ".MoudleID"));
		public static readonly StringProperty PROPERTY_SYSTEMMOUDLEID_MOUDLENAMECN = new StringProperty(Property.ForName(PROPERTY_SYSTEMMOUDLEID_ALIAS_NAME + ".MoudleNameCn"));
		public static readonly StringProperty PROPERTY_SYSTEMMOUDLEID_MOUDLENAMEEN = new StringProperty(Property.ForName(PROPERTY_SYSTEMMOUDLEID_ALIAS_NAME + ".MoudleNameEn"));
		public static readonly StringProperty PROPERTY_SYSTEMMOUDLEID_MOUDLENAMEDB = new StringProperty(Property.ForName(PROPERTY_SYSTEMMOUDLEID_ALIAS_NAME + ".MoudleNameDb"));
		public static readonly StringProperty PROPERTY_SYSTEMMOUDLEID_MOUDLEDESCRIPTION = new StringProperty(Property.ForName(PROPERTY_SYSTEMMOUDLEID_ALIAS_NAME + ".MoudleDescription"));
		public static readonly EntityProperty<SystemApplicationEntity> PROPERTY_SYSTEMMOUDLEID_APPLICATIONID = new EntityProperty<SystemApplicationEntity>(Property.ForName(PROPERTY_SYSTEMMOUDLEID_ALIAS_NAME + ".ApplicationID"));
		public static readonly BoolProperty PROPERTY_SYSTEMMOUDLEID_MOUDLEISSYSTEMMOUDLE = new BoolProperty(Property.ForName(PROPERTY_SYSTEMMOUDLEID_ALIAS_NAME + ".MoudleIsSystemMoudle"));
		public static readonly IntProperty PROPERTY_SYSTEMMOUDLEID_ORDERINDEX = new IntProperty(Property.ForName(PROPERTY_SYSTEMMOUDLEID_ALIAS_NAME + ".OrderIndex"));
		public static readonly IntProperty PROPERTY_SYSTEMMOUDLEID_CREATEBY = new IntProperty(Property.ForName(PROPERTY_SYSTEMMOUDLEID_ALIAS_NAME + ".CreateBy"));
		public static readonly DateTimeProperty PROPERTY_SYSTEMMOUDLEID_CREATEAT = new DateTimeProperty(Property.ForName(PROPERTY_SYSTEMMOUDLEID_ALIAS_NAME + ".CreateAt"));
		public static readonly IntProperty PROPERTY_SYSTEMMOUDLEID_LASTMODIFYBY = new IntProperty(Property.ForName(PROPERTY_SYSTEMMOUDLEID_ALIAS_NAME + ".LastModifyBy"));
		public static readonly DateTimeProperty PROPERTY_SYSTEMMOUDLEID_LASTMODIFYAT = new DateTimeProperty(Property.ForName(PROPERTY_SYSTEMMOUDLEID_ALIAS_NAME + ".LastModifyAt"));
		public static readonly StringProperty PROPERTY_SYSTEMMOUDLEID_LASTMODIFYCOMMENT = new StringProperty(Property.ForName(PROPERTY_SYSTEMMOUDLEID_ALIAS_NAME + ".LastModifyComment"));
		#endregion
		public static readonly IntProperty PROPERTY_ORDERINDEX = new IntProperty(Property.ForName(SystemMoudleFieldEntity.PROPERTY_NAME_ORDERINDEX));		
		public static readonly IntProperty PROPERTY_CREATEBY = new IntProperty(Property.ForName(SystemMoudleFieldEntity.PROPERTY_NAME_CREATEBY));		
		public static readonly DateTimeProperty PROPERTY_CREATEAT = new DateTimeProperty(Property.ForName(SystemMoudleFieldEntity.PROPERTY_NAME_CREATEAT));		
		public static readonly IntProperty PROPERTY_LASTMODIFYBY = new IntProperty(Property.ForName(SystemMoudleFieldEntity.PROPERTY_NAME_LASTMODIFYBY));		
		public static readonly DateTimeProperty PROPERTY_LASTMODIFYAT = new DateTimeProperty(Property.ForName(SystemMoudleFieldEntity.PROPERTY_NAME_LASTMODIFYAT));		
		public static readonly StringProperty PROPERTY_LASTMODIFYCOMMENT = new StringProperty(Property.ForName(SystemMoudleFieldEntity.PROPERTY_NAME_LASTMODIFYCOMMENT));		
      
		#region 子类集合字段查询字段
	
		#endregion

		#endregion

		
		public override string[] PkPropertyName
        {
            get { return new string[] { "SystemMoudleFieldID" }; }
        }
		
		public override Type GetFieldTypeByFieldName(string fieldName)
        {
			switch (fieldName)
            {
                case "SystemMoudleFieldID":
                    return typeof (int);
                case "SystemMoudleFieldNameEn":
                    return typeof (string);
                case "SystemMoudleFieldNameCn":
                    return typeof (string);
                case "SystemMoudleFieldNameDb":
                    return typeof (string);
                case "SystemMoudleFieldType":
                    return typeof (string);
                case "SystemMoudleFieldIsRequired":
                    return typeof (bool);
                case "SystemMoudleFieldDefaultValue":
                    return typeof (string);
                case "SystemMoudleFieldIsKeyField":
                    return typeof (bool);
                case "SystemMoudleFieldSize":
                    return typeof (int);
                case "SystemMoudleFieldDescription":
                    return typeof (string);
                case "SystemMoudleID":
                    return typeof (int);
                case "OrderIndex":
                    return typeof (int);
                case "CreateBy":
                    return typeof (int);
                case "CreateAt":
                    return typeof (DateTime);
                case "LastModifyBy":
                    return typeof (int);
                case "LastModifyAt":
                    return typeof (DateTime);
                case "LastModifyComment":
                    return typeof (string);
          }
			return typeof(string);
        }
		
        public override void InClude_Parent_Table(string parent_alias, NHibernateDynamicQueryGenerator<SystemMoudleFieldEntity> queryGenerator)
        {
            switch (parent_alias)
            {
	            case "SystemMoudleID_SystemMoudleFieldEntity_Alias":
                    queryGenerator.AddAlians(SystemMoudleFieldEntity.PROPERTY_NAME_SYSTEMMOUDLEID, PROPERTY_SYSTEMMOUDLEID_ALIAS_NAME);
                    break;
                default:
                    break;
 
            }
        }
		
		
		
		public List<SystemMoudleFieldEntity> GetList_By_SystemMoudleID_SystemMoudleEntity(SystemMoudleEntity fkentity)
		{
			NHibernateDynamicQueryGenerator<SystemMoudleFieldEntity> dynamicQueryGenerator = this.GetNewQueryBuilder();

            dynamicQueryGenerator.AddWhereClause(PROPERTY_SYSTEMMOUDLEID.Eq(fkentity));

            return this.FindListByQueryBuilder(dynamicQueryGenerator);
		}
		
		
        public List<SystemMoudleFieldEntity> GetPageList_By_SystemMoudleID_SystemMoudleEntity(string orderByColumnName, bool isDesc, SystemMoudleEntity fkentity, PageQueryParams pageQueryParams)
        {
            NHibernateDynamicQueryGenerator<SystemMoudleFieldEntity> dynamicQueryGenerator = this.GetNewQueryBuilder();

            dynamicQueryGenerator.AddWhereClause(PROPERTY_SYSTEMMOUDLEID.Eq(fkentity));

            AddDefaultOrderByToQueryGenerator(orderByColumnName, isDesc, dynamicQueryGenerator);

            return FindListByPageByQueryBuilder(dynamicQueryGenerator, pageQueryParams);
        }		
		

		
		
    }
}
