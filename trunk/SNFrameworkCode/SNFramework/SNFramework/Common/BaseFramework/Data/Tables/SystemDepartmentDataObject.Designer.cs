// Generated by MyGeneration Version # (1.3.0.9)
using System;
using System.Collections.Generic;
using System.Text;
using NHibernate.Criterion;
using Legendigital.Framework.Common.Data.NHibernate.DynamicQuery;
using Legendigital.Framework.Common.Data.NHibernate.DynamicQuery.Propertys;
using Legendigital.Framework.Common.BaseFramework.Entity.Tables;
using Legendigital.Framework.Common.Data.NHibernate;


namespace Legendigital.Framework.Common.BaseFramework.Data.Tables
{
    public partial class SystemDepartmentDataObject : BaseNHibernateDataObject<SystemDepartmentEntity>
    {
		#region Expression Query Property (标准查询字段)
		public static readonly IntProperty PROPERTY_DEPARTMENTID = new IntProperty(Property.ForName(SystemDepartmentEntity.PROPERTY_NAME_DEPARTMENTID));		
		public static readonly EntityProperty<SystemDepartmentEntity> PROPERTY_PARENTDEPARTMENTID = new EntityProperty<SystemDepartmentEntity>(Property.ForName(SystemDepartmentEntity.PROPERTY_NAME_PARENTDEPARTMENTID));
		public static readonly StringProperty PROPERTY_DEPARTMENTNAMECN = new StringProperty(Property.ForName(SystemDepartmentEntity.PROPERTY_NAME_DEPARTMENTNAMECN));		
		public static readonly StringProperty PROPERTY_DEPARTMENTNAMEEN = new StringProperty(Property.ForName(SystemDepartmentEntity.PROPERTY_NAME_DEPARTMENTNAMEEN));		
		public static readonly StringProperty PROPERTY_DEPARTMENTDECRIPTION = new StringProperty(Property.ForName(SystemDepartmentEntity.PROPERTY_NAME_DEPARTMENTDECRIPTION));		
		public static readonly IntProperty PROPERTY_DEPARTMENTSORTINDEX = new IntProperty(Property.ForName(SystemDepartmentEntity.PROPERTY_NAME_DEPARTMENTSORTINDEX));		
		public static readonly IntProperty PROPERTY_CREATEBY = new IntProperty(Property.ForName(SystemDepartmentEntity.PROPERTY_NAME_CREATEBY));		
		public static readonly DateTimeProperty PROPERTY_CREATEAT = new DateTimeProperty(Property.ForName(SystemDepartmentEntity.PROPERTY_NAME_CREATEAT));		
		public static readonly IntProperty PROPERTY_LASTMODIFYBY = new IntProperty(Property.ForName(SystemDepartmentEntity.PROPERTY_NAME_LASTMODIFYBY));		
		public static readonly DateTimeProperty PROPERTY_LASTMODIFYAT = new DateTimeProperty(Property.ForName(SystemDepartmentEntity.PROPERTY_NAME_LASTMODIFYAT));		
		public static readonly StringProperty PROPERTY_LASTMODIFYCOMMENT = new StringProperty(Property.ForName(SystemDepartmentEntity.PROPERTY_NAME_LASTMODIFYCOMMENT));		
      
		#region 子类集合字段查询字段
	
		#endregion

		#endregion

		
		public override string[] PkPropertyName
        {
            get { return new string[] { "DepartmentID" }; }
        }
		
		public override Type GetFieldTypeByFieldName(string fieldName)
        {
			switch (fieldName)
            {
                case "DepartmentID":
                    return typeof (int);
                case "ParentDepartmentID":
                    return typeof (int);
                case "DepartmentNameCn":
                    return typeof (string);
                case "DepartmentNameEn":
                    return typeof (string);
                case "DepartmentDecription":
                    return typeof (string);
                case "DepartmentSortIndex":
                    return typeof (int);
                case "CreateBy":
                    return typeof (int);
                case "CreateAt":
                    return typeof (DateTime);
                case "LastModifyBy":
                    return typeof (int);
                case "LastModifyAt":
                    return typeof (DateTime);
                case "LastModifyComment":
                    return typeof (string);
          }
			return typeof(string);
        }
		
        public override void InClude_Parent_Table(string parent_alias, NHibernateDynamicQueryGenerator<SystemDepartmentEntity> queryGenerator)
        {
            switch (parent_alias)
            {

 
            }
        }
		
		
		

		
		
    }
}
