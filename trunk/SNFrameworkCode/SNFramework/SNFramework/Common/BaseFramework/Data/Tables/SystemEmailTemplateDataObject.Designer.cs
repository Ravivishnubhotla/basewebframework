// Generated by MyGeneration Version # (1.3.0.9)
using System;
using System.Collections.Generic;
using System.Text;
using NHibernate.Criterion;
using Legendigital.Framework.Common.Data.NHibernate.DynamicQuery.Propertys;
using Legendigital.Framework.Common.Data.NHibernate.DynamicQuery;
using Legendigital.Framework.Common.BaseFramework.Entity.Tables;
using Legendigital.Framework.Common.BaseFramework.Entity.Tables;
using Legendigital.Framework.Common.Data.NHibernate;


namespace Legendigital.Framework.Common.BaseFramework.Data.Tables
{
    public partial class SystemEmailTemplateDataObject : BaseNHibernateDataObject<SystemEmailTemplateEntity>
    {
		#region Expression Query Property (标准查询字段)
		public static readonly IntProperty PROPERTY_EMAILTEMPLATEID = new IntProperty(Property.ForName(SystemEmailTemplateEntity.PROPERTY_NAME_EMAILTEMPLATEID));		
		public static readonly StringProperty PROPERTY_NAME = new StringProperty(Property.ForName(SystemEmailTemplateEntity.PROPERTY_NAME_NAME));		
		public static readonly StringProperty PROPERTY_CODE = new StringProperty(Property.ForName(SystemEmailTemplateEntity.PROPERTY_NAME_CODE));		
		public static readonly StringProperty PROPERTY_DESCRIPTION = new StringProperty(Property.ForName(SystemEmailTemplateEntity.PROPERTY_NAME_DESCRIPTION));		
		public static readonly StringProperty PROPERTY_TEMPLATETYPE = new StringProperty(Property.ForName(SystemEmailTemplateEntity.PROPERTY_NAME_TEMPLATETYPE));		
		public static readonly StringProperty PROPERTY_TITLETEMPLATE = new StringProperty(Property.ForName(SystemEmailTemplateEntity.PROPERTY_NAME_TITLETEMPLATE));		
		public static readonly StringProperty PROPERTY_BODYTEMPLATE = new StringProperty(Property.ForName(SystemEmailTemplateEntity.PROPERTY_NAME_BODYTEMPLATE));		
		public static readonly BoolProperty PROPERTY_ISHTMLEMAIL = new BoolProperty(Property.ForName(SystemEmailTemplateEntity.PROPERTY_NAME_ISHTMLEMAIL));		
		public static readonly BoolProperty PROPERTY_ISENABLE = new BoolProperty(Property.ForName(SystemEmailTemplateEntity.PROPERTY_NAME_ISENABLE));		
		public static readonly DateTimeProperty PROPERTY_CREATEDATE = new DateTimeProperty(Property.ForName(SystemEmailTemplateEntity.PROPERTY_NAME_CREATEDATE));		
		public static readonly IntProperty PROPERTY_CREATEBY = new IntProperty(Property.ForName(SystemEmailTemplateEntity.PROPERTY_NAME_CREATEBY));		
      
		#region 子类集合字段查询字段
	
		#endregion

		#endregion

		
		public override string[] PkPropertyName
        {
            get { return new string[] { "EmailTemplateID" }; }
        }
		
		public override Type GetFieldTypeByFieldName(string fieldName)
        {
			switch (fieldName)
            {
                case "EmailTemplateID":
                    return typeof (int);
                case "Name":
                    return typeof (string);
                case "Code":
                    return typeof (string);
                case "Description":
                    return typeof (string);
                case "TemplateType":
                    return typeof (string);
                case "TitleTemplate":
                    return typeof (string);
                case "BodyTemplate":
                    return typeof (string);
                case "IsHtmlEmail":
                    return typeof (bool);
                case "IsEnable":
                    return typeof (bool);
                case "CreateDate":
                    return typeof (DateTime);
                case "CreateBy":
                    return typeof (int);
          }
			return typeof(string);
        }
		

		
		
    }
}
