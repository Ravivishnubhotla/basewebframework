// Generated by MyGeneration Version # (1.3.0.9)
using System;
using System.Collections.Generic;
using System.Text;
using NHibernate.Criterion;
using Legendigital.Framework.Common.Data.NHibernate.DynamicQuery;
using Legendigital.Framework.Common.BaseFramework.Entity.Tables;
using Legendigital.Framework.Common.Data.NHibernate;

namespace Legendigital.Framework.Common.BaseFramework.Data.Tables
{
    public partial class SystemUserGroupRoleRelationDataObject
    {
        public List<SystemRoleEntity> GetAssignedRoleByUserGroup(SystemUserGroupEntity entity)
        {
            NHibernateDynamicQueryGenerator<SystemUserGroupRoleRelationEntity> queryGenerator = this.GetNewQueryBuilder();
            queryGenerator.AddWhereClause(PROPERTY_USERGROUPID.Eq(entity));

            return this.FindListByProjection<SystemRoleEntity>(queryGenerator, PROPERTY_ROLEID.CriterionProperty);
        }

        /// <summary>
        /// 获取用户组角色关系是否存在
        /// </summary>
        /// <param name="userGroup">用户组</param>
        /// <param name="role">角色</param>
        /// <returns></returns>
        public SystemUserGroupRoleRelationEntity GetUserGroupRoleRelation(SystemUserGroupEntity userGroupEntity, SystemRoleEntity roleEntity)
        {
            NHibernateDynamicQueryGenerator<SystemUserGroupRoleRelationEntity> queryGenerator = this.GetNewQueryBuilder();

            queryGenerator.AddWhereClause(PROPERTY_USERGROUPID.Eq(userGroupEntity));

            queryGenerator.AddWhereClause(PROPERTY_ROLEID.Eq(roleEntity));

            return this.FindSingleEntityByQueryBuilder(queryGenerator);
        }
    }
}
