// Generated by MyGeneration Version # (1.3.0.9)
using System;
using System.Collections.Generic;
using System.Text;
using Legendigital.Framework.Common.BaseFramework.Bussiness.Wrappers;
using NHibernate.Criterion;
using Legendigital.Framework.Common.Data.NHibernate.DynamicQuery;
using Legendigital.Framework.Common.BaseFramework.Entity.Tables;
using Legendigital.Framework.Common.Data.NHibernate;

namespace Legendigital.Framework.Common.BaseFramework.Data.Tables
{
    public partial class SystemDictionaryDataObject
    {
        /// <summary>
        /// 根据字典类别名获取该类别下的所有可用的字典项（已排序）
        /// </summary>
        /// <param name="categoryName"></param>
        /// <returns></returns>
        public IList<SystemDictionaryEntity> GetDictionaryByGroupID(SystemDictionaryGroupEntity dictionaryGroup)
        {
            NHibernateDynamicQueryGenerator<SystemDictionaryEntity> dynamicQueryGenerator = this.GetNewQueryBuilder();

            dynamicQueryGenerator.AddWhereClause(PROPERTY_SYSTEMDICTIONARYGROUPID.Eq(dictionaryGroup));

            dynamicQueryGenerator.AddWhereClause(PROPERTY_SYSTEMDICTIONARYISENABLE.Eq(true));

            dynamicQueryGenerator.AddOrderBy(PROPERTY_SYSTEMDICTIONARYORDER.Asc());

            return this.FindListByQueryBuilder(dynamicQueryGenerator);
        }

        /// <summary>
        /// 根据字典类别和字典的key值获取字典项（字典必须可用）
        /// </summary>
        /// <param name="categoryName"></param>
        /// <param name="key"></param>
        /// <returns></returns>
        public SystemDictionaryEntity GetDictionaryByGroupIDAndKey(SystemDictionaryGroupEntity dictionaryGroup, string key)
        {
            NHibernateDynamicQueryGenerator<SystemDictionaryEntity> dynamicQueryGenerator = this.GetNewQueryBuilder();

            dynamicQueryGenerator.AddWhereClause(PROPERTY_SYSTEMDICTIONARYGROUPID.Eq(dictionaryGroup));

            dynamicQueryGenerator.AddWhereClause(PROPERTY_SYSTEMDICTIONARYISENABLE.Eq(true));

            dynamicQueryGenerator.AddWhereClause(PROPERTY_SYSTEMDICTIONARYKEY.Eq(key));

            return this.FindSingleEntityByQueryBuilder(dynamicQueryGenerator);
        }
 

        public List<SystemDictionaryEntity> FindAllByGroupIdAndOrder()
        {
            NHibernateDynamicQueryGenerator<SystemDictionaryEntity> dynamicQueryGenerator = this.GetNewQueryBuilder();

            dynamicQueryGenerator.AddWhereClause(PROPERTY_SYSTEMDICTIONARYISENABLE.Eq(true));

            dynamicQueryGenerator.AddOrderBy(PROPERTY_SYSTEMDICTIONARYGROUPID.Asc());

            dynamicQueryGenerator.AddOrderBy(PROPERTY_SYSTEMDICTIONARYORDER.Asc());

            return this.FindListByQueryBuilder(dynamicQueryGenerator);

        }

        public SystemDictionaryEntity FindMaxOrderItemByGroupID(SystemDictionaryGroupEntity dictionaryGroup)
        {
            NHibernateDynamicQueryGenerator<SystemDictionaryEntity> dynamicQueryGenerator = this.GetNewQueryBuilder();

            dynamicQueryGenerator.AddWhereClause(PROPERTY_SYSTEMDICTIONARYGROUPID.Eq(dictionaryGroup));

            dynamicQueryGenerator.AddOrderBy(PROPERTY_SYSTEMDICTIONARYORDER.Desc());

            return this.FindSingleEntityByQueryBuilder(dynamicQueryGenerator);
        }
 
    }
}
