// Generated by MyGeneration Version # (1.3.0.9)
using System;
using System.Collections.Generic;
using System.Text;
using NHibernate.Criterion;
using Legendigital.Framework.Common.Data.NHibernate.DynamicQuery;
using Legendigital.Framework.Common.BaseFramework.Entity.Tables;
using Legendigital.Framework.Common.Data.NHibernate;

namespace Legendigital.Framework.Common.BaseFramework.Data.Tables
{
    public partial class SystemUserProfileDataObject
    {
        public List<SystemUserProfileEntity> FindAllByUsers(List<SystemUserEntity> entities)
        {
            NHibernateDynamicQueryGenerator<SystemUserProfileEntity> queryGenerator = this.GetNewQueryBuilder();

            queryGenerator.AddWhereClause(PROPERTY_USERID.In(entities));

            return this.FindListByQueryBuilder(queryGenerator);
        }

        public SystemUserProfileEntity GetUserProfileByUser(SystemUserEntity userEntity)
        {
            NHibernateDynamicQueryGenerator<SystemUserProfileEntity> queryGenerator = this.GetNewQueryBuilder();

            queryGenerator.AddWhereClause(PROPERTY_USERID.Eq(userEntity));

            return this.FindSingleEntityByQueryBuilder(queryGenerator);
        }

        public object GetUserProfileByUserIDAndPropertys(SystemUserEntity userEntity, SystemUserProfilePropertysEntity propertysEntity)
        {
            NHibernateDynamicQueryGenerator<SystemUserProfileEntity> queryGenerator = this.GetNewQueryBuilder();

            queryGenerator.AddWhereClause(PROPERTY_USERID.Eq(userEntity));

            queryGenerator.AddWhereClause(PROPERTY_PROPERTYID.Eq(propertysEntity));

            return this.FindListByQueryBuilder(queryGenerator);
        }

        public int GetNumberOfInactiveProfiles(DateTime inactiveSinceDate)
        {
            NHibernateDynamicQueryGenerator<SystemUserProfileEntity> queryGenerator = this.GetNewQueryBuilder();

            queryGenerator.AddWhereClause(PROPERTY_LASTUPDATEDDATE.Lt(inactiveSinceDate));

            return CountQueryBuilder(queryGenerator);
        }
    }
}
