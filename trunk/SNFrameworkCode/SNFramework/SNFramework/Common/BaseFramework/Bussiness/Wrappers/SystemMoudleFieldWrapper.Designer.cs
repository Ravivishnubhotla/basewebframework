// Generated by MyGeneration Version # (1.3.0.9)
using System;
using System.Collections.Generic;
using System.Text;
using Spring.Context.Support;
using Common.Logging;
using Legendigital.Framework.Common.Bussiness.NHibernate;
using Legendigital.Framework.Common.BaseFramework.Entity.Tables;
using Legendigital.Framework.Common.BaseFramework.Bussiness.ServiceProxys.Tables.Container;
using Legendigital.Framework.Common.BaseFramework.Bussiness.ServiceProxys.Tables;
using Legendigital.Framework.Common.Data.NHibernate.DynamicQuery;

namespace Legendigital.Framework.Common.BaseFramework.Bussiness.Wrappers
{
    public partial class SystemMoudleFieldWrapper   : BaseSpringNHibernateWrapper<SystemMoudleFieldEntity, ISystemMoudleFieldServiceProxy, SystemMoudleFieldWrapper,int>
    {
        #region Member

		internal static readonly ISystemMoudleFieldServiceProxy businessProxy = ((Legendigital.Framework.Common.BaseFramework.Bussiness.ServiceProxys.Tables.Container.BaseFrameworkServiceProxyContainer)(ContextRegistry.GetContext().GetObject("BaseFrameworkServiceProxyContainerIocID", typeof(Legendigital.Framework.Common.BaseFramework.Bussiness.ServiceProxys.Tables.Container.BaseFrameworkServiceProxyContainer)))).SystemMoudleFieldServiceProxyInstance;
		
		
		internal SystemMoudleFieldEntity Entity
        {
            get { return this.entity; }
        }
		
        #endregion

        #region Construtor
		public SystemMoudleFieldWrapper() : base(new SystemMoudleFieldEntity())
        {
            
        }

        internal SystemMoudleFieldWrapper(SystemMoudleFieldEntity entityObj)
            : base(entityObj)
        {
        }
		#endregion

        #region Process Column Name
        private static string ProcessColumnName(string columnName)
        {
            switch (columnName)
            {
		        case "SystemMoudleID_MoudleID":
					return PROPERTY_SYSTEMMOUDLEID_MOUDLEID;
		        case "SystemMoudleID_MoudleNameCn":
					return PROPERTY_SYSTEMMOUDLEID_MOUDLENAMECN;
		        case "SystemMoudleID_MoudleNameEn":
					return PROPERTY_SYSTEMMOUDLEID_MOUDLENAMEEN;
		        case "SystemMoudleID_MoudleNameDb":
					return PROPERTY_SYSTEMMOUDLEID_MOUDLENAMEDB;
		        case "SystemMoudleID_MoudleDescription":
					return PROPERTY_SYSTEMMOUDLEID_MOUDLEDESCRIPTION;
		        case "SystemMoudleID_ApplicationID":
					return PROPERTY_SYSTEMMOUDLEID_APPLICATIONID;
		        case "SystemMoudleID_MoudleIsSystemMoudle":
					return PROPERTY_SYSTEMMOUDLEID_MOUDLEISSYSTEMMOUDLE;
		        case "SystemMoudleID_OrderIndex":
					return PROPERTY_SYSTEMMOUDLEID_ORDERINDEX;
		        case "SystemMoudleID_CreateBy":
					return PROPERTY_SYSTEMMOUDLEID_CREATEBY;
		        case "SystemMoudleID_CreateAt":
					return PROPERTY_SYSTEMMOUDLEID_CREATEAT;
		        case "SystemMoudleID_LastModifyBy":
					return PROPERTY_SYSTEMMOUDLEID_LASTMODIFYBY;
		        case "SystemMoudleID_LastModifyAt":
					return PROPERTY_SYSTEMMOUDLEID_LASTMODIFYAT;
		        case "SystemMoudleID_LastModifyComment":
					return PROPERTY_SYSTEMMOUDLEID_LASTMODIFYCOMMENT;
              default:
                    return columnName;
            }
        }

        private static void ProcessQueryFilters(List<QueryFilter> filters)
        {
            foreach (QueryFilter queryFilter in filters)
            {
                queryFilter.FilterFieldName = ProcessColumnName(queryFilter.FilterFieldName);
            }
        }
		#endregion
		
      #region 公共常量

		public static readonly string CLASS_FULL_NAME = "Legendigital.Framework.Common.BaseFramework.Entity.Tables.SystemMoudleFieldEntity";
		public static readonly string PROPERTY_NAME_SYSTEMMOUDLEFIELDID = "SystemMoudleFieldID";
		public static readonly string PROPERTY_NAME_SYSTEMMOUDLEFIELDNAMEEN = "SystemMoudleFieldNameEn";
		public static readonly string PROPERTY_NAME_SYSTEMMOUDLEFIELDNAMECN = "SystemMoudleFieldNameCn";
		public static readonly string PROPERTY_NAME_SYSTEMMOUDLEFIELDNAMEDB = "SystemMoudleFieldNameDb";
		public static readonly string PROPERTY_NAME_SYSTEMMOUDLEFIELDTYPE = "SystemMoudleFieldType";
		public static readonly string PROPERTY_NAME_SYSTEMMOUDLEFIELDISREQUIRED = "SystemMoudleFieldIsRequired";
		public static readonly string PROPERTY_NAME_SYSTEMMOUDLEFIELDDEFAULTVALUE = "SystemMoudleFieldDefaultValue";
		public static readonly string PROPERTY_NAME_SYSTEMMOUDLEFIELDISKEYFIELD = "SystemMoudleFieldIsKeyField";
		public static readonly string PROPERTY_NAME_SYSTEMMOUDLEFIELDSIZE = "SystemMoudleFieldSize";
		public static readonly string PROPERTY_NAME_SYSTEMMOUDLEFIELDDESCRIPTION = "SystemMoudleFieldDescription";
		public static readonly string PROPERTY_NAME_SYSTEMMOUDLEID = "SystemMoudleID";
		public static readonly string PROPERTY_NAME_ORDERINDEX = "OrderIndex";
		public static readonly string PROPERTY_NAME_CREATEBY = "CreateBy";
		public static readonly string PROPERTY_NAME_CREATEAT = "CreateAt";
		public static readonly string PROPERTY_NAME_LASTMODIFYBY = "LastModifyBy";
		public static readonly string PROPERTY_NAME_LASTMODIFYAT = "LastModifyAt";
		public static readonly string PROPERTY_NAME_LASTMODIFYCOMMENT = "LastModifyComment";
		
        #endregion
	
 
		#region systemMoudleID字段外键查询字段
        public const string PROPERTY_SYSTEMMOUDLEID_ALIAS_NAME = "SystemMoudleID_SystemMoudleFieldEntity_Alias";
		public const string PROPERTY_SYSTEMMOUDLEID_MOUDLEID = "SystemMoudleID_SystemMoudleFieldEntity_Alias.MoudleID";
		public const string PROPERTY_SYSTEMMOUDLEID_MOUDLENAMECN = "SystemMoudleID_SystemMoudleFieldEntity_Alias.MoudleNameCn";
		public const string PROPERTY_SYSTEMMOUDLEID_MOUDLENAMEEN = "SystemMoudleID_SystemMoudleFieldEntity_Alias.MoudleNameEn";
		public const string PROPERTY_SYSTEMMOUDLEID_MOUDLENAMEDB = "SystemMoudleID_SystemMoudleFieldEntity_Alias.MoudleNameDb";
		public const string PROPERTY_SYSTEMMOUDLEID_MOUDLEDESCRIPTION = "SystemMoudleID_SystemMoudleFieldEntity_Alias.MoudleDescription";
		public const string PROPERTY_SYSTEMMOUDLEID_APPLICATIONID = "SystemMoudleID_SystemMoudleFieldEntity_Alias.ApplicationID";
		public const string PROPERTY_SYSTEMMOUDLEID_MOUDLEISSYSTEMMOUDLE = "SystemMoudleID_SystemMoudleFieldEntity_Alias.MoudleIsSystemMoudle";
		public const string PROPERTY_SYSTEMMOUDLEID_ORDERINDEX = "SystemMoudleID_SystemMoudleFieldEntity_Alias.OrderIndex";
		public const string PROPERTY_SYSTEMMOUDLEID_CREATEBY = "SystemMoudleID_SystemMoudleFieldEntity_Alias.CreateBy";
		public const string PROPERTY_SYSTEMMOUDLEID_CREATEAT = "SystemMoudleID_SystemMoudleFieldEntity_Alias.CreateAt";
		public const string PROPERTY_SYSTEMMOUDLEID_LASTMODIFYBY = "SystemMoudleID_SystemMoudleFieldEntity_Alias.LastModifyBy";
		public const string PROPERTY_SYSTEMMOUDLEID_LASTMODIFYAT = "SystemMoudleID_SystemMoudleFieldEntity_Alias.LastModifyAt";
		public const string PROPERTY_SYSTEMMOUDLEID_LASTMODIFYCOMMENT = "SystemMoudleID_SystemMoudleFieldEntity_Alias.LastModifyComment";
		#endregion
      	
	
	
		 
		
		
		
		


		#region Public Property
		/// <summary>
		/// ??ID
		/// </summary>		
		public int SystemMoudleFieldID
		{
			get
			{
				return entity.SystemMoudleFieldID;
			}
			set
			{
				entity.SystemMoudleFieldID = value;
			}
		}
		/// <summary>
		/// ?????
		/// </summary>		
		public string SystemMoudleFieldNameEn
		{
			get
			{
				return entity.SystemMoudleFieldNameEn;
			}
			set
			{
				entity.SystemMoudleFieldNameEn = value;
			}
		}
		/// <summary>
		/// ?????
		/// </summary>		
		public string SystemMoudleFieldNameCn
		{
			get
			{
				return entity.SystemMoudleFieldNameCn;
			}
			set
			{
				entity.SystemMoudleFieldNameCn = value;
			}
		}
		/// <summary>
		/// ??????
		/// </summary>		
		public string SystemMoudleFieldNameDb
		{
			get
			{
				return entity.SystemMoudleFieldNameDb;
			}
			set
			{
				entity.SystemMoudleFieldNameDb = value;
			}
		}
		/// <summary>
		/// ????
		/// </summary>		
		public string SystemMoudleFieldType
		{
			get
			{
				return entity.SystemMoudleFieldType;
			}
			set
			{
				entity.SystemMoudleFieldType = value;
			}
		}
		/// <summary>
		/// ??????
		/// </summary>		
		public bool? SystemMoudleFieldIsRequired
		{
			get
			{
				return entity.SystemMoudleFieldIsRequired;
			}
			set
			{
				entity.SystemMoudleFieldIsRequired = value;
			}
		}
		/// <summary>
		/// ?????
		/// </summary>		
		public string SystemMoudleFieldDefaultValue
		{
			get
			{
				return entity.SystemMoudleFieldDefaultValue;
			}
			set
			{
				entity.SystemMoudleFieldDefaultValue = value;
			}
		}
		/// <summary>
		/// ???????
		/// </summary>		
		public bool? SystemMoudleFieldIsKeyField
		{
			get
			{
				return entity.SystemMoudleFieldIsKeyField;
			}
			set
			{
				entity.SystemMoudleFieldIsKeyField = value;
			}
		}
		/// <summary>
		/// ????
		/// </summary>		
		public int? SystemMoudleFieldSize
		{
			get
			{
				return entity.SystemMoudleFieldSize;
			}
			set
			{
				entity.SystemMoudleFieldSize = value;
			}
		}
		/// <summary>
		/// ????
		/// </summary>		
		public string SystemMoudleFieldDescription
		{
			get
			{
				return entity.SystemMoudleFieldDescription;
			}
			set
			{
				entity.SystemMoudleFieldDescription = value;
			}
		}
		/// <summary>
		/// ??????ID
		/// </summary>		
		public SystemMoudleWrapper SystemMoudleID
		{
			get
			{
				return SystemMoudleWrapper.ConvertEntityToWrapper(entity.SystemMoudleID) ;
			}
			set
			{
				entity.SystemMoudleID = ((value == null) ? null : value.Entity);
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public int? OrderIndex
		{
			get
			{
				return entity.OrderIndex;
			}
			set
			{
				entity.OrderIndex = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public int? CreateBy
		{
			get
			{
				return entity.CreateBy;
			}
			set
			{
				entity.CreateBy = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public DateTime? CreateAt
		{
			get
			{
				return entity.CreateAt;
			}
			set
			{
				entity.CreateAt = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public int? LastModifyBy
		{
			get
			{
				return entity.LastModifyBy;
			}
			set
			{
				entity.LastModifyBy = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public DateTime? LastModifyAt
		{
			get
			{
				return entity.LastModifyAt;
			}
			set
			{
				entity.LastModifyAt = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public string LastModifyComment
		{
			get
			{
				return entity.LastModifyComment;
			}
			set
			{
				entity.LastModifyComment = value;
			}
		}
		#endregion 


		#region Query Property
		
		
		#region systemMoudleID字段外键查询字段
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_SYSTEMMOUDLEID_MOUDLEID)]
        public int? SystemMoudleID_MoudleID
        {
            get
            {
                if (this. SystemMoudleID == null)
                    return null;
                return  SystemMoudleID.MoudleID;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_SYSTEMMOUDLEID_MOUDLENAMECN)]
        public string SystemMoudleID_MoudleNameCn
        {
            get
            {
                if (this. SystemMoudleID == null)
                    return null;
                return  SystemMoudleID.MoudleNameCn;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_SYSTEMMOUDLEID_MOUDLENAMEEN)]
        public string SystemMoudleID_MoudleNameEn
        {
            get
            {
                if (this. SystemMoudleID == null)
                    return null;
                return  SystemMoudleID.MoudleNameEn;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_SYSTEMMOUDLEID_MOUDLENAMEDB)]
        public string SystemMoudleID_MoudleNameDb
        {
            get
            {
                if (this. SystemMoudleID == null)
                    return null;
                return  SystemMoudleID.MoudleNameDb;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_SYSTEMMOUDLEID_MOUDLEDESCRIPTION)]
        public string SystemMoudleID_MoudleDescription
        {
            get
            {
                if (this. SystemMoudleID == null)
                    return null;
                return  SystemMoudleID.MoudleDescription;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_SYSTEMMOUDLEID_APPLICATIONID)]
        public SystemApplicationWrapper SystemMoudleID_ApplicationID
        {
            get
            {
                if (this. SystemMoudleID == null)
                    return null;
                return  SystemMoudleID.ApplicationID;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_SYSTEMMOUDLEID_MOUDLEISSYSTEMMOUDLE)]
        public bool? SystemMoudleID_MoudleIsSystemMoudle
        {
            get
            {
                if (this. SystemMoudleID == null)
                    return null;
                return  SystemMoudleID.MoudleIsSystemMoudle;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_SYSTEMMOUDLEID_ORDERINDEX)]
        public int? SystemMoudleID_OrderIndex
        {
            get
            {
                if (this. SystemMoudleID == null)
                    return null;
                return  SystemMoudleID.OrderIndex;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_SYSTEMMOUDLEID_CREATEBY)]
        public int? SystemMoudleID_CreateBy
        {
            get
            {
                if (this. SystemMoudleID == null)
                    return null;
                return  SystemMoudleID.CreateBy;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_SYSTEMMOUDLEID_CREATEAT)]
        public DateTime? SystemMoudleID_CreateAt
        {
            get
            {
                if (this. SystemMoudleID == null)
                    return null;
                return  SystemMoudleID.CreateAt;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_SYSTEMMOUDLEID_LASTMODIFYBY)]
        public int? SystemMoudleID_LastModifyBy
        {
            get
            {
                if (this. SystemMoudleID == null)
                    return null;
                return  SystemMoudleID.LastModifyBy;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_SYSTEMMOUDLEID_LASTMODIFYAT)]
        public DateTime? SystemMoudleID_LastModifyAt
        {
            get
            {
                if (this. SystemMoudleID == null)
                    return null;
                return  SystemMoudleID.LastModifyAt;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_SYSTEMMOUDLEID_LASTMODIFYCOMMENT)]
        public string SystemMoudleID_LastModifyComment
        {
            get
            {
                if (this. SystemMoudleID == null)
                    return null;
                return  SystemMoudleID.LastModifyComment;
            }
        }
		#endregion
      	
   
		#endregion


        #region "FKQuery"
		
        public static List<SystemMoudleFieldWrapper> FindAllByOrderByAndFilterAndSystemMoudleID(string orderByColumnName, bool isDesc,   SystemMoudleWrapper systemMoudleID,  PageQueryParams pageQueryParams)
        {
            return ConvertToWrapperList(businessProxy.FindAllByOrderByAndFilterAndSystemMoudleID(orderByColumnName, isDesc,   systemMoudleID.Entity, pageQueryParams));
        }

        public static List<SystemMoudleFieldWrapper> FindAllBySystemMoudleID(SystemMoudleWrapper systemMoudleID)
        {
            return ConvertToWrapperList(businessProxy.FindAllBySystemMoudleID(systemMoudleID.Entity));
        }
		



        #endregion








        #region Static Common Data Operation
		
		internal static List<SystemMoudleFieldWrapper> ConvertToWrapperList(List<SystemMoudleFieldEntity> entitylist)
        {
            List<SystemMoudleFieldWrapper> list = new List<SystemMoudleFieldWrapper>();
            foreach (SystemMoudleFieldEntity lentity in entitylist)
            {
                list.Add(ConvertEntityToWrapper(lentity));
            }
            return list;
        }

		internal static List<SystemMoudleFieldWrapper> ConvertToWrapperList(IList<SystemMoudleFieldEntity> entitylist)
        {
            List<SystemMoudleFieldWrapper> list = new List<SystemMoudleFieldWrapper>();
            foreach (SystemMoudleFieldEntity lentity in entitylist)
            {
                list.Add(ConvertEntityToWrapper(lentity));
            }
            return list;
        }
		
		internal static List<SystemMoudleFieldEntity> ConvertToEntityList(List<SystemMoudleFieldWrapper> wrapperlist)
        {
            List<SystemMoudleFieldEntity> list = new List<SystemMoudleFieldEntity>();
            foreach (SystemMoudleFieldWrapper wrapper in wrapperlist)
            {
                list.Add(wrapper.entity);
            }
            return list;
        }

        internal static SystemMoudleFieldWrapper ConvertEntityToWrapper(SystemMoudleFieldEntity entity)
        {
            if (entity == null)
                return null;
				
            if (entity.SystemMoudleFieldID == 0)
                return null;

            return new SystemMoudleFieldWrapper(entity);
        }
		
		#endregion

    }//End Class
}// End Namespace

