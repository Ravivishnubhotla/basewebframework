// Generated by MyGeneration Version # (1.3.0.9)
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using Spring.Context.Support;
using Common.Logging;
using Legendigital.Framework.Common.Bussiness.NHibernate;
using Legendigital.Framework.Common.BaseFramework.Entity.Tables;
using Legendigital.Framework.Common.BaseFramework.Bussiness.ServiceProxys.Tables.Container;
using Legendigital.Framework.Common.BaseFramework.Bussiness.ServiceProxys.Tables;
using Legendigital.Framework.Common.Data.NHibernate.DynamicQuery;

namespace Legendigital.Framework.Common.BaseFramework.Bussiness.Wrappers
{
    public partial class SystemViewItemWrapper    : BaseSpringNHibernateWrapper<SystemViewItemEntity, ISystemViewItemServiceProxy, SystemViewItemWrapper,int>
    {
        #region Member

		internal static readonly ISystemViewItemServiceProxy businessProxy = ((Legendigital.Framework.Common.BaseFramework.Bussiness.ServiceProxys.Tables.Container.BaseFrameworkServiceProxyContainer)(ContextRegistry.GetContext().GetObject("BaseFrameworkServiceProxyContainerIocID", typeof(Legendigital.Framework.Common.BaseFramework.Bussiness.ServiceProxys.Tables.Container.BaseFrameworkServiceProxyContainer)))).SystemViewItemServiceProxyInstance;
		
		
		internal SystemViewItemEntity Entity
        {
            get { return this.entity; }
        }
		
        #endregion

        #region Construtor
		public SystemViewItemWrapper() : base(new SystemViewItemEntity())
        {
            
        }

        internal SystemViewItemWrapper(SystemViewItemEntity entityObj)
            : base(entityObj)
        {
        }
		#endregion

        #region Process Column Name
        private static string ProcessColumnName(string columnName)
        {
            switch (columnName)
            {
		        case "SystemViewID_SystemViewID":
					return PROPERTY_SYSTEMVIEWID_SYSTEMVIEWID;
		        case "SystemViewID_SystemViewNameCn":
					return PROPERTY_SYSTEMVIEWID_SYSTEMVIEWNAMECN;
		        case "SystemViewID_SystemViewNameEn":
					return PROPERTY_SYSTEMVIEWID_SYSTEMVIEWNAMEEN;
		        case "SystemViewID_ApplicationID":
					return PROPERTY_SYSTEMVIEWID_APPLICATIONID;
		        case "SystemViewID_SystemViewDescription":
					return PROPERTY_SYSTEMVIEWID_SYSTEMVIEWDESCRIPTION;
		        case "SystemViewID_OrderIndex":
					return PROPERTY_SYSTEMVIEWID_ORDERINDEX;
		        case "SystemViewID_CreateBy":
					return PROPERTY_SYSTEMVIEWID_CREATEBY;
		        case "SystemViewID_CreateAt":
					return PROPERTY_SYSTEMVIEWID_CREATEAT;
		        case "SystemViewID_LastModifyBy":
					return PROPERTY_SYSTEMVIEWID_LASTMODIFYBY;
		        case "SystemViewID_LastModifyAt":
					return PROPERTY_SYSTEMVIEWID_LASTMODIFYAT;
		        case "SystemViewID_LastModifyComment":
					return PROPERTY_SYSTEMVIEWID_LASTMODIFYCOMMENT;
              default:
                    return columnName;
            }
        }

        private static void ProcessQueryFilters(List<QueryFilter> filters)
        {
            foreach (QueryFilter queryFilter in filters)
            {
                queryFilter.FilterFieldName = ProcessColumnName(queryFilter.FilterFieldName);
            }
        }
		#endregion
		
      #region 公共常量

		public static readonly string CLASS_FULL_NAME = "Legendigital.Framework.Common.BaseFramework.Entity.Tables.SystemViewItemEntity";
		public static readonly string PROPERTY_NAME_SYSTEMVIEWITEMID = "SystemViewItemID";
		public static readonly string PROPERTY_NAME_SYSTEMVIEWITEMNAMEEN = "SystemViewItemNameEn";
		public static readonly string PROPERTY_NAME_SYSTEMVIEWITEMNAMECN = "SystemViewItemNameCn";
		public static readonly string PROPERTY_NAME_SYSTEMVIEWITEMDESCRIPTION = "SystemViewItemDescription";
		public static readonly string PROPERTY_NAME_SYSTEMVIEWITEMDISPLAYFORMAT = "SystemViewItemDisplayFormat";
		public static readonly string PROPERTY_NAME_SYSTEMVIEWID = "SystemViewID";
		public static readonly string PROPERTY_NAME_ORDERINDEX = "OrderIndex";
		public static readonly string PROPERTY_NAME_CREATEBY = "CreateBy";
		public static readonly string PROPERTY_NAME_CREATEAT = "CreateAt";
		public static readonly string PROPERTY_NAME_LASTMODIFYBY = "LastModifyBy";
		public static readonly string PROPERTY_NAME_LASTMODIFYAT = "LastModifyAt";
		public static readonly string PROPERTY_NAME_LASTMODIFYCOMMENT = "LastModifyComment";
		
        #endregion
	
 
		#region systemViewID字段外键查询字段
        public const string PROPERTY_SYSTEMVIEWID_ALIAS_NAME = "SystemViewID_SystemViewItemEntity_Alias";
		public const string PROPERTY_SYSTEMVIEWID_SYSTEMVIEWID = "SystemViewID_SystemViewItemEntity_Alias.SystemViewID";
		public const string PROPERTY_SYSTEMVIEWID_SYSTEMVIEWNAMECN = "SystemViewID_SystemViewItemEntity_Alias.SystemViewNameCn";
		public const string PROPERTY_SYSTEMVIEWID_SYSTEMVIEWNAMEEN = "SystemViewID_SystemViewItemEntity_Alias.SystemViewNameEn";
		public const string PROPERTY_SYSTEMVIEWID_APPLICATIONID = "SystemViewID_SystemViewItemEntity_Alias.ApplicationID";
		public const string PROPERTY_SYSTEMVIEWID_SYSTEMVIEWDESCRIPTION = "SystemViewID_SystemViewItemEntity_Alias.SystemViewDescription";
		public const string PROPERTY_SYSTEMVIEWID_ORDERINDEX = "SystemViewID_SystemViewItemEntity_Alias.OrderIndex";
		public const string PROPERTY_SYSTEMVIEWID_CREATEBY = "SystemViewID_SystemViewItemEntity_Alias.CreateBy";
		public const string PROPERTY_SYSTEMVIEWID_CREATEAT = "SystemViewID_SystemViewItemEntity_Alias.CreateAt";
		public const string PROPERTY_SYSTEMVIEWID_LASTMODIFYBY = "SystemViewID_SystemViewItemEntity_Alias.LastModifyBy";
		public const string PROPERTY_SYSTEMVIEWID_LASTMODIFYAT = "SystemViewID_SystemViewItemEntity_Alias.LastModifyAt";
		public const string PROPERTY_SYSTEMVIEWID_LASTMODIFYCOMMENT = "SystemViewID_SystemViewItemEntity_Alias.LastModifyComment";
		#endregion
      	
	
	
		 
		
		
		
		


		#region Public Property
		/// <summary>
		/// ??
		/// </summary>
		[DataMember]
		public int SystemViewItemID
		{
			get
			{
				return entity.SystemViewItemID;
			}
			set
			{
				entity.SystemViewItemID = value;
			}
		}
		/// <summary>
		/// ?????
		/// </summary>
		[DataMember]
		public string SystemViewItemNameEn
		{
			get
			{
				return entity.SystemViewItemNameEn;
			}
			set
			{
				entity.SystemViewItemNameEn = value;
			}
		}
		/// <summary>
		/// ?????
		/// </summary>
		[DataMember]
		public string SystemViewItemNameCn
		{
			get
			{
				return entity.SystemViewItemNameCn;
			}
			set
			{
				entity.SystemViewItemNameCn = value;
			}
		}
		/// <summary>
		/// ????
		/// </summary>
		[DataMember]
		public string SystemViewItemDescription
		{
			get
			{
				return entity.SystemViewItemDescription;
			}
			set
			{
				entity.SystemViewItemDescription = value;
			}
		}
		/// <summary>
		/// ??????
		/// </summary>
		[DataMember]
		public string SystemViewItemDisplayFormat
		{
			get
			{
				return entity.SystemViewItemDisplayFormat;
			}
			set
			{
				entity.SystemViewItemDisplayFormat = value;
			}
		}
		/// <summary>
		/// ????ID
		/// </summary>
		[DataMember]
		public SystemViewWrapper SystemViewID
		{
			get
			{
				return SystemViewWrapper.ConvertEntityToWrapper(entity.SystemViewID) ;
			}
			set
			{
				entity.SystemViewID = ((value == null) ? null : value.Entity);
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public int? OrderIndex
		{
			get
			{
				return entity.OrderIndex;
			}
			set
			{
				entity.OrderIndex = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public int? CreateBy
		{
			get
			{
				return entity.CreateBy;
			}
			set
			{
				entity.CreateBy = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public DateTime? CreateAt
		{
			get
			{
				return entity.CreateAt;
			}
			set
			{
				entity.CreateAt = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public int? LastModifyBy
		{
			get
			{
				return entity.LastModifyBy;
			}
			set
			{
				entity.LastModifyBy = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public DateTime? LastModifyAt
		{
			get
			{
				return entity.LastModifyAt;
			}
			set
			{
				entity.LastModifyAt = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public string LastModifyComment
		{
			get
			{
				return entity.LastModifyComment;
			}
			set
			{
				entity.LastModifyComment = value;
			}
		}
		#endregion 


		#region Query Property
		
		
		#region systemViewID字段外键查询字段
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_SYSTEMVIEWID_SYSTEMVIEWID)]
        public int? SystemViewID_SystemViewID
        {
            get
            {
                if (this. SystemViewID == null)
                    return null;
                return  SystemViewID.SystemViewID;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_SYSTEMVIEWID_SYSTEMVIEWNAMECN)]
        public string SystemViewID_SystemViewNameCn
        {
            get
            {
                if (this. SystemViewID == null)
                    return null;
                return  SystemViewID.SystemViewNameCn;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_SYSTEMVIEWID_SYSTEMVIEWNAMEEN)]
        public string SystemViewID_SystemViewNameEn
        {
            get
            {
                if (this. SystemViewID == null)
                    return null;
                return  SystemViewID.SystemViewNameEn;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_SYSTEMVIEWID_APPLICATIONID)]
        public SystemApplicationWrapper SystemViewID_ApplicationID
        {
            get
            {
                if (this. SystemViewID == null)
                    return null;
                return  SystemViewID.ApplicationID;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_SYSTEMVIEWID_SYSTEMVIEWDESCRIPTION)]
        public string SystemViewID_SystemViewDescription
        {
            get
            {
                if (this. SystemViewID == null)
                    return null;
                return  SystemViewID.SystemViewDescription;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_SYSTEMVIEWID_ORDERINDEX)]
        public int? SystemViewID_OrderIndex
        {
            get
            {
                if (this. SystemViewID == null)
                    return null;
                return  SystemViewID.OrderIndex;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_SYSTEMVIEWID_CREATEBY)]
        public int? SystemViewID_CreateBy
        {
            get
            {
                if (this. SystemViewID == null)
                    return null;
                return  SystemViewID.CreateBy;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_SYSTEMVIEWID_CREATEAT)]
        public DateTime? SystemViewID_CreateAt
        {
            get
            {
                if (this. SystemViewID == null)
                    return null;
                return  SystemViewID.CreateAt;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_SYSTEMVIEWID_LASTMODIFYBY)]
        public int? SystemViewID_LastModifyBy
        {
            get
            {
                if (this. SystemViewID == null)
                    return null;
                return  SystemViewID.LastModifyBy;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_SYSTEMVIEWID_LASTMODIFYAT)]
        public DateTime? SystemViewID_LastModifyAt
        {
            get
            {
                if (this. SystemViewID == null)
                    return null;
                return  SystemViewID.LastModifyAt;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_SYSTEMVIEWID_LASTMODIFYCOMMENT)]
        public string SystemViewID_LastModifyComment
        {
            get
            {
                if (this. SystemViewID == null)
                    return null;
                return  SystemViewID.LastModifyComment;
            }
        }
		#endregion
      	
   
		#endregion


        #region "FKQuery"
		
        public static List<SystemViewItemWrapper> FindAllByOrderByAndFilterAndSystemViewID(string orderByColumnName, bool isDesc,   SystemViewWrapper systemViewID,  PageQueryParams pageQueryParams)
        {
            return ConvertToWrapperList(businessProxy.FindAllByOrderByAndFilterAndSystemViewID(orderByColumnName, isDesc,   systemViewID.Entity, pageQueryParams));
        }

        public static List<SystemViewItemWrapper> FindAllBySystemViewID(SystemViewWrapper systemViewID)
        {
            return ConvertToWrapperList(businessProxy.FindAllBySystemViewID(systemViewID.Entity));
        }
		



        #endregion








        #region Static Common Data Operation
		
		internal static List<SystemViewItemWrapper> ConvertToWrapperList(List<SystemViewItemEntity> entitylist)
        {
            List<SystemViewItemWrapper> list = new List<SystemViewItemWrapper>();
            foreach (SystemViewItemEntity lentity in entitylist)
            {
                list.Add(ConvertEntityToWrapper(lentity));
            }
            return list;
        }

		internal static List<SystemViewItemWrapper> ConvertToWrapperList(IList<SystemViewItemEntity> entitylist)
        {
            List<SystemViewItemWrapper> list = new List<SystemViewItemWrapper>();
            foreach (SystemViewItemEntity lentity in entitylist)
            {
                list.Add(ConvertEntityToWrapper(lentity));
            }
            return list;
        }
		
		internal static List<SystemViewItemEntity> ConvertToEntityList(List<SystemViewItemWrapper> wrapperlist)
        {
            List<SystemViewItemEntity> list = new List<SystemViewItemEntity>();
            foreach (SystemViewItemWrapper wrapper in wrapperlist)
            {
                list.Add(wrapper.entity);
            }
            return list;
        }

        internal static SystemViewItemWrapper ConvertEntityToWrapper(SystemViewItemEntity entity)
        {
            if (entity == null)
                return null;
				
            if (entity.SystemViewItemID == 0)
                return null;

            return new SystemViewItemWrapper(entity);
        }
		
		#endregion

    }//End Class
}// End Namespace

