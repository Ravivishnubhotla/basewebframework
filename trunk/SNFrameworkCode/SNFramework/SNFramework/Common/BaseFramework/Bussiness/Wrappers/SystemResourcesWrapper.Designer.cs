// Generated by MyGeneration Version # (1.3.0.9)
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using Spring.Context.Support;
using Common.Logging;
using Legendigital.Framework.Common.Bussiness.NHibernate;
using Legendigital.Framework.Common.BaseFramework.Entity.Tables;
using Legendigital.Framework.Common.BaseFramework.Bussiness.ServiceProxys.Tables.Container;
using Legendigital.Framework.Common.BaseFramework.Bussiness.ServiceProxys.Tables;
using Legendigital.Framework.Common.Data.NHibernate.DynamicQuery;

namespace Legendigital.Framework.Common.BaseFramework.Bussiness.Wrappers
{
    public partial class SystemResourcesWrapper    : BaseSpringNHibernateWrapper<SystemResourcesEntity, ISystemResourcesServiceProxy, SystemResourcesWrapper,int>
    {
        #region Member

		internal static readonly ISystemResourcesServiceProxy businessProxy = ((Legendigital.Framework.Common.BaseFramework.Bussiness.ServiceProxys.Tables.Container.BaseFrameworkServiceProxyContainer)(ContextRegistry.GetContext().GetObject("BaseFrameworkServiceProxyContainerIocID", typeof(Legendigital.Framework.Common.BaseFramework.Bussiness.ServiceProxys.Tables.Container.BaseFrameworkServiceProxyContainer)))).SystemResourcesServiceProxyInstance;
		
		
		internal SystemResourcesEntity Entity
        {
            get { return this.entity; }
        }
		
        #endregion

        #region Construtor
		public SystemResourcesWrapper() : base(new SystemResourcesEntity())
        {
            
        }

        internal SystemResourcesWrapper(SystemResourcesEntity entityObj)
            : base(entityObj)
        {
        }
		#endregion

        #region Process Column Name
        private static string ProcessColumnName(string columnName)
        {
            switch (columnName)
            {
		        case "MoudleID_MoudleID":
					return PROPERTY_MOUDLEID_MOUDLEID;
		        case "MoudleID_MoudleNameCn":
					return PROPERTY_MOUDLEID_MOUDLENAMECN;
		        case "MoudleID_MoudleNameEn":
					return PROPERTY_MOUDLEID_MOUDLENAMEEN;
		        case "MoudleID_MoudleNameDb":
					return PROPERTY_MOUDLEID_MOUDLENAMEDB;
		        case "MoudleID_MoudleDescription":
					return PROPERTY_MOUDLEID_MOUDLEDESCRIPTION;
		        case "MoudleID_ApplicationID":
					return PROPERTY_MOUDLEID_APPLICATIONID;
		        case "MoudleID_MoudleIsSystemMoudle":
					return PROPERTY_MOUDLEID_MOUDLEISSYSTEMMOUDLE;
		        case "MoudleID_OrderIndex":
					return PROPERTY_MOUDLEID_ORDERINDEX;
		        case "MoudleID_CreateBy":
					return PROPERTY_MOUDLEID_CREATEBY;
		        case "MoudleID_CreateAt":
					return PROPERTY_MOUDLEID_CREATEAT;
		        case "MoudleID_LastModifyBy":
					return PROPERTY_MOUDLEID_LASTMODIFYBY;
		        case "MoudleID_LastModifyAt":
					return PROPERTY_MOUDLEID_LASTMODIFYAT;
		        case "MoudleID_LastModifyComment":
					return PROPERTY_MOUDLEID_LASTMODIFYCOMMENT;
              default:
                    return columnName;
            }
        }

        private static void ProcessQueryFilters(List<QueryFilter> filters)
        {
            foreach (QueryFilter queryFilter in filters)
            {
                queryFilter.FilterFieldName = ProcessColumnName(queryFilter.FilterFieldName);
            }
        }
		#endregion
		
      #region 公共常量

		public static readonly string CLASS_FULL_NAME = "Legendigital.Framework.Common.BaseFramework.Entity.Tables.SystemResourcesEntity";
		public static readonly string PROPERTY_NAME_RESOURCESID = "ResourcesID";
		public static readonly string PROPERTY_NAME_RESOURCESNAMECN = "ResourcesNameCn";
		public static readonly string PROPERTY_NAME_RESOURCESNAMEEN = "ResourcesNameEn";
		public static readonly string PROPERTY_NAME_RESOURCESDESCRIPTION = "ResourcesDescription";
		public static readonly string PROPERTY_NAME_RESOURCESTYPE = "ResourcesType";
		public static readonly string PROPERTY_NAME_RESOURCESLIMITEXPRESSION = "ResourcesLimitExpression";
		public static readonly string PROPERTY_NAME_RESOURCESISRELATEUSER = "ResourcesIsRelateUser";
		public static readonly string PROPERTY_NAME_MOUDLEID = "MoudleID";
		public static readonly string PROPERTY_NAME_PARENTRESOURCESID = "ParentResourcesID";
		public static readonly string PROPERTY_NAME_ORDERINDEX = "OrderIndex";
		public static readonly string PROPERTY_NAME_CREATEBY = "CreateBy";
		public static readonly string PROPERTY_NAME_CREATEAT = "CreateAt";
		public static readonly string PROPERTY_NAME_LASTMODIFYBY = "LastModifyBy";
		public static readonly string PROPERTY_NAME_LASTMODIFYAT = "LastModifyAt";
		public static readonly string PROPERTY_NAME_LASTMODIFYCOMMENT = "LastModifyComment";
		
        #endregion
	
 
		#region moudleID字段外键查询字段
        public const string PROPERTY_MOUDLEID_ALIAS_NAME = "MoudleID_SystemResourcesEntity_Alias";
		public const string PROPERTY_MOUDLEID_MOUDLEID = "MoudleID_SystemResourcesEntity_Alias.MoudleID";
		public const string PROPERTY_MOUDLEID_MOUDLENAMECN = "MoudleID_SystemResourcesEntity_Alias.MoudleNameCn";
		public const string PROPERTY_MOUDLEID_MOUDLENAMEEN = "MoudleID_SystemResourcesEntity_Alias.MoudleNameEn";
		public const string PROPERTY_MOUDLEID_MOUDLENAMEDB = "MoudleID_SystemResourcesEntity_Alias.MoudleNameDb";
		public const string PROPERTY_MOUDLEID_MOUDLEDESCRIPTION = "MoudleID_SystemResourcesEntity_Alias.MoudleDescription";
		public const string PROPERTY_MOUDLEID_APPLICATIONID = "MoudleID_SystemResourcesEntity_Alias.ApplicationID";
		public const string PROPERTY_MOUDLEID_MOUDLEISSYSTEMMOUDLE = "MoudleID_SystemResourcesEntity_Alias.MoudleIsSystemMoudle";
		public const string PROPERTY_MOUDLEID_ORDERINDEX = "MoudleID_SystemResourcesEntity_Alias.OrderIndex";
		public const string PROPERTY_MOUDLEID_CREATEBY = "MoudleID_SystemResourcesEntity_Alias.CreateBy";
		public const string PROPERTY_MOUDLEID_CREATEAT = "MoudleID_SystemResourcesEntity_Alias.CreateAt";
		public const string PROPERTY_MOUDLEID_LASTMODIFYBY = "MoudleID_SystemResourcesEntity_Alias.LastModifyBy";
		public const string PROPERTY_MOUDLEID_LASTMODIFYAT = "MoudleID_SystemResourcesEntity_Alias.LastModifyAt";
		public const string PROPERTY_MOUDLEID_LASTMODIFYCOMMENT = "MoudleID_SystemResourcesEntity_Alias.LastModifyComment";
		#endregion
      	
	
	
		 
		
		
		
		


		#region Public Property
		/// <summary>
		/// ??
		/// </summary>
		[DataMember]
		public int ResourcesID
		{
			get
			{
				return entity.ResourcesID;
			}
			set
			{
				entity.ResourcesID = value;
			}
		}
		/// <summary>
		/// ?????
		/// </summary>
		[DataMember]
		public string ResourcesNameCn
		{
			get
			{
				return entity.ResourcesNameCn;
			}
			set
			{
				entity.ResourcesNameCn = value;
			}
		}
		/// <summary>
		/// ?????
		/// </summary>
		[DataMember]
		public string ResourcesNameEn
		{
			get
			{
				return entity.ResourcesNameEn;
			}
			set
			{
				entity.ResourcesNameEn = value;
			}
		}
		/// <summary>
		/// ????
		/// </summary>
		[DataMember]
		public string ResourcesDescription
		{
			get
			{
				return entity.ResourcesDescription;
			}
			set
			{
				entity.ResourcesDescription = value;
			}
		}
		/// <summary>
		/// ????
		/// </summary>
		[DataMember]
		public string ResourcesType
		{
			get
			{
				return entity.ResourcesType;
			}
			set
			{
				entity.ResourcesType = value;
			}
		}
		/// <summary>
		/// ??????
		/// </summary>
		[DataMember]
		public string ResourcesLimitExpression
		{
			get
			{
				return entity.ResourcesLimitExpression;
			}
			set
			{
				entity.ResourcesLimitExpression = value;
			}
		}
		/// <summary>
		/// ?????????
		/// </summary>
		[DataMember]
		public bool ResourcesIsRelateUser
		{
			get
			{
				return entity.ResourcesIsRelateUser;
			}
			set
			{
				entity.ResourcesIsRelateUser = value;
			}
		}
		/// <summary>
		/// ????
		/// </summary>
		[DataMember]
		public SystemMoudleWrapper MoudleID
		{
			get
			{
				return SystemMoudleWrapper.ConvertEntityToWrapper(entity.MoudleID) ;
			}
			set
			{
				entity.MoudleID = ((value == null) ? null : value.Entity);
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public SystemResourcesWrapper ParentResourcesID
		{
			get
			{
				return SystemResourcesWrapper.ConvertEntityToWrapper(entity.ParentResourcesID) ;
			}
			set
			{
				entity.ParentResourcesID = ((value == null) ? null : value.Entity);
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public int? OrderIndex
		{
			get
			{
				return entity.OrderIndex;
			}
			set
			{
				entity.OrderIndex = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public int? CreateBy
		{
			get
			{
				return entity.CreateBy;
			}
			set
			{
				entity.CreateBy = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public DateTime? CreateAt
		{
			get
			{
				return entity.CreateAt;
			}
			set
			{
				entity.CreateAt = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public int? LastModifyBy
		{
			get
			{
				return entity.LastModifyBy;
			}
			set
			{
				entity.LastModifyBy = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public DateTime? LastModifyAt
		{
			get
			{
				return entity.LastModifyAt;
			}
			set
			{
				entity.LastModifyAt = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public string LastModifyComment
		{
			get
			{
				return entity.LastModifyComment;
			}
			set
			{
				entity.LastModifyComment = value;
			}
		}
		#endregion 


		#region Query Property
		
		
		#region moudleID字段外键查询字段
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_MOUDLEID_MOUDLEID)]
        public int? MoudleID_MoudleID
        {
            get
            {
                if (this. MoudleID == null)
                    return null;
                return  MoudleID.MoudleID;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_MOUDLEID_MOUDLENAMECN)]
        public string MoudleID_MoudleNameCn
        {
            get
            {
                if (this. MoudleID == null)
                    return null;
                return  MoudleID.MoudleNameCn;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_MOUDLEID_MOUDLENAMEEN)]
        public string MoudleID_MoudleNameEn
        {
            get
            {
                if (this. MoudleID == null)
                    return null;
                return  MoudleID.MoudleNameEn;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_MOUDLEID_MOUDLENAMEDB)]
        public string MoudleID_MoudleNameDb
        {
            get
            {
                if (this. MoudleID == null)
                    return null;
                return  MoudleID.MoudleNameDb;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_MOUDLEID_MOUDLEDESCRIPTION)]
        public string MoudleID_MoudleDescription
        {
            get
            {
                if (this. MoudleID == null)
                    return null;
                return  MoudleID.MoudleDescription;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_MOUDLEID_APPLICATIONID)]
        public SystemApplicationWrapper MoudleID_ApplicationID
        {
            get
            {
                if (this. MoudleID == null)
                    return null;
                return  MoudleID.ApplicationID;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_MOUDLEID_MOUDLEISSYSTEMMOUDLE)]
        public bool? MoudleID_MoudleIsSystemMoudle
        {
            get
            {
                if (this. MoudleID == null)
                    return null;
                return  MoudleID.MoudleIsSystemMoudle;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_MOUDLEID_ORDERINDEX)]
        public int? MoudleID_OrderIndex
        {
            get
            {
                if (this. MoudleID == null)
                    return null;
                return  MoudleID.OrderIndex;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_MOUDLEID_CREATEBY)]
        public int? MoudleID_CreateBy
        {
            get
            {
                if (this. MoudleID == null)
                    return null;
                return  MoudleID.CreateBy;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_MOUDLEID_CREATEAT)]
        public DateTime? MoudleID_CreateAt
        {
            get
            {
                if (this. MoudleID == null)
                    return null;
                return  MoudleID.CreateAt;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_MOUDLEID_LASTMODIFYBY)]
        public int? MoudleID_LastModifyBy
        {
            get
            {
                if (this. MoudleID == null)
                    return null;
                return  MoudleID.LastModifyBy;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_MOUDLEID_LASTMODIFYAT)]
        public DateTime? MoudleID_LastModifyAt
        {
            get
            {
                if (this. MoudleID == null)
                    return null;
                return  MoudleID.LastModifyAt;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_MOUDLEID_LASTMODIFYCOMMENT)]
        public string MoudleID_LastModifyComment
        {
            get
            {
                if (this. MoudleID == null)
                    return null;
                return  MoudleID.LastModifyComment;
            }
        }
		#endregion
      	
   
		#endregion


        #region "FKQuery"
		
        public static List<SystemResourcesWrapper> FindAllByOrderByAndFilterAndMoudleID(string orderByColumnName, bool isDesc,   SystemMoudleWrapper moudleID,  PageQueryParams pageQueryParams)
        {
            return ConvertToWrapperList(businessProxy.FindAllByOrderByAndFilterAndMoudleID(orderByColumnName, isDesc,   moudleID.Entity, pageQueryParams));
        }

        public static List<SystemResourcesWrapper> FindAllByMoudleID(SystemMoudleWrapper moudleID)
        {
            return ConvertToWrapperList(businessProxy.FindAllByMoudleID(moudleID.Entity));
        }
		



        #endregion








        #region Static Common Data Operation
		
		internal static List<SystemResourcesWrapper> ConvertToWrapperList(List<SystemResourcesEntity> entitylist)
        {
            List<SystemResourcesWrapper> list = new List<SystemResourcesWrapper>();
            foreach (SystemResourcesEntity lentity in entitylist)
            {
                list.Add(ConvertEntityToWrapper(lentity));
            }
            return list;
        }

		internal static List<SystemResourcesWrapper> ConvertToWrapperList(IList<SystemResourcesEntity> entitylist)
        {
            List<SystemResourcesWrapper> list = new List<SystemResourcesWrapper>();
            foreach (SystemResourcesEntity lentity in entitylist)
            {
                list.Add(ConvertEntityToWrapper(lentity));
            }
            return list;
        }
		
		internal static List<SystemResourcesEntity> ConvertToEntityList(List<SystemResourcesWrapper> wrapperlist)
        {
            List<SystemResourcesEntity> list = new List<SystemResourcesEntity>();
            foreach (SystemResourcesWrapper wrapper in wrapperlist)
            {
                list.Add(wrapper.entity);
            }
            return list;
        }

        internal static SystemResourcesWrapper ConvertEntityToWrapper(SystemResourcesEntity entity)
        {
            if (entity == null)
                return null;
				
            if (entity.ResourcesID == 0)
                return null;

            return new SystemResourcesWrapper(entity);
        }
		
		#endregion

    }//End Class
}// End Namespace

