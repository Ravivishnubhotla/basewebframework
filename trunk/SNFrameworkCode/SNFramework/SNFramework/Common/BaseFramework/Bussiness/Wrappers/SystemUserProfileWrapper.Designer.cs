// Generated by MyGeneration Version # (1.3.0.9)
using System;
using System.Collections.Generic;
using System.Text;
using Spring.Context.Support;
using Common.Logging;
using Legendigital.Framework.Common.BaseFramework.Entity.Tables;
using Legendigital.Framework.Common.BaseFramework.Bussiness.ServiceProxys.Tables.Container;
using Legendigital.Framework.Common.BaseFramework.Bussiness.ServiceProxys.Tables;
using Legendigital.Framework.Common.Data.NHibernate.DynamicQuery;

namespace Legendigital.Framework.Common.BaseFramework.Bussiness.Wrappers
{
    public partial class SystemUserProfileWrapper
    {
        #region Member

		internal static readonly ISystemUserProfileServiceProxy businessProxy = ((Legendigital.Framework.Common.BaseFramework.Bussiness.ServiceProxys.Tables.Container.BaseFrameworkServiceProxyContainer)(ContextRegistry.GetContext().GetObject("BaseFrameworkServiceProxyContainerIocID", typeof(Legendigital.Framework.Common.BaseFramework.Bussiness.ServiceProxys.Tables.Container.BaseFrameworkServiceProxyContainer)))).SystemUserProfileServiceProxyInstance;
	 
	 
        internal SystemUserProfileEntity entity;
		
		private static ILog logger = null;

        public static ILog Logger
        {
            get
            {
                if (logger == null)
                    logger = LogManager.GetLogger(typeof(SystemUserProfileWrapper));
                return logger;
            }
        }

        #endregion

        #region Construtor
        public SystemUserProfileWrapper() : this(new SystemUserProfileEntity())
        {
            
        }

        internal SystemUserProfileWrapper(SystemUserProfileEntity entityObj)
        {
            entity = entityObj;
        }
		#endregion
		
		#region Equals 和 HashCode 方法覆盖
		public override bool Equals(object obj)
        {
            if (obj == null && entity!=null)
            {
                if (entity.ProfileID == 0)
                    return true;

                return false;
            }
            return entity.Equals(obj);
        }

        public override int GetHashCode()
        {
            return entity.GetHashCode();
        }
		#endregion
		
        #region 公共常量

		public static readonly string CLASS_FULL_NAME = "Legendigital.Framework.Common.BaseFramework.Entity.Tables.SystemUserProfileEntity";
		public static readonly string PROPERTY_NAME_PROFILEID = "ProfileID";
		public static readonly string PROPERTY_NAME_USERID = "UserID";
		public static readonly string PROPERTY_NAME_PROPERTYID = "PropertyID";
		public static readonly string PROPERTY_NAME_PROPERTYVALUESSTRING = "PropertyValuesString";
		public static readonly string PROPERTY_NAME_PROPERTYVALUESBINARY = "PropertyValuesBinary";
		public static readonly string PROPERTY_NAME_LASTUPDATEDDATE = "LastUpdatedDate";
		public static readonly string PROPERTY_NAME_CREATEBY = "CreateBy";
		public static readonly string PROPERTY_NAME_CREATEAT = "CreateAt";
		public static readonly string PROPERTY_NAME_LASTMODIFYBY = "LastModifyBy";
		public static readonly string PROPERTY_NAME_LASTMODIFYAT = "LastModifyAt";
		public static readonly string PROPERTY_NAME_LASTMODIFYCOMMENT = "LastModifyComment";
		
        #endregion


		#region Public Property
		/// <summary>
		/// ??
		/// </summary>		
		public int ProfileID
		{
			get
			{
				return entity.ProfileID;
			}
			set
			{
				entity.ProfileID = value;
			}
		}
		/// <summary>
		/// ??ID
		/// </summary>		
		public SystemUserWrapper UserID
		{
			get
			{
				return SystemUserWrapper.ConvertEntityToWrapper(entity.UserID) ;
			}
			set
			{
				entity.UserID = ((value == null) ? null : value.entity);
			}
		}
		/// <summary>
		/// ??ID
		/// </summary>		
		public SystemUserProfilePropertysWrapper PropertyID
		{
			get
			{
				return SystemUserProfilePropertysWrapper.ConvertEntityToWrapper(entity.PropertyID) ;
			}
			set
			{
				entity.PropertyID = ((value == null) ? null : value.entity);
			}
		}
		/// <summary>
		/// ???
		/// </summary>		
		public string PropertyValuesString
		{
			get
			{
				return entity.PropertyValuesString;
			}
			set
			{
				entity.PropertyValuesString = value;
			}
		}
		/// <summary>
		/// ??????
		/// </summary>		
		public byte[] PropertyValuesBinary
		{
			get
			{
				return entity.PropertyValuesBinary;
			}
			set
			{
				entity.PropertyValuesBinary = value;
			}
		}
		/// <summary>
		/// ??????
		/// </summary>		
		public DateTime LastUpdatedDate
		{
			get
			{
				return entity.LastUpdatedDate;
			}
			set
			{
				entity.LastUpdatedDate = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public int? CreateBy
		{
			get
			{
				return entity.CreateBy;
			}
			set
			{
				entity.CreateBy = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public DateTime? CreateAt
		{
			get
			{
				return entity.CreateAt;
			}
			set
			{
				entity.CreateAt = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public int? LastModifyBy
		{
			get
			{
				return entity.LastModifyBy;
			}
			set
			{
				entity.LastModifyBy = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public DateTime? LastModifyAt
		{
			get
			{
				return entity.LastModifyAt;
			}
			set
			{
				entity.LastModifyAt = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public string LastModifyComment
		{
			get
			{
				return entity.LastModifyComment;
			}
			set
			{
				entity.LastModifyComment = value;
			}
		}
		#endregion 





        #region "FKQuery"
		
        public static List<SystemUserProfileWrapper> FindAllByOrderByAndFilterAndUserID(string orderByColumnName, bool isDesc,   SystemUserWrapper userID,  PageQueryParams pageQueryParams)
        {
            return ConvertToWrapperList(businessProxy.FindAllByOrderByAndFilterAndUserID(orderByColumnName, isDesc,   userID.entity, pageQueryParams));
        }

        public static List<SystemUserProfileWrapper> FindAllByUserID(SystemUserWrapper userID)
        {
            return ConvertToWrapperList(businessProxy.FindAllByUserID(userID.entity));
        }
		
		
        public static List<SystemUserProfileWrapper> FindAllByOrderByAndFilterAndPropertyID(string orderByColumnName, bool isDesc,   SystemUserProfilePropertysWrapper propertyID,  PageQueryParams pageQueryParams)
        {
            return ConvertToWrapperList(businessProxy.FindAllByOrderByAndFilterAndPropertyID(orderByColumnName, isDesc,   propertyID.entity, pageQueryParams));
        }

        public static List<SystemUserProfileWrapper> FindAllByPropertyID(SystemUserProfilePropertysWrapper propertyID)
        {
            return ConvertToWrapperList(businessProxy.FindAllByPropertyID(propertyID.entity));
        }
		



        #endregion








        #region Static Common Data Operation
		
		internal static List<SystemUserProfileWrapper> ConvertToWrapperList(List<SystemUserProfileEntity> entitylist)
        {
            List<SystemUserProfileWrapper> list = new List<SystemUserProfileWrapper>();
            foreach (SystemUserProfileEntity lentity in entitylist)
            {
                list.Add(ConvertEntityToWrapper(lentity));
            }
            return list;
        }

		internal static List<SystemUserProfileWrapper> ConvertToWrapperList(IList<SystemUserProfileEntity> entitylist)
        {
            List<SystemUserProfileWrapper> list = new List<SystemUserProfileWrapper>();
            foreach (SystemUserProfileEntity lentity in entitylist)
            {
                list.Add(ConvertEntityToWrapper(lentity));
            }
            return list;
        }
		
		internal static List<SystemUserProfileEntity> ConvertToEntityList(List<SystemUserProfileWrapper> wrapperlist)
        {
            List<SystemUserProfileEntity> list = new List<SystemUserProfileEntity>();
            foreach (SystemUserProfileWrapper wrapper in wrapperlist)
            {
                list.Add(wrapper.entity);
            }
            return list;
        }

        internal static SystemUserProfileWrapper ConvertEntityToWrapper(SystemUserProfileEntity entity)
        {
            if (entity == null)
                return null;
				
            if (entity.ProfileID == 0)
                return null;

            return new SystemUserProfileWrapper(entity);
        }
		
		#endregion

    }//End Class
}// End Namespace

