// Generated by MyGeneration Version # (1.3.0.9)
using System;
using System.Collections.Generic;
using System.Text;
using Spring.Context.Support;
using Common.Logging;
using Legendigital.Framework.Common.BaseFramework.Entity.Tables;
using Legendigital.Framework.Common.BaseFramework.Bussiness.ServiceProxys.Tables.Container;
using Legendigital.Framework.Common.BaseFramework.Bussiness.ServiceProxys.Tables;
using Legendigital.Framework.Common.Data.NHibernate.DynamicQuery;

namespace Legendigital.Framework.Common.BaseFramework.Bussiness.Wrappers
{
    public partial class SystemRoleMenuRelationWrapper
    {
        #region Member

		internal static readonly ISystemRoleMenuRelationServiceProxy businessProxy = ((Legendigital.Framework.Common.BaseFramework.Bussiness.ServiceProxys.Tables.Container.BaseFrameworkServiceProxyContainer)(ContextRegistry.GetContext().GetObject("BaseFrameworkServiceProxyContainerIocID", typeof(Legendigital.Framework.Common.BaseFramework.Bussiness.ServiceProxys.Tables.Container.BaseFrameworkServiceProxyContainer)))).SystemRoleMenuRelationServiceProxyInstance;
	 
	 
        internal SystemRoleMenuRelationEntity entity;
		
		private static ILog logger = null;

        public static ILog Logger
        {
            get
            {
                if (logger == null)
                    logger = LogManager.GetLogger(typeof(SystemRoleMenuRelationWrapper));
                return logger;
            }
        }

        #endregion

        #region Construtor
        public SystemRoleMenuRelationWrapper() : this(new SystemRoleMenuRelationEntity())
        {
            
        }

        internal SystemRoleMenuRelationWrapper(SystemRoleMenuRelationEntity entityObj)
        {
            entity = entityObj;
        }
		#endregion
		
		#region Equals 和 HashCode 方法覆盖
		public override bool Equals(object obj)
        {
            if (obj == null && entity!=null)
            {
                if (entity.MenuRoleID == 0)
                    return true;

                return false;
            }
            return entity.Equals(obj);
        }

        public override int GetHashCode()
        {
            return entity.GetHashCode();
        }
		#endregion
		
      #region 公共常量

		public static readonly string CLASS_FULL_NAME = "Legendigital.Framework.Common.BaseFramework.Entity.Tables.SystemRoleMenuRelationEntity";
		public static readonly string PROPERTY_NAME_MENUROLEID = "MenuRoleID";
		public static readonly string PROPERTY_NAME_MENUID = "MenuID";
		public static readonly string PROPERTY_NAME_ROLEID = "RoleID";
		
        #endregion
	
 
		#region menuID字段外键查询字段
        public static readonly string PROPERTY_MENUID_ALIAS_NAME = "MenuID_SystemRoleMenuRelationEntity_Alias";
		public static readonly string PROPERTY_MENUID_MENUID = "MenuID_SystemRoleMenuRelationEntity_Alias.MenuID";
		public static readonly string PROPERTY_MENUID_MENUNAME = "MenuID_SystemRoleMenuRelationEntity_Alias.MenuName";
		public static readonly string PROPERTY_MENUID_MENUCODE = "MenuID_SystemRoleMenuRelationEntity_Alias.MenuCode";
		public static readonly string PROPERTY_MENUID_MENUDESCRIPTION = "MenuID_SystemRoleMenuRelationEntity_Alias.MenuDescription";
		public static readonly string PROPERTY_MENUID_MENUURL = "MenuID_SystemRoleMenuRelationEntity_Alias.MenuUrl";
		public static readonly string PROPERTY_MENUID_MENUURLTARGET = "MenuID_SystemRoleMenuRelationEntity_Alias.MenuUrlTarget";
		public static readonly string PROPERTY_MENUID_MENUICONURL = "MenuID_SystemRoleMenuRelationEntity_Alias.MenuIconUrl";
		public static readonly string PROPERTY_MENUID_MENUISCATEGORY = "MenuID_SystemRoleMenuRelationEntity_Alias.MenuIsCategory";
		public static readonly string PROPERTY_MENUID_PARENTMENUID = "MenuID_SystemRoleMenuRelationEntity_Alias.ParentMenuID";
		public static readonly string PROPERTY_MENUID_MENUORDER = "MenuID_SystemRoleMenuRelationEntity_Alias.MenuOrder";
		public static readonly string PROPERTY_MENUID_MENUTYPE = "MenuID_SystemRoleMenuRelationEntity_Alias.MenuType";
		public static readonly string PROPERTY_MENUID_MENUISSYSTEMMENU = "MenuID_SystemRoleMenuRelationEntity_Alias.MenuIsSystemMenu";
		public static readonly string PROPERTY_MENUID_MENUISENABLE = "MenuID_SystemRoleMenuRelationEntity_Alias.MenuIsEnable";
		public static readonly string PROPERTY_MENUID_APPLICATIONID = "MenuID_SystemRoleMenuRelationEntity_Alias.ApplicationID";
		public static readonly string PROPERTY_MENUID_CREATEBY = "MenuID_SystemRoleMenuRelationEntity_Alias.CreateBy";
		public static readonly string PROPERTY_MENUID_CREATEAT = "MenuID_SystemRoleMenuRelationEntity_Alias.CreateAt";
		public static readonly string PROPERTY_MENUID_LASTMODIFYBY = "MenuID_SystemRoleMenuRelationEntity_Alias.LastModifyBy";
		public static readonly string PROPERTY_MENUID_LASTMODIFYAT = "MenuID_SystemRoleMenuRelationEntity_Alias.LastModifyAt";
		public static readonly string PROPERTY_MENUID_LASTMODIFYCOMMENT = "MenuID_SystemRoleMenuRelationEntity_Alias.LastModifyComment";
		#endregion
		#region roleID字段外键查询字段
        public static readonly string PROPERTY_ROLEID_ALIAS_NAME = "RoleID_SystemRoleMenuRelationEntity_Alias";
		public static readonly string PROPERTY_ROLEID_ROLEID = "RoleID_SystemRoleMenuRelationEntity_Alias.RoleID";
		public static readonly string PROPERTY_ROLEID_ROLENAME = "RoleID_SystemRoleMenuRelationEntity_Alias.RoleName";
		public static readonly string PROPERTY_ROLEID_ROLECODE = "RoleID_SystemRoleMenuRelationEntity_Alias.RoleCode";
		public static readonly string PROPERTY_ROLEID_ROLEDESCRIPTION = "RoleID_SystemRoleMenuRelationEntity_Alias.RoleDescription";
		public static readonly string PROPERTY_ROLEID_ROLEISSYSTEMROLE = "RoleID_SystemRoleMenuRelationEntity_Alias.RoleIsSystemRole";
		public static readonly string PROPERTY_ROLEID_ROLETYPE = "RoleID_SystemRoleMenuRelationEntity_Alias.RoleType";
		public static readonly string PROPERTY_ROLEID_CREATEBY = "RoleID_SystemRoleMenuRelationEntity_Alias.CreateBy";
		public static readonly string PROPERTY_ROLEID_CREATEAT = "RoleID_SystemRoleMenuRelationEntity_Alias.CreateAt";
		public static readonly string PROPERTY_ROLEID_LASTMODIFYBY = "RoleID_SystemRoleMenuRelationEntity_Alias.LastModifyBy";
		public static readonly string PROPERTY_ROLEID_LASTMODIFYAT = "RoleID_SystemRoleMenuRelationEntity_Alias.LastModifyAt";
		public static readonly string PROPERTY_ROLEID_LASTMODIFYCOMMENT = "RoleID_SystemRoleMenuRelationEntity_Alias.LastModifyComment";
		#endregion
      	
	
	
		 
		
		
		
		


		#region Public Property
		/// <summary>
		/// ??
		/// </summary>		
		public int MenuRoleID
		{
			get
			{
				return entity.MenuRoleID;
			}
			set
			{
				entity.MenuRoleID = value;
			}
		}
		/// <summary>
		/// ??ID
		/// </summary>		
		public SystemMenuWrapper MenuID
		{
			get
			{
				return SystemMenuWrapper.ConvertEntityToWrapper(entity.MenuID) ;
			}
			set
			{
				entity.MenuID = ((value == null) ? null : value.entity);
			}
		}
		/// <summary>
		/// ??ID
		/// </summary>		
		public SystemRoleWrapper RoleID
		{
			get
			{
				return SystemRoleWrapper.ConvertEntityToWrapper(entity.RoleID) ;
			}
			set
			{
				entity.RoleID = ((value == null) ? null : value.entity);
			}
		}
		#endregion 





        #region "FKQuery"
		
        public static List<SystemRoleMenuRelationWrapper> FindAllByOrderByAndFilterAndMenuID(string orderByColumnName, bool isDesc,   SystemMenuWrapper menuID,  PageQueryParams pageQueryParams)
        {
            return ConvertToWrapperList(businessProxy.FindAllByOrderByAndFilterAndMenuID(orderByColumnName, isDesc,   menuID.entity, pageQueryParams));
        }

        public static List<SystemRoleMenuRelationWrapper> FindAllByMenuID(SystemMenuWrapper menuID)
        {
            return ConvertToWrapperList(businessProxy.FindAllByMenuID(menuID.entity));
        }
		
		
        public static List<SystemRoleMenuRelationWrapper> FindAllByOrderByAndFilterAndRoleID(string orderByColumnName, bool isDesc,   SystemRoleWrapper roleID,  PageQueryParams pageQueryParams)
        {
            return ConvertToWrapperList(businessProxy.FindAllByOrderByAndFilterAndRoleID(orderByColumnName, isDesc,   roleID.entity, pageQueryParams));
        }

        public static List<SystemRoleMenuRelationWrapper> FindAllByRoleID(SystemRoleWrapper roleID)
        {
            return ConvertToWrapperList(businessProxy.FindAllByRoleID(roleID.entity));
        }
		



        #endregion








        #region Static Common Data Operation
		
		internal static List<SystemRoleMenuRelationWrapper> ConvertToWrapperList(List<SystemRoleMenuRelationEntity> entitylist)
        {
            List<SystemRoleMenuRelationWrapper> list = new List<SystemRoleMenuRelationWrapper>();
            foreach (SystemRoleMenuRelationEntity lentity in entitylist)
            {
                list.Add(ConvertEntityToWrapper(lentity));
            }
            return list;
        }

		internal static List<SystemRoleMenuRelationWrapper> ConvertToWrapperList(IList<SystemRoleMenuRelationEntity> entitylist)
        {
            List<SystemRoleMenuRelationWrapper> list = new List<SystemRoleMenuRelationWrapper>();
            foreach (SystemRoleMenuRelationEntity lentity in entitylist)
            {
                list.Add(ConvertEntityToWrapper(lentity));
            }
            return list;
        }
		
		internal static List<SystemRoleMenuRelationEntity> ConvertToEntityList(List<SystemRoleMenuRelationWrapper> wrapperlist)
        {
            List<SystemRoleMenuRelationEntity> list = new List<SystemRoleMenuRelationEntity>();
            foreach (SystemRoleMenuRelationWrapper wrapper in wrapperlist)
            {
                list.Add(wrapper.entity);
            }
            return list;
        }

        internal static SystemRoleMenuRelationWrapper ConvertEntityToWrapper(SystemRoleMenuRelationEntity entity)
        {
            if (entity == null)
                return null;
				
            if (entity.MenuRoleID == 0)
                return null;

            return new SystemRoleMenuRelationWrapper(entity);
        }
		
		#endregion

    }//End Class
}// End Namespace

