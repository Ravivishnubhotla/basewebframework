// Generated by MyGeneration Version # (1.3.0.9)
using System;
using System.Collections.Generic;
using System.Text;
using Spring.Context.Support;
using Common.Logging;
using Legendigital.Framework.Common.BaseFramework.Entity.Tables;
using Legendigital.Framework.Common.BaseFramework.Bussiness.ServiceProxys.Tables.Container;
using Legendigital.Framework.Common.BaseFramework.Bussiness.ServiceProxys.Tables;
using Legendigital.Framework.Common.Data.NHibernate.DynamicQuery;

namespace Legendigital.Framework.Common.BaseFramework.Bussiness.Wrappers
{
    public partial class SystemCountryWrapper
    {
        #region Member

		internal static readonly ISystemCountryServiceProxy businessProxy = ((Legendigital.Framework.Common.BaseFramework.Bussiness.ServiceProxys.Tables.Container.BaseFrameworkServiceProxyContainer)(ContextRegistry.GetContext().GetObject("BaseFrameworkServiceProxyContainerIocID", typeof(Legendigital.Framework.Common.BaseFramework.Bussiness.ServiceProxys.Tables.Container.BaseFrameworkServiceProxyContainer)))).SystemCountryServiceProxyInstance;
	 
	 
        internal SystemCountryEntity entity;
		
		private static ILog logger = null;

        public static ILog Logger
        {
            get
            {
                if (logger == null)
                    logger = LogManager.GetLogger(typeof(SystemCountryWrapper));
                return logger;
            }
        }

        #endregion

        #region Construtor
        public SystemCountryWrapper() : this(new SystemCountryEntity())
        {
            
        }

        internal SystemCountryWrapper(SystemCountryEntity entityObj)
        {
            entity = entityObj;
        }
		#endregion
		
		#region Equals 和 HashCode 方法覆盖
		public override bool Equals(object obj)
        {
            if (obj == null && entity!=null)
            {
                if (entity.Id == 0)
                    return true;

                return false;
            }
            return entity.Equals(obj);
        }

        public override int GetHashCode()
        {
            return entity.GetHashCode();
        }
		#endregion
		
      #region 公共常量

		public static readonly string CLASS_FULL_NAME = "Legendigital.Framework.Common.BaseFramework.Entity.Tables.SystemCountryEntity";
		public static readonly string PROPERTY_NAME_ID = "Id";
		public static readonly string PROPERTY_NAME_CODENUMBER = "CodeNumber";
		public static readonly string PROPERTY_NAME_CODE2 = "Code2";
		public static readonly string PROPERTY_NAME_CODE3 = "Code3";
		public static readonly string PROPERTY_NAME_ABBRNAMECN = "AbbrNameCN";
		public static readonly string PROPERTY_NAME_ABBRNAMEEN = "AbbrNameEN";
		public static readonly string PROPERTY_NAME_FULLNAMECN = "FullNameCn";
		public static readonly string PROPERTY_NAME_FULLNAMEEN = "FullNameEn";
		
        #endregion
	
 
      	
	
	
		 
		
		
		
		


		#region Public Property
		/// <summary>
		/// 
		/// </summary>		
		public int Id
		{
			get
			{
				return entity.Id;
			}
			set
			{
				entity.Id = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public string CodeNumber
		{
			get
			{
				return entity.CodeNumber;
			}
			set
			{
				entity.CodeNumber = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public string Code2
		{
			get
			{
				return entity.Code2;
			}
			set
			{
				entity.Code2 = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public string Code3
		{
			get
			{
				return entity.Code3;
			}
			set
			{
				entity.Code3 = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public string AbbrNameCN
		{
			get
			{
				return entity.AbbrNameCN;
			}
			set
			{
				entity.AbbrNameCN = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public string AbbrNameEN
		{
			get
			{
				return entity.AbbrNameEN;
			}
			set
			{
				entity.AbbrNameEN = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public string FullNameCn
		{
			get
			{
				return entity.FullNameCn;
			}
			set
			{
				entity.FullNameCn = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public string FullNameEn
		{
			get
			{
				return entity.FullNameEn;
			}
			set
			{
				entity.FullNameEn = value;
			}
		}
		#endregion 





        #region "FKQuery"



        #endregion








        #region Static Common Data Operation
		
		internal static List<SystemCountryWrapper> ConvertToWrapperList(List<SystemCountryEntity> entitylist)
        {
            List<SystemCountryWrapper> list = new List<SystemCountryWrapper>();
            foreach (SystemCountryEntity lentity in entitylist)
            {
                list.Add(ConvertEntityToWrapper(lentity));
            }
            return list;
        }

		internal static List<SystemCountryWrapper> ConvertToWrapperList(IList<SystemCountryEntity> entitylist)
        {
            List<SystemCountryWrapper> list = new List<SystemCountryWrapper>();
            foreach (SystemCountryEntity lentity in entitylist)
            {
                list.Add(ConvertEntityToWrapper(lentity));
            }
            return list;
        }
		
		internal static List<SystemCountryEntity> ConvertToEntityList(List<SystemCountryWrapper> wrapperlist)
        {
            List<SystemCountryEntity> list = new List<SystemCountryEntity>();
            foreach (SystemCountryWrapper wrapper in wrapperlist)
            {
                list.Add(wrapper.entity);
            }
            return list;
        }

        internal static SystemCountryWrapper ConvertEntityToWrapper(SystemCountryEntity entity)
        {
            if (entity == null)
                return null;
				
            if (entity.Id == 0)
                return null;

            return new SystemCountryWrapper(entity);
        }
		
		#endregion

    }//End Class
}// End Namespace

