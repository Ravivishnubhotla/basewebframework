// Generated by MyGeneration Version # (1.3.0.9)
using System;
using System.Collections.Generic;
using System.Text;
using Spring.Context.Support;
using Common.Logging;
using Legendigital.Framework.Common.Bussiness.NHibernate;
using SPS.Entity.Tables;
using SPS.Bussiness.ServiceProxys.Tables.Container;
using SPS.Bussiness.ServiceProxys.Tables;
using Legendigital.Framework.Common.Data.NHibernate.DynamicQuery;

namespace SPS.Bussiness.Wrappers
{
    public partial class SPRecordWrapper   
    {
        #region Member

		internal static readonly ISPRecordServiceProxy businessProxy = ((SPS.Bussiness.ServiceProxys.Tables.Container.ServiceProxyContainer)(ContextRegistry.GetContext().GetObject("ServiceProxyContainerIocID", typeof(SPS.Bussiness.ServiceProxys.Tables.Container.ServiceProxyContainer)))).SPRecordServiceProxyInstance;
		
		
		internal SPRecordEntity Entity
        {
            get { return this.entity; }
        }
		
        #endregion

        #region Construtor
		public SPRecordWrapper() : base(new SPRecordEntity())
        {
            
        }

        internal SPRecordWrapper(SPRecordEntity entityObj)
            : base(entityObj)
        {
        }
		#endregion

        #region Process Column Name
        private static string ProcessColumnName(string columnName)
        {
            switch (columnName)
            {
		        case "ChannelID_Id":
					return PROPERTY_CHANNELID_ID;
		        case "ChannelID_Name":
					return PROPERTY_CHANNELID_NAME;
		        case "ChannelID_Code":
					return PROPERTY_CHANNELID_CODE;
		        case "ChannelID_DataOkMessage":
					return PROPERTY_CHANNELID_DATAOKMESSAGE;
		        case "ChannelID_DataFailedMessage":
					return PROPERTY_CHANNELID_DATAFAILEDMESSAGE;
		        case "ChannelID_Description":
					return PROPERTY_CHANNELID_DESCRIPTION;
		        case "ChannelID_DataAdapterType":
					return PROPERTY_CHANNELID_DATAADAPTERTYPE;
		        case "ChannelID_DataAdapterUrl":
					return PROPERTY_CHANNELID_DATAADAPTERURL;
		        case "ChannelID_ChannelType":
					return PROPERTY_CHANNELID_CHANNELTYPE;
		        case "ChannelID_IVRFeeTimeType":
					return PROPERTY_CHANNELID_IVRFEETIMETYPE;
		        case "ChannelID_IVRTimeFormat":
					return PROPERTY_CHANNELID_IVRTIMEFORMAT;
		        case "ChannelID_IsStateReport":
					return PROPERTY_CHANNELID_ISSTATEREPORT;
		        case "ChannelID_StateReportType":
					return PROPERTY_CHANNELID_STATEREPORTTYPE;
		        case "ChannelID_ReportOkMessage":
					return PROPERTY_CHANNELID_REPORTOKMESSAGE;
		        case "ChannelID_ReportFailedMessage":
					return PROPERTY_CHANNELID_REPORTFAILEDMESSAGE;
		        case "ChannelID_StateReportParamName":
					return PROPERTY_CHANNELID_STATEREPORTPARAMNAME;
		        case "ChannelID_StateReportParamValue":
					return PROPERTY_CHANNELID_STATEREPORTPARAMVALUE;
		        case "ChannelID_RequestTypeParamName":
					return PROPERTY_CHANNELID_REQUESTTYPEPARAMNAME;
		        case "ChannelID_RequestTypeParamStateReportValue":
					return PROPERTY_CHANNELID_REQUESTTYPEPARAMSTATEREPORTVALUE;
		        case "ChannelID_RequestTypeParamDataReportValue":
					return PROPERTY_CHANNELID_REQUESTTYPEPARAMDATAREPORTVALUE;
		        case "ChannelID_HasFilters":
					return PROPERTY_CHANNELID_HASFILTERS;
		        case "ChannelID_IsMonitorRequest":
					return PROPERTY_CHANNELID_ISMONITORREQUEST;
		        case "ChannelID_IsLogRequest":
					return PROPERTY_CHANNELID_ISLOGREQUEST;
		        case "ChannelID_IsParamsConvert":
					return PROPERTY_CHANNELID_ISPARAMSCONVERT;
		        case "ChannelID_IsAutoLinkID":
					return PROPERTY_CHANNELID_ISAUTOLINKID;
		        case "ChannelID_AutoLinkIDFields":
					return PROPERTY_CHANNELID_AUTOLINKIDFIELDS;
		        case "ChannelID_LogRequestType":
					return PROPERTY_CHANNELID_LOGREQUESTTYPE;
		        case "ChannelID_Price":
					return PROPERTY_CHANNELID_PRICE;
		        case "ChannelID_DefaultRate":
					return PROPERTY_CHANNELID_DEFAULTRATE;
		        case "ChannelID_ChannelDetailInfo":
					return PROPERTY_CHANNELID_CHANNELDETAILINFO;
		        case "ChannelID_UpperID":
					return PROPERTY_CHANNELID_UPPERID;
		        case "ChannelID_ChannelStatus":
					return PROPERTY_CHANNELID_CHANNELSTATUS;
		        case "ChannelID_IsDisable":
					return PROPERTY_CHANNELID_ISDISABLE;
		        case "ChannelID_CreateBy":
					return PROPERTY_CHANNELID_CREATEBY;
		        case "ChannelID_CreateAt":
					return PROPERTY_CHANNELID_CREATEAT;
		        case "ChannelID_LastModifyBy":
					return PROPERTY_CHANNELID_LASTMODIFYBY;
		        case "ChannelID_LastModifyAt":
					return PROPERTY_CHANNELID_LASTMODIFYAT;
		        case "ChannelID_LastModifyComment":
					return PROPERTY_CHANNELID_LASTMODIFYCOMMENT;
		        case "ClientID_Id":
					return PROPERTY_CLIENTID_ID;
		        case "ClientID_Name":
					return PROPERTY_CLIENTID_NAME;
		        case "ClientID_Description":
					return PROPERTY_CLIENTID_DESCRIPTION;
		        case "ClientID_UserID":
					return PROPERTY_CLIENTID_USERID;
		        case "ClientID_IsDefaultClient":
					return PROPERTY_CLIENTID_ISDEFAULTCLIENT;
		        case "ClientID_SyncData":
					return PROPERTY_CLIENTID_SYNCDATA;
		        case "ClientID_SycnRetryTimes":
					return PROPERTY_CLIENTID_SYCNRETRYTIMES;
		        case "ClientID_SyncType":
					return PROPERTY_CLIENTID_SYNCTYPE;
		        case "ClientID_SycnNotInterceptCount":
					return PROPERTY_CLIENTID_SYCNNOTINTERCEPTCOUNT;
		        case "ClientID_SycnDataUrl":
					return PROPERTY_CLIENTID_SYCNDATAURL;
		        case "ClientID_SycnOkMessage":
					return PROPERTY_CLIENTID_SYCNOKMESSAGE;
		        case "ClientID_SycnFailedMessage":
					return PROPERTY_CLIENTID_SYCNFAILEDMESSAGE;
		        case "ClientID_Alias":
					return PROPERTY_CLIENTID_ALIAS;
		        case "ClientID_InterceptRate":
					return PROPERTY_CLIENTID_INTERCEPTRATE;
		        case "ClientID_DefaultPrice":
					return PROPERTY_CLIENTID_DEFAULTPRICE;
		        case "ClientID_DefaultShowRecordDays":
					return PROPERTY_CLIENTID_DEFAULTSHOWRECORDDAYS;
		        case "ClientID_CreateBy":
					return PROPERTY_CLIENTID_CREATEBY;
		        case "ClientID_CreateAt":
					return PROPERTY_CLIENTID_CREATEAT;
		        case "ClientID_LastModifyBy":
					return PROPERTY_CLIENTID_LASTMODIFYBY;
		        case "ClientID_LastModifyAt":
					return PROPERTY_CLIENTID_LASTMODIFYAT;
		        case "ClientID_LastModifyComment":
					return PROPERTY_CLIENTID_LASTMODIFYCOMMENT;
		        case "CodeID_Id":
					return PROPERTY_CODEID_ID;
		        case "CodeID_Name":
					return PROPERTY_CODEID_NAME;
		        case "CodeID_Description":
					return PROPERTY_CODEID_DESCRIPTION;
		        case "CodeID_Code":
					return PROPERTY_CODEID_CODE;
		        case "CodeID_CodeType":
					return PROPERTY_CODEID_CODETYPE;
		        case "CodeID_ChannelID":
					return PROPERTY_CODEID_CHANNELID;
		        case "CodeID_Mo":
					return PROPERTY_CODEID_MO;
		        case "CodeID_MOType":
					return PROPERTY_CODEID_MOTYPE;
		        case "CodeID_MOLength":
					return PROPERTY_CODEID_MOLENGTH;
		        case "CodeID_OrderIndex":
					return PROPERTY_CODEID_ORDERINDEX;
		        case "CodeID_SPCode":
					return PROPERTY_CODEID_SPCODE;
		        case "CodeID_SPCodeType":
					return PROPERTY_CODEID_SPCODETYPE;
		        case "CodeID_SPCodeLength":
					return PROPERTY_CODEID_SPCODELENGTH;
		        case "CodeID_HasFilters":
					return PROPERTY_CODEID_HASFILTERS;
		        case "CodeID_HasParamsConvert":
					return PROPERTY_CODEID_HASPARAMSCONVERT;
		        case "CodeID_IsDiable":
					return PROPERTY_CODEID_ISDIABLE;
		        case "CodeID_Price":
					return PROPERTY_CODEID_PRICE;
		        case "CodeID_OperationType":
					return PROPERTY_CODEID_OPERATIONTYPE;
		        case "CodeID_HasDayTotalLimit":
					return PROPERTY_CODEID_HASDAYTOTALLIMIT;
		        case "CodeID_DayTotalLimitCount":
					return PROPERTY_CODEID_DAYTOTALLIMITCOUNT;
		        case "CodeID_HasPhoneLimit":
					return PROPERTY_CODEID_HASPHONELIMIT;
		        case "CodeID_PhoneLimitDayCount":
					return PROPERTY_CODEID_PHONELIMITDAYCOUNT;
		        case "CodeID_PhoneLimitMonthCount":
					return PROPERTY_CODEID_PHONELIMITMONTHCOUNT;
		        case "CodeID_PhoneLimitType":
					return PROPERTY_CODEID_PHONELIMITTYPE;
		        case "CodeID_LimitProvince":
					return PROPERTY_CODEID_LIMITPROVINCE;
		        case "CodeID_LimitProvinceArea":
					return PROPERTY_CODEID_LIMITPROVINCEAREA;
		        case "CodeID_CreateBy":
					return PROPERTY_CODEID_CREATEBY;
		        case "CodeID_CreateAt":
					return PROPERTY_CODEID_CREATEAT;
		        case "CodeID_LastModifyBy":
					return PROPERTY_CODEID_LASTMODIFYBY;
		        case "CodeID_LastModifyAt":
					return PROPERTY_CODEID_LASTMODIFYAT;
		        case "CodeID_LastModifyComment":
					return PROPERTY_CODEID_LASTMODIFYCOMMENT;
		        case "ClientCodeRelationID_Id":
					return PROPERTY_CLIENTCODERELATIONID_ID;
		        case "ClientCodeRelationID_CodeID":
					return PROPERTY_CLIENTCODERELATIONID_CODEID;
		        case "ClientCodeRelationID_ClientID":
					return PROPERTY_CLIENTCODERELATIONID_CLIENTID;
		        case "ClientCodeRelationID_Price":
					return PROPERTY_CLIENTCODERELATIONID_PRICE;
		        case "ClientCodeRelationID_InterceptRate":
					return PROPERTY_CLIENTCODERELATIONID_INTERCEPTRATE;
		        case "ClientCodeRelationID_UseClientDefaultSycnSetting":
					return PROPERTY_CLIENTCODERELATIONID_USECLIENTDEFAULTSYCNSETTING;
		        case "ClientCodeRelationID_SyncData":
					return PROPERTY_CLIENTCODERELATIONID_SYNCDATA;
		        case "ClientCodeRelationID_SycnRetryTimes":
					return PROPERTY_CLIENTCODERELATIONID_SYCNRETRYTIMES;
		        case "ClientCodeRelationID_SyncType":
					return PROPERTY_CLIENTCODERELATIONID_SYNCTYPE;
		        case "ClientCodeRelationID_SycnDataUrl":
					return PROPERTY_CLIENTCODERELATIONID_SYCNDATAURL;
		        case "ClientCodeRelationID_SycnOkMessage":
					return PROPERTY_CLIENTCODERELATIONID_SYCNOKMESSAGE;
		        case "ClientCodeRelationID_SycnFailedMessage":
					return PROPERTY_CLIENTCODERELATIONID_SYCNFAILEDMESSAGE;
		        case "ClientCodeRelationID_StartDate":
					return PROPERTY_CLIENTCODERELATIONID_STARTDATE;
		        case "ClientCodeRelationID_EndDate":
					return PROPERTY_CLIENTCODERELATIONID_ENDDATE;
		        case "ClientCodeRelationID_IsEnable":
					return PROPERTY_CLIENTCODERELATIONID_ISENABLE;
		        case "ClientCodeRelationID_SycnNotInterceptCount":
					return PROPERTY_CLIENTCODERELATIONID_SYCNNOTINTERCEPTCOUNT;
		        case "ClientCodeRelationID_DefaultShowRecordDays":
					return PROPERTY_CLIENTCODERELATIONID_DEFAULTSHOWRECORDDAYS;
		        case "ClientCodeRelationID_CreateBy":
					return PROPERTY_CLIENTCODERELATIONID_CREATEBY;
		        case "ClientCodeRelationID_CreateAt":
					return PROPERTY_CLIENTCODERELATIONID_CREATEAT;
		        case "ClientCodeRelationID_LastModifyBy":
					return PROPERTY_CLIENTCODERELATIONID_LASTMODIFYBY;
		        case "ClientCodeRelationID_LastModifyAt":
					return PROPERTY_CLIENTCODERELATIONID_LASTMODIFYAT;
		        case "ClientCodeRelationID_LastModifyComment":
					return PROPERTY_CLIENTCODERELATIONID_LASTMODIFYCOMMENT;
              default:
                    return columnName;
            }
        }

        private static void ProcessQueryFilters(List<QueryFilter> filters)
        {
            foreach (QueryFilter queryFilter in filters)
            {
                queryFilter.FilterFieldName = ProcessColumnName(queryFilter.FilterFieldName);
            }
        }
		#endregion
		
      #region 公共常量

		public static readonly string CLASS_FULL_NAME = "SPS.Entity.Tables.SPRecordEntity";
		public static readonly string PROPERTY_NAME_ID = "Id";
		public static readonly string PROPERTY_NAME_LINKID = "LinkID";
		public static readonly string PROPERTY_NAME_MO = "Mo";
		public static readonly string PROPERTY_NAME_MOBILE = "Mobile";
		public static readonly string PROPERTY_NAME_SPNUMBER = "SpNumber";
		public static readonly string PROPERTY_NAME_PROVINCE = "Province";
		public static readonly string PROPERTY_NAME_CITY = "City";
		public static readonly string PROPERTY_NAME_OPERATORTYPE = "OperatorType";
		public static readonly string PROPERTY_NAME_CREATEDATE = "CreateDate";
		public static readonly string PROPERTY_NAME_ISREPORT = "IsReport";
		public static readonly string PROPERTY_NAME_ISINTERCEPT = "IsIntercept";
		public static readonly string PROPERTY_NAME_ISSYCNTOCLIENT = "IsSycnToClient";
		public static readonly string PROPERTY_NAME_ISSYCNSUCCESSED = "IsSycnSuccessed";
		public static readonly string PROPERTY_NAME_ISSTATOK = "IsStatOK";
		public static readonly string PROPERTY_NAME_SYCNRETRYTIMES = "SycnRetryTimes";
		public static readonly string PROPERTY_NAME_CHANNELID = "ChannelID";
		public static readonly string PROPERTY_NAME_CLIENTID = "ClientID";
		public static readonly string PROPERTY_NAME_CODEID = "CodeID";
		public static readonly string PROPERTY_NAME_CLIENTCODERELATIONID = "ClientCodeRelationID";
		public static readonly string PROPERTY_NAME_PRICE = "Price";
		public static readonly string PROPERTY_NAME_COUNT = "Count";
		
        #endregion
	
 
		#region channelID字段外键查询字段
        public const string PROPERTY_CHANNELID_ALIAS_NAME = "ChannelID_SPRecordEntity_Alias";
		public const string PROPERTY_CHANNELID_ID = "ChannelID_SPRecordEntity_Alias.Id";
		public const string PROPERTY_CHANNELID_NAME = "ChannelID_SPRecordEntity_Alias.Name";
		public const string PROPERTY_CHANNELID_CODE = "ChannelID_SPRecordEntity_Alias.Code";
		public const string PROPERTY_CHANNELID_DATAOKMESSAGE = "ChannelID_SPRecordEntity_Alias.DataOkMessage";
		public const string PROPERTY_CHANNELID_DATAFAILEDMESSAGE = "ChannelID_SPRecordEntity_Alias.DataFailedMessage";
		public const string PROPERTY_CHANNELID_DESCRIPTION = "ChannelID_SPRecordEntity_Alias.Description";
		public const string PROPERTY_CHANNELID_DATAADAPTERTYPE = "ChannelID_SPRecordEntity_Alias.DataAdapterType";
		public const string PROPERTY_CHANNELID_DATAADAPTERURL = "ChannelID_SPRecordEntity_Alias.DataAdapterUrl";
		public const string PROPERTY_CHANNELID_CHANNELTYPE = "ChannelID_SPRecordEntity_Alias.ChannelType";
		public const string PROPERTY_CHANNELID_IVRFEETIMETYPE = "ChannelID_SPRecordEntity_Alias.IVRFeeTimeType";
		public const string PROPERTY_CHANNELID_IVRTIMEFORMAT = "ChannelID_SPRecordEntity_Alias.IVRTimeFormat";
		public const string PROPERTY_CHANNELID_ISSTATEREPORT = "ChannelID_SPRecordEntity_Alias.IsStateReport";
		public const string PROPERTY_CHANNELID_STATEREPORTTYPE = "ChannelID_SPRecordEntity_Alias.StateReportType";
		public const string PROPERTY_CHANNELID_REPORTOKMESSAGE = "ChannelID_SPRecordEntity_Alias.ReportOkMessage";
		public const string PROPERTY_CHANNELID_REPORTFAILEDMESSAGE = "ChannelID_SPRecordEntity_Alias.ReportFailedMessage";
		public const string PROPERTY_CHANNELID_STATEREPORTPARAMNAME = "ChannelID_SPRecordEntity_Alias.StateReportParamName";
		public const string PROPERTY_CHANNELID_STATEREPORTPARAMVALUE = "ChannelID_SPRecordEntity_Alias.StateReportParamValue";
		public const string PROPERTY_CHANNELID_REQUESTTYPEPARAMNAME = "ChannelID_SPRecordEntity_Alias.RequestTypeParamName";
		public const string PROPERTY_CHANNELID_REQUESTTYPEPARAMSTATEREPORTVALUE = "ChannelID_SPRecordEntity_Alias.RequestTypeParamStateReportValue";
		public const string PROPERTY_CHANNELID_REQUESTTYPEPARAMDATAREPORTVALUE = "ChannelID_SPRecordEntity_Alias.RequestTypeParamDataReportValue";
		public const string PROPERTY_CHANNELID_HASFILTERS = "ChannelID_SPRecordEntity_Alias.HasFilters";
		public const string PROPERTY_CHANNELID_ISMONITORREQUEST = "ChannelID_SPRecordEntity_Alias.IsMonitorRequest";
		public const string PROPERTY_CHANNELID_ISLOGREQUEST = "ChannelID_SPRecordEntity_Alias.IsLogRequest";
		public const string PROPERTY_CHANNELID_ISPARAMSCONVERT = "ChannelID_SPRecordEntity_Alias.IsParamsConvert";
		public const string PROPERTY_CHANNELID_ISAUTOLINKID = "ChannelID_SPRecordEntity_Alias.IsAutoLinkID";
		public const string PROPERTY_CHANNELID_AUTOLINKIDFIELDS = "ChannelID_SPRecordEntity_Alias.AutoLinkIDFields";
		public const string PROPERTY_CHANNELID_LOGREQUESTTYPE = "ChannelID_SPRecordEntity_Alias.LogRequestType";
		public const string PROPERTY_CHANNELID_PRICE = "ChannelID_SPRecordEntity_Alias.Price";
		public const string PROPERTY_CHANNELID_DEFAULTRATE = "ChannelID_SPRecordEntity_Alias.DefaultRate";
		public const string PROPERTY_CHANNELID_CHANNELDETAILINFO = "ChannelID_SPRecordEntity_Alias.ChannelDetailInfo";
		public const string PROPERTY_CHANNELID_UPPERID = "ChannelID_SPRecordEntity_Alias.UpperID";
		public const string PROPERTY_CHANNELID_CHANNELSTATUS = "ChannelID_SPRecordEntity_Alias.ChannelStatus";
		public const string PROPERTY_CHANNELID_ISDISABLE = "ChannelID_SPRecordEntity_Alias.IsDisable";
		public const string PROPERTY_CHANNELID_CREATEBY = "ChannelID_SPRecordEntity_Alias.CreateBy";
		public const string PROPERTY_CHANNELID_CREATEAT = "ChannelID_SPRecordEntity_Alias.CreateAt";
		public const string PROPERTY_CHANNELID_LASTMODIFYBY = "ChannelID_SPRecordEntity_Alias.LastModifyBy";
		public const string PROPERTY_CHANNELID_LASTMODIFYAT = "ChannelID_SPRecordEntity_Alias.LastModifyAt";
		public const string PROPERTY_CHANNELID_LASTMODIFYCOMMENT = "ChannelID_SPRecordEntity_Alias.LastModifyComment";
		#endregion
		#region clientID字段外键查询字段
        public const string PROPERTY_CLIENTID_ALIAS_NAME = "ClientID_SPRecordEntity_Alias";
		public const string PROPERTY_CLIENTID_ID = "ClientID_SPRecordEntity_Alias.Id";
		public const string PROPERTY_CLIENTID_NAME = "ClientID_SPRecordEntity_Alias.Name";
		public const string PROPERTY_CLIENTID_DESCRIPTION = "ClientID_SPRecordEntity_Alias.Description";
		public const string PROPERTY_CLIENTID_USERID = "ClientID_SPRecordEntity_Alias.UserID";
		public const string PROPERTY_CLIENTID_ISDEFAULTCLIENT = "ClientID_SPRecordEntity_Alias.IsDefaultClient";
		public const string PROPERTY_CLIENTID_SYNCDATA = "ClientID_SPRecordEntity_Alias.SyncData";
		public const string PROPERTY_CLIENTID_SYCNRETRYTIMES = "ClientID_SPRecordEntity_Alias.SycnRetryTimes";
		public const string PROPERTY_CLIENTID_SYNCTYPE = "ClientID_SPRecordEntity_Alias.SyncType";
		public const string PROPERTY_CLIENTID_SYCNNOTINTERCEPTCOUNT = "ClientID_SPRecordEntity_Alias.SycnNotInterceptCount";
		public const string PROPERTY_CLIENTID_SYCNDATAURL = "ClientID_SPRecordEntity_Alias.SycnDataUrl";
		public const string PROPERTY_CLIENTID_SYCNOKMESSAGE = "ClientID_SPRecordEntity_Alias.SycnOkMessage";
		public const string PROPERTY_CLIENTID_SYCNFAILEDMESSAGE = "ClientID_SPRecordEntity_Alias.SycnFailedMessage";
		public const string PROPERTY_CLIENTID_ALIAS = "ClientID_SPRecordEntity_Alias.Alias";
		public const string PROPERTY_CLIENTID_INTERCEPTRATE = "ClientID_SPRecordEntity_Alias.InterceptRate";
		public const string PROPERTY_CLIENTID_DEFAULTPRICE = "ClientID_SPRecordEntity_Alias.DefaultPrice";
		public const string PROPERTY_CLIENTID_DEFAULTSHOWRECORDDAYS = "ClientID_SPRecordEntity_Alias.DefaultShowRecordDays";
		public const string PROPERTY_CLIENTID_CREATEBY = "ClientID_SPRecordEntity_Alias.CreateBy";
		public const string PROPERTY_CLIENTID_CREATEAT = "ClientID_SPRecordEntity_Alias.CreateAt";
		public const string PROPERTY_CLIENTID_LASTMODIFYBY = "ClientID_SPRecordEntity_Alias.LastModifyBy";
		public const string PROPERTY_CLIENTID_LASTMODIFYAT = "ClientID_SPRecordEntity_Alias.LastModifyAt";
		public const string PROPERTY_CLIENTID_LASTMODIFYCOMMENT = "ClientID_SPRecordEntity_Alias.LastModifyComment";
		#endregion
		#region codeID字段外键查询字段
        public const string PROPERTY_CODEID_ALIAS_NAME = "CodeID_SPRecordEntity_Alias";
		public const string PROPERTY_CODEID_ID = "CodeID_SPRecordEntity_Alias.Id";
		public const string PROPERTY_CODEID_NAME = "CodeID_SPRecordEntity_Alias.Name";
		public const string PROPERTY_CODEID_DESCRIPTION = "CodeID_SPRecordEntity_Alias.Description";
		public const string PROPERTY_CODEID_CODE = "CodeID_SPRecordEntity_Alias.Code";
		public const string PROPERTY_CODEID_CODETYPE = "CodeID_SPRecordEntity_Alias.CodeType";
		public const string PROPERTY_CODEID_CHANNELID = "CodeID_SPRecordEntity_Alias.ChannelID";
		public const string PROPERTY_CODEID_MO = "CodeID_SPRecordEntity_Alias.Mo";
		public const string PROPERTY_CODEID_MOTYPE = "CodeID_SPRecordEntity_Alias.MOType";
		public const string PROPERTY_CODEID_MOLENGTH = "CodeID_SPRecordEntity_Alias.MOLength";
		public const string PROPERTY_CODEID_ORDERINDEX = "CodeID_SPRecordEntity_Alias.OrderIndex";
		public const string PROPERTY_CODEID_SPCODE = "CodeID_SPRecordEntity_Alias.SPCode";
		public const string PROPERTY_CODEID_SPCODETYPE = "CodeID_SPRecordEntity_Alias.SPCodeType";
		public const string PROPERTY_CODEID_SPCODELENGTH = "CodeID_SPRecordEntity_Alias.SPCodeLength";
		public const string PROPERTY_CODEID_HASFILTERS = "CodeID_SPRecordEntity_Alias.HasFilters";
		public const string PROPERTY_CODEID_HASPARAMSCONVERT = "CodeID_SPRecordEntity_Alias.HasParamsConvert";
		public const string PROPERTY_CODEID_ISDIABLE = "CodeID_SPRecordEntity_Alias.IsDiable";
		public const string PROPERTY_CODEID_PRICE = "CodeID_SPRecordEntity_Alias.Price";
		public const string PROPERTY_CODEID_OPERATIONTYPE = "CodeID_SPRecordEntity_Alias.OperationType";
		public const string PROPERTY_CODEID_HASDAYTOTALLIMIT = "CodeID_SPRecordEntity_Alias.HasDayTotalLimit";
		public const string PROPERTY_CODEID_DAYTOTALLIMITCOUNT = "CodeID_SPRecordEntity_Alias.DayTotalLimitCount";
		public const string PROPERTY_CODEID_HASPHONELIMIT = "CodeID_SPRecordEntity_Alias.HasPhoneLimit";
		public const string PROPERTY_CODEID_PHONELIMITDAYCOUNT = "CodeID_SPRecordEntity_Alias.PhoneLimitDayCount";
		public const string PROPERTY_CODEID_PHONELIMITMONTHCOUNT = "CodeID_SPRecordEntity_Alias.PhoneLimitMonthCount";
		public const string PROPERTY_CODEID_PHONELIMITTYPE = "CodeID_SPRecordEntity_Alias.PhoneLimitType";
		public const string PROPERTY_CODEID_LIMITPROVINCE = "CodeID_SPRecordEntity_Alias.LimitProvince";
		public const string PROPERTY_CODEID_LIMITPROVINCEAREA = "CodeID_SPRecordEntity_Alias.LimitProvinceArea";
		public const string PROPERTY_CODEID_CREATEBY = "CodeID_SPRecordEntity_Alias.CreateBy";
		public const string PROPERTY_CODEID_CREATEAT = "CodeID_SPRecordEntity_Alias.CreateAt";
		public const string PROPERTY_CODEID_LASTMODIFYBY = "CodeID_SPRecordEntity_Alias.LastModifyBy";
		public const string PROPERTY_CODEID_LASTMODIFYAT = "CodeID_SPRecordEntity_Alias.LastModifyAt";
		public const string PROPERTY_CODEID_LASTMODIFYCOMMENT = "CodeID_SPRecordEntity_Alias.LastModifyComment";
		#endregion
		#region clientCodeRelationID字段外键查询字段
        public const string PROPERTY_CLIENTCODERELATIONID_ALIAS_NAME = "ClientCodeRelationID_SPRecordEntity_Alias";
		public const string PROPERTY_CLIENTCODERELATIONID_ID = "ClientCodeRelationID_SPRecordEntity_Alias.Id";
		public const string PROPERTY_CLIENTCODERELATIONID_CODEID = "ClientCodeRelationID_SPRecordEntity_Alias.CodeID";
		public const string PROPERTY_CLIENTCODERELATIONID_CLIENTID = "ClientCodeRelationID_SPRecordEntity_Alias.ClientID";
		public const string PROPERTY_CLIENTCODERELATIONID_PRICE = "ClientCodeRelationID_SPRecordEntity_Alias.Price";
		public const string PROPERTY_CLIENTCODERELATIONID_INTERCEPTRATE = "ClientCodeRelationID_SPRecordEntity_Alias.InterceptRate";
		public const string PROPERTY_CLIENTCODERELATIONID_USECLIENTDEFAULTSYCNSETTING = "ClientCodeRelationID_SPRecordEntity_Alias.UseClientDefaultSycnSetting";
		public const string PROPERTY_CLIENTCODERELATIONID_SYNCDATA = "ClientCodeRelationID_SPRecordEntity_Alias.SyncData";
		public const string PROPERTY_CLIENTCODERELATIONID_SYCNRETRYTIMES = "ClientCodeRelationID_SPRecordEntity_Alias.SycnRetryTimes";
		public const string PROPERTY_CLIENTCODERELATIONID_SYNCTYPE = "ClientCodeRelationID_SPRecordEntity_Alias.SyncType";
		public const string PROPERTY_CLIENTCODERELATIONID_SYCNDATAURL = "ClientCodeRelationID_SPRecordEntity_Alias.SycnDataUrl";
		public const string PROPERTY_CLIENTCODERELATIONID_SYCNOKMESSAGE = "ClientCodeRelationID_SPRecordEntity_Alias.SycnOkMessage";
		public const string PROPERTY_CLIENTCODERELATIONID_SYCNFAILEDMESSAGE = "ClientCodeRelationID_SPRecordEntity_Alias.SycnFailedMessage";
		public const string PROPERTY_CLIENTCODERELATIONID_STARTDATE = "ClientCodeRelationID_SPRecordEntity_Alias.StartDate";
		public const string PROPERTY_CLIENTCODERELATIONID_ENDDATE = "ClientCodeRelationID_SPRecordEntity_Alias.EndDate";
		public const string PROPERTY_CLIENTCODERELATIONID_ISENABLE = "ClientCodeRelationID_SPRecordEntity_Alias.IsEnable";
		public const string PROPERTY_CLIENTCODERELATIONID_SYCNNOTINTERCEPTCOUNT = "ClientCodeRelationID_SPRecordEntity_Alias.SycnNotInterceptCount";
		public const string PROPERTY_CLIENTCODERELATIONID_DEFAULTSHOWRECORDDAYS = "ClientCodeRelationID_SPRecordEntity_Alias.DefaultShowRecordDays";
		public const string PROPERTY_CLIENTCODERELATIONID_CREATEBY = "ClientCodeRelationID_SPRecordEntity_Alias.CreateBy";
		public const string PROPERTY_CLIENTCODERELATIONID_CREATEAT = "ClientCodeRelationID_SPRecordEntity_Alias.CreateAt";
		public const string PROPERTY_CLIENTCODERELATIONID_LASTMODIFYBY = "ClientCodeRelationID_SPRecordEntity_Alias.LastModifyBy";
		public const string PROPERTY_CLIENTCODERELATIONID_LASTMODIFYAT = "ClientCodeRelationID_SPRecordEntity_Alias.LastModifyAt";
		public const string PROPERTY_CLIENTCODERELATIONID_LASTMODIFYCOMMENT = "ClientCodeRelationID_SPRecordEntity_Alias.LastModifyComment";
		#endregion
      	
	
	
		 
		
		
		
		


		#region Public Property
		/// <summary>
		/// 
		/// </summary>		
		public int Id
		{
			get
			{
				return entity.Id;
			}
			set
			{
				entity.Id = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public string LinkID
		{
			get
			{
				return entity.LinkID;
			}
			set
			{
				entity.LinkID = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public string Mo
		{
			get
			{
				return entity.Mo;
			}
			set
			{
				entity.Mo = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public string Mobile
		{
			get
			{
				return entity.Mobile;
			}
			set
			{
				entity.Mobile = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public string SpNumber
		{
			get
			{
				return entity.SpNumber;
			}
			set
			{
				entity.SpNumber = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public string Province
		{
			get
			{
				return entity.Province;
			}
			set
			{
				entity.Province = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public string City
		{
			get
			{
				return entity.City;
			}
			set
			{
				entity.City = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public string OperatorType
		{
			get
			{
				return entity.OperatorType;
			}
			set
			{
				entity.OperatorType = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public DateTime CreateDate
		{
			get
			{
				return entity.CreateDate;
			}
			set
			{
				entity.CreateDate = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public bool IsReport
		{
			get
			{
				return entity.IsReport;
			}
			set
			{
				entity.IsReport = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public bool IsIntercept
		{
			get
			{
				return entity.IsIntercept;
			}
			set
			{
				entity.IsIntercept = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public bool IsSycnToClient
		{
			get
			{
				return entity.IsSycnToClient;
			}
			set
			{
				entity.IsSycnToClient = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public bool IsSycnSuccessed
		{
			get
			{
				return entity.IsSycnSuccessed;
			}
			set
			{
				entity.IsSycnSuccessed = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public bool IsStatOK
		{
			get
			{
				return entity.IsStatOK;
			}
			set
			{
				entity.IsStatOK = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public int SycnRetryTimes
		{
			get
			{
				return entity.SycnRetryTimes;
			}
			set
			{
				entity.SycnRetryTimes = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public SPChannelWrapper ChannelID
		{
			get
			{
				return SPChannelWrapper.ConvertEntityToWrapper(entity.ChannelID) ;
			}
			set
			{
				entity.ChannelID = ((value == null) ? null : value.Entity);
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public SPSClientWrapper ClientID
		{
			get
			{
				return SPSClientWrapper.ConvertEntityToWrapper(entity.ClientID) ;
			}
			set
			{
				entity.ClientID = ((value == null) ? null : value.Entity);
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public SPCodeWrapper CodeID
		{
			get
			{
				return SPCodeWrapper.ConvertEntityToWrapper(entity.CodeID) ;
			}
			set
			{
				entity.CodeID = ((value == null) ? null : value.Entity);
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public SPClientCodeRelationWrapper ClientCodeRelationID
		{
			get
			{
				return SPClientCodeRelationWrapper.ConvertEntityToWrapper(entity.ClientCodeRelationID) ;
			}
			set
			{
				entity.ClientCodeRelationID = ((value == null) ? null : value.Entity);
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public decimal? Price
		{
			get
			{
				return entity.Price;
			}
			set
			{
				entity.Price = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public int Count
		{
			get
			{
				return entity.Count;
			}
			set
			{
				entity.Count = value;
			}
		}
		#endregion 


		#region Query Property
		
		
		#region channelID字段外键查询字段
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_ID)]
        public int? ChannelID_Id
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.Id;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_NAME)]
        public string ChannelID_Name
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.Name;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_CODE)]
        public string ChannelID_Code
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.Code;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_DATAOKMESSAGE)]
        public string ChannelID_DataOkMessage
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.DataOkMessage;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_DATAFAILEDMESSAGE)]
        public string ChannelID_DataFailedMessage
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.DataFailedMessage;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_DESCRIPTION)]
        public string ChannelID_Description
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.Description;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_DATAADAPTERTYPE)]
        public string ChannelID_DataAdapterType
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.DataAdapterType;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_DATAADAPTERURL)]
        public string ChannelID_DataAdapterUrl
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.DataAdapterUrl;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_CHANNELTYPE)]
        public string ChannelID_ChannelType
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.ChannelType;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_IVRFEETIMETYPE)]
        public string ChannelID_IVRFeeTimeType
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.IVRFeeTimeType;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_IVRTIMEFORMAT)]
        public string ChannelID_IVRTimeFormat
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.IVRTimeFormat;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_ISSTATEREPORT)]
        public bool? ChannelID_IsStateReport
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.IsStateReport;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_STATEREPORTTYPE)]
        public string ChannelID_StateReportType
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.StateReportType;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_REPORTOKMESSAGE)]
        public string ChannelID_ReportOkMessage
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.ReportOkMessage;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_REPORTFAILEDMESSAGE)]
        public string ChannelID_ReportFailedMessage
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.ReportFailedMessage;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_STATEREPORTPARAMNAME)]
        public string ChannelID_StateReportParamName
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.StateReportParamName;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_STATEREPORTPARAMVALUE)]
        public string ChannelID_StateReportParamValue
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.StateReportParamValue;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_REQUESTTYPEPARAMNAME)]
        public string ChannelID_RequestTypeParamName
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.RequestTypeParamName;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_REQUESTTYPEPARAMSTATEREPORTVALUE)]
        public string ChannelID_RequestTypeParamStateReportValue
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.RequestTypeParamStateReportValue;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_REQUESTTYPEPARAMDATAREPORTVALUE)]
        public string ChannelID_RequestTypeParamDataReportValue
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.RequestTypeParamDataReportValue;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_HASFILTERS)]
        public bool? ChannelID_HasFilters
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.HasFilters;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_ISMONITORREQUEST)]
        public bool? ChannelID_IsMonitorRequest
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.IsMonitorRequest;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_ISLOGREQUEST)]
        public bool? ChannelID_IsLogRequest
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.IsLogRequest;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_ISPARAMSCONVERT)]
        public bool? ChannelID_IsParamsConvert
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.IsParamsConvert;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_ISAUTOLINKID)]
        public bool? ChannelID_IsAutoLinkID
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.IsAutoLinkID;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_AUTOLINKIDFIELDS)]
        public string ChannelID_AutoLinkIDFields
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.AutoLinkIDFields;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_LOGREQUESTTYPE)]
        public string ChannelID_LogRequestType
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.LogRequestType;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_PRICE)]
        public decimal? ChannelID_Price
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.Price;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_DEFAULTRATE)]
        public decimal? ChannelID_DefaultRate
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.DefaultRate;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_CHANNELDETAILINFO)]
        public string ChannelID_ChannelDetailInfo
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.ChannelDetailInfo;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_UPPERID)]
        public SPUpperWrapper ChannelID_UpperID
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.UpperID;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_CHANNELSTATUS)]
        public string ChannelID_ChannelStatus
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.ChannelStatus;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_ISDISABLE)]
        public bool? ChannelID_IsDisable
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.IsDisable;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_CREATEBY)]
        public int? ChannelID_CreateBy
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.CreateBy;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_CREATEAT)]
        public DateTime? ChannelID_CreateAt
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.CreateAt;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_LASTMODIFYBY)]
        public int? ChannelID_LastModifyBy
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.LastModifyBy;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_LASTMODIFYAT)]
        public DateTime? ChannelID_LastModifyAt
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.LastModifyAt;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_LASTMODIFYCOMMENT)]
        public string ChannelID_LastModifyComment
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.LastModifyComment;
            }
        }
		#endregion
		#region clientID字段外键查询字段
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTID_ID)]
        public int? ClientID_Id
        {
            get
            {
                if (this. ClientID == null)
                    return null;
                return  ClientID.Id;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTID_NAME)]
        public string ClientID_Name
        {
            get
            {
                if (this. ClientID == null)
                    return null;
                return  ClientID.Name;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTID_DESCRIPTION)]
        public string ClientID_Description
        {
            get
            {
                if (this. ClientID == null)
                    return null;
                return  ClientID.Description;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTID_USERID)]
        public int? ClientID_UserID
        {
            get
            {
                if (this. ClientID == null)
                    return null;
                return  ClientID.UserID;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTID_ISDEFAULTCLIENT)]
        public bool? ClientID_IsDefaultClient
        {
            get
            {
                if (this. ClientID == null)
                    return null;
                return  ClientID.IsDefaultClient;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTID_SYNCDATA)]
        public bool? ClientID_SyncData
        {
            get
            {
                if (this. ClientID == null)
                    return null;
                return  ClientID.SyncData;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTID_SYCNRETRYTIMES)]
        public int? ClientID_SycnRetryTimes
        {
            get
            {
                if (this. ClientID == null)
                    return null;
                return  ClientID.SycnRetryTimes;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTID_SYNCTYPE)]
        public string ClientID_SyncType
        {
            get
            {
                if (this. ClientID == null)
                    return null;
                return  ClientID.SyncType;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTID_SYCNNOTINTERCEPTCOUNT)]
        public int? ClientID_SycnNotInterceptCount
        {
            get
            {
                if (this. ClientID == null)
                    return null;
                return  ClientID.SycnNotInterceptCount;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTID_SYCNDATAURL)]
        public string ClientID_SycnDataUrl
        {
            get
            {
                if (this. ClientID == null)
                    return null;
                return  ClientID.SycnDataUrl;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTID_SYCNOKMESSAGE)]
        public string ClientID_SycnOkMessage
        {
            get
            {
                if (this. ClientID == null)
                    return null;
                return  ClientID.SycnOkMessage;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTID_SYCNFAILEDMESSAGE)]
        public string ClientID_SycnFailedMessage
        {
            get
            {
                if (this. ClientID == null)
                    return null;
                return  ClientID.SycnFailedMessage;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTID_ALIAS)]
        public string ClientID_Alias
        {
            get
            {
                if (this. ClientID == null)
                    return null;
                return  ClientID.Alias;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTID_INTERCEPTRATE)]
        public decimal? ClientID_InterceptRate
        {
            get
            {
                if (this. ClientID == null)
                    return null;
                return  ClientID.InterceptRate;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTID_DEFAULTPRICE)]
        public decimal? ClientID_DefaultPrice
        {
            get
            {
                if (this. ClientID == null)
                    return null;
                return  ClientID.DefaultPrice;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTID_DEFAULTSHOWRECORDDAYS)]
        public int? ClientID_DefaultShowRecordDays
        {
            get
            {
                if (this. ClientID == null)
                    return null;
                return  ClientID.DefaultShowRecordDays;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTID_CREATEBY)]
        public int? ClientID_CreateBy
        {
            get
            {
                if (this. ClientID == null)
                    return null;
                return  ClientID.CreateBy;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTID_CREATEAT)]
        public DateTime? ClientID_CreateAt
        {
            get
            {
                if (this. ClientID == null)
                    return null;
                return  ClientID.CreateAt;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTID_LASTMODIFYBY)]
        public int? ClientID_LastModifyBy
        {
            get
            {
                if (this. ClientID == null)
                    return null;
                return  ClientID.LastModifyBy;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTID_LASTMODIFYAT)]
        public DateTime? ClientID_LastModifyAt
        {
            get
            {
                if (this. ClientID == null)
                    return null;
                return  ClientID.LastModifyAt;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTID_LASTMODIFYCOMMENT)]
        public string ClientID_LastModifyComment
        {
            get
            {
                if (this. ClientID == null)
                    return null;
                return  ClientID.LastModifyComment;
            }
        }
		#endregion
		#region codeID字段外键查询字段
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_ID)]
        public int? CodeID_Id
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.Id;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_NAME)]
        public string CodeID_Name
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.Name;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_DESCRIPTION)]
        public string CodeID_Description
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.Description;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_CODE)]
        public string CodeID_Code
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.Code;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_CODETYPE)]
        public string CodeID_CodeType
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.CodeType;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_CHANNELID)]
        public SPChannelWrapper CodeID_ChannelID
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.ChannelID;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_MO)]
        public string CodeID_Mo
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.Mo;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_MOTYPE)]
        public string CodeID_MOType
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.MOType;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_MOLENGTH)]
        public int? CodeID_MOLength
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.MOLength;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_ORDERINDEX)]
        public int? CodeID_OrderIndex
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.OrderIndex;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_SPCODE)]
        public string CodeID_SPCode
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.SPCode;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_SPCODETYPE)]
        public string CodeID_SPCodeType
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.SPCodeType;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_SPCODELENGTH)]
        public int? CodeID_SPCodeLength
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.SPCodeLength;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_HASFILTERS)]
        public bool? CodeID_HasFilters
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.HasFilters;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_HASPARAMSCONVERT)]
        public bool? CodeID_HasParamsConvert
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.HasParamsConvert;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_ISDIABLE)]
        public bool? CodeID_IsDiable
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.IsDiable;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_PRICE)]
        public decimal? CodeID_Price
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.Price;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_OPERATIONTYPE)]
        public string CodeID_OperationType
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.OperationType;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_HASDAYTOTALLIMIT)]
        public bool? CodeID_HasDayTotalLimit
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.HasDayTotalLimit;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_DAYTOTALLIMITCOUNT)]
        public int? CodeID_DayTotalLimitCount
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.DayTotalLimitCount;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_HASPHONELIMIT)]
        public bool? CodeID_HasPhoneLimit
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.HasPhoneLimit;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_PHONELIMITDAYCOUNT)]
        public int? CodeID_PhoneLimitDayCount
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.PhoneLimitDayCount;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_PHONELIMITMONTHCOUNT)]
        public int? CodeID_PhoneLimitMonthCount
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.PhoneLimitMonthCount;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_PHONELIMITTYPE)]
        public int? CodeID_PhoneLimitType
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.PhoneLimitType;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_LIMITPROVINCE)]
        public bool? CodeID_LimitProvince
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.LimitProvince;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_LIMITPROVINCEAREA)]
        public string CodeID_LimitProvinceArea
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.LimitProvinceArea;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_CREATEBY)]
        public int? CodeID_CreateBy
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.CreateBy;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_CREATEAT)]
        public DateTime? CodeID_CreateAt
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.CreateAt;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_LASTMODIFYBY)]
        public int? CodeID_LastModifyBy
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.LastModifyBy;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_LASTMODIFYAT)]
        public DateTime? CodeID_LastModifyAt
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.LastModifyAt;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_LASTMODIFYCOMMENT)]
        public string CodeID_LastModifyComment
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.LastModifyComment;
            }
        }
		#endregion
		#region clientCodeRelationID字段外键查询字段
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTCODERELATIONID_ID)]
        public int? ClientCodeRelationID_Id
        {
            get
            {
                if (this. ClientCodeRelationID == null)
                    return null;
                return  ClientCodeRelationID.Id;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTCODERELATIONID_CODEID)]
        public SPCodeWrapper ClientCodeRelationID_CodeID
        {
            get
            {
                if (this. ClientCodeRelationID == null)
                    return null;
                return  ClientCodeRelationID.CodeID;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTCODERELATIONID_CLIENTID)]
        public SPSClientWrapper ClientCodeRelationID_ClientID
        {
            get
            {
                if (this. ClientCodeRelationID == null)
                    return null;
                return  ClientCodeRelationID.ClientID;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTCODERELATIONID_PRICE)]
        public decimal? ClientCodeRelationID_Price
        {
            get
            {
                if (this. ClientCodeRelationID == null)
                    return null;
                return  ClientCodeRelationID.Price;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTCODERELATIONID_INTERCEPTRATE)]
        public decimal? ClientCodeRelationID_InterceptRate
        {
            get
            {
                if (this. ClientCodeRelationID == null)
                    return null;
                return  ClientCodeRelationID.InterceptRate;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTCODERELATIONID_USECLIENTDEFAULTSYCNSETTING)]
        public bool? ClientCodeRelationID_UseClientDefaultSycnSetting
        {
            get
            {
                if (this. ClientCodeRelationID == null)
                    return null;
                return  ClientCodeRelationID.UseClientDefaultSycnSetting;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTCODERELATIONID_SYNCDATA)]
        public bool? ClientCodeRelationID_SyncData
        {
            get
            {
                if (this. ClientCodeRelationID == null)
                    return null;
                return  ClientCodeRelationID.SyncData;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTCODERELATIONID_SYCNRETRYTIMES)]
        public string ClientCodeRelationID_SycnRetryTimes
        {
            get
            {
                if (this. ClientCodeRelationID == null)
                    return null;
                return  ClientCodeRelationID.SycnRetryTimes;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTCODERELATIONID_SYNCTYPE)]
        public string ClientCodeRelationID_SyncType
        {
            get
            {
                if (this. ClientCodeRelationID == null)
                    return null;
                return  ClientCodeRelationID.SyncType;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTCODERELATIONID_SYCNDATAURL)]
        public string ClientCodeRelationID_SycnDataUrl
        {
            get
            {
                if (this. ClientCodeRelationID == null)
                    return null;
                return  ClientCodeRelationID.SycnDataUrl;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTCODERELATIONID_SYCNOKMESSAGE)]
        public string ClientCodeRelationID_SycnOkMessage
        {
            get
            {
                if (this. ClientCodeRelationID == null)
                    return null;
                return  ClientCodeRelationID.SycnOkMessage;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTCODERELATIONID_SYCNFAILEDMESSAGE)]
        public string ClientCodeRelationID_SycnFailedMessage
        {
            get
            {
                if (this. ClientCodeRelationID == null)
                    return null;
                return  ClientCodeRelationID.SycnFailedMessage;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTCODERELATIONID_STARTDATE)]
        public DateTime? ClientCodeRelationID_StartDate
        {
            get
            {
                if (this. ClientCodeRelationID == null)
                    return null;
                return  ClientCodeRelationID.StartDate;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTCODERELATIONID_ENDDATE)]
        public DateTime? ClientCodeRelationID_EndDate
        {
            get
            {
                if (this. ClientCodeRelationID == null)
                    return null;
                return  ClientCodeRelationID.EndDate;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTCODERELATIONID_ISENABLE)]
        public bool? ClientCodeRelationID_IsEnable
        {
            get
            {
                if (this. ClientCodeRelationID == null)
                    return null;
                return  ClientCodeRelationID.IsEnable;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTCODERELATIONID_SYCNNOTINTERCEPTCOUNT)]
        public int? ClientCodeRelationID_SycnNotInterceptCount
        {
            get
            {
                if (this. ClientCodeRelationID == null)
                    return null;
                return  ClientCodeRelationID.SycnNotInterceptCount;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTCODERELATIONID_DEFAULTSHOWRECORDDAYS)]
        public int? ClientCodeRelationID_DefaultShowRecordDays
        {
            get
            {
                if (this. ClientCodeRelationID == null)
                    return null;
                return  ClientCodeRelationID.DefaultShowRecordDays;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTCODERELATIONID_CREATEBY)]
        public int? ClientCodeRelationID_CreateBy
        {
            get
            {
                if (this. ClientCodeRelationID == null)
                    return null;
                return  ClientCodeRelationID.CreateBy;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTCODERELATIONID_CREATEAT)]
        public DateTime? ClientCodeRelationID_CreateAt
        {
            get
            {
                if (this. ClientCodeRelationID == null)
                    return null;
                return  ClientCodeRelationID.CreateAt;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTCODERELATIONID_LASTMODIFYBY)]
        public int? ClientCodeRelationID_LastModifyBy
        {
            get
            {
                if (this. ClientCodeRelationID == null)
                    return null;
                return  ClientCodeRelationID.LastModifyBy;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTCODERELATIONID_LASTMODIFYAT)]
        public DateTime? ClientCodeRelationID_LastModifyAt
        {
            get
            {
                if (this. ClientCodeRelationID == null)
                    return null;
                return  ClientCodeRelationID.LastModifyAt;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTCODERELATIONID_LASTMODIFYCOMMENT)]
        public string ClientCodeRelationID_LastModifyComment
        {
            get
            {
                if (this. ClientCodeRelationID == null)
                    return null;
                return  ClientCodeRelationID.LastModifyComment;
            }
        }
		#endregion
      	
   
		#endregion


        #region "FKQuery"
		
        public static List<SPRecordWrapper> FindAllByOrderByAndFilterAndChannelID(string orderByColumnName, bool isDesc,   SPChannelWrapper channelID,  PageQueryParams pageQueryParams)
        {
            return ConvertToWrapperList(businessProxy.FindAllByOrderByAndFilterAndChannelID(orderByColumnName, isDesc,   channelID.Entity, pageQueryParams));
        }

        public static List<SPRecordWrapper> FindAllByChannelID(SPChannelWrapper channelID)
        {
            return ConvertToWrapperList(businessProxy.FindAllByChannelID(channelID.Entity));
        }
		
		
        public static List<SPRecordWrapper> FindAllByOrderByAndFilterAndClientID(string orderByColumnName, bool isDesc,   SPSClientWrapper clientID,  PageQueryParams pageQueryParams)
        {
            return ConvertToWrapperList(businessProxy.FindAllByOrderByAndFilterAndClientID(orderByColumnName, isDesc,   clientID.Entity, pageQueryParams));
        }

        public static List<SPRecordWrapper> FindAllByClientID(SPSClientWrapper clientID)
        {
            return ConvertToWrapperList(businessProxy.FindAllByClientID(clientID.Entity));
        }
		
		
        public static List<SPRecordWrapper> FindAllByOrderByAndFilterAndCodeID(string orderByColumnName, bool isDesc,   SPCodeWrapper codeID,  PageQueryParams pageQueryParams)
        {
            return ConvertToWrapperList(businessProxy.FindAllByOrderByAndFilterAndCodeID(orderByColumnName, isDesc,   codeID.Entity, pageQueryParams));
        }

        public static List<SPRecordWrapper> FindAllByCodeID(SPCodeWrapper codeID)
        {
            return ConvertToWrapperList(businessProxy.FindAllByCodeID(codeID.Entity));
        }
		
		
        public static List<SPRecordWrapper> FindAllByOrderByAndFilterAndClientCodeRelationID(string orderByColumnName, bool isDesc,   SPClientCodeRelationWrapper clientCodeRelationID,  PageQueryParams pageQueryParams)
        {
            return ConvertToWrapperList(businessProxy.FindAllByOrderByAndFilterAndClientCodeRelationID(orderByColumnName, isDesc,   clientCodeRelationID.Entity, pageQueryParams));
        }

        public static List<SPRecordWrapper> FindAllByClientCodeRelationID(SPClientCodeRelationWrapper clientCodeRelationID)
        {
            return ConvertToWrapperList(businessProxy.FindAllByClientCodeRelationID(clientCodeRelationID.Entity));
        }
		



        #endregion








        #region Static Common Data Operation
		
		internal static List<SPRecordWrapper> ConvertToWrapperList(List<SPRecordEntity> entitylist)
        {
            List<SPRecordWrapper> list = new List<SPRecordWrapper>();
            foreach (SPRecordEntity lentity in entitylist)
            {
                list.Add(ConvertEntityToWrapper(lentity));
            }
            return list;
        }

		internal static List<SPRecordWrapper> ConvertToWrapperList(IList<SPRecordEntity> entitylist)
        {
            List<SPRecordWrapper> list = new List<SPRecordWrapper>();
            foreach (SPRecordEntity lentity in entitylist)
            {
                list.Add(ConvertEntityToWrapper(lentity));
            }
            return list;
        }
		
		internal static List<SPRecordEntity> ConvertToEntityList(List<SPRecordWrapper> wrapperlist)
        {
            List<SPRecordEntity> list = new List<SPRecordEntity>();
            foreach (SPRecordWrapper wrapper in wrapperlist)
            {
                list.Add(wrapper.entity);
            }
            return list;
        }

        internal static SPRecordWrapper ConvertEntityToWrapper(SPRecordEntity entity)
        {
            if (entity == null)
                return null;
				
            if (entity.Id == 0)
                return null;

            return new SPRecordWrapper(entity);
        }
		
		#endregion

    }//End Class
}// End Namespace

