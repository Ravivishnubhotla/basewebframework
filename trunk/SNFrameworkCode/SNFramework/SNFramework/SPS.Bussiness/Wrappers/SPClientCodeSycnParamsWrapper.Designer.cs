// Generated by MyGeneration Version # (1.3.0.9)
using System;
using System.Collections.Generic;
using System.Text;
using Spring.Context.Support;
using Common.Logging;
using SPS.Entity.Tables;
using SPS.Bussiness.ServiceProxys.Tables.Container;
using SPS.Bussiness.ServiceProxys.Tables;
using Legendigital.Framework.Common.Data.NHibernate.DynamicQuery;

namespace SPS.Bussiness.Wrappers
{
    public partial class SPClientCodeSycnParamsWrapper
    {
        #region Member

		internal static readonly ISPClientCodeSycnParamsServiceProxy businessProxy = ((SPS.Bussiness.ServiceProxys.Tables.Container.ServiceProxyContainer)(ContextRegistry.GetContext().GetObject("ServiceProxyContainerIocID", typeof(SPS.Bussiness.ServiceProxys.Tables.Container.ServiceProxyContainer)))).SPClientCodeSycnParamsServiceProxyInstance;
	 
	 
        internal SPClientCodeSycnParamsEntity entity;
		
		private static ILog logger = null;

        public static ILog Logger
        {
            get
            {
                if (logger == null)
                    logger = LogManager.GetLogger(typeof(SPClientCodeSycnParamsWrapper));
                return logger;
            }
        }

        #endregion

        #region Construtor
        public SPClientCodeSycnParamsWrapper() : this(new SPClientCodeSycnParamsEntity())
        {
            
        }

        internal SPClientCodeSycnParamsWrapper(SPClientCodeSycnParamsEntity entityObj)
        {
            entity = entityObj;
        }
		#endregion
		
		#region Equals 和 HashCode 方法覆盖
		public override bool Equals(object obj)
        {
            if (obj == null && entity!=null)
            {
                if (entity.Id == 0)
                    return true;

                return false;
            }
            return entity.Equals(obj);
        }

        public override int GetHashCode()
        {
            return entity.GetHashCode();
        }
		#endregion
		
      #region 公共常量

		public static readonly string CLASS_FULL_NAME = "SPS.Entity.Tables.SPClientCodeSycnParamsEntity";
		public static readonly string PROPERTY_NAME_ID = "Id";
		public static readonly string PROPERTY_NAME_NAME = "Name";
		public static readonly string PROPERTY_NAME_DESCRIPTION = "Description";
		public static readonly string PROPERTY_NAME_ISENABLE = "IsEnable";
		public static readonly string PROPERTY_NAME_ISREQUIRED = "IsRequired";
		public static readonly string PROPERTY_NAME_CODEID = "CodeID";
		public static readonly string PROPERTY_NAME_MAPPINGPARAMS = "MappingParams";
		public static readonly string PROPERTY_NAME_TITLE = "Title";
		public static readonly string PROPERTY_NAME_PARAMSVALUE = "ParamsValue";
		public static readonly string PROPERTY_NAME_PARAMSTYPE = "ParamsType";
		public static readonly string PROPERTY_NAME_CREATEBY = "CreateBy";
		public static readonly string PROPERTY_NAME_CREATEAT = "CreateAt";
		public static readonly string PROPERTY_NAME_LASTMODIFYBY = "LastModifyBy";
		public static readonly string PROPERTY_NAME_LASTMODIFYAT = "LastModifyAt";
		public static readonly string PROPERTY_NAME_LASTMODIFYCOMMENT = "LastModifyComment";
		
        #endregion
	
 
		#region codeID字段外键查询字段
        public static readonly string PROPERTY_CODEID_ALIAS_NAME = "CodeID_SPClientCodeSycnParamsEntity_Alias";
		public static readonly string PROPERTY_CODEID_ID = "CodeID_SPClientCodeSycnParamsEntity_Alias.Id";
		public static readonly string PROPERTY_CODEID_NAME = "CodeID_SPClientCodeSycnParamsEntity_Alias.Name";
		public static readonly string PROPERTY_CODEID_DESCRIPTION = "CodeID_SPClientCodeSycnParamsEntity_Alias.Description";
		public static readonly string PROPERTY_CODEID_CODE = "CodeID_SPClientCodeSycnParamsEntity_Alias.Code";
		public static readonly string PROPERTY_CODEID_CHANNELID = "CodeID_SPClientCodeSycnParamsEntity_Alias.ChannelID";
		public static readonly string PROPERTY_CODEID_MO = "CodeID_SPClientCodeSycnParamsEntity_Alias.Mo";
		public static readonly string PROPERTY_CODEID_MOTYPE = "CodeID_SPClientCodeSycnParamsEntity_Alias.MOType";
		public static readonly string PROPERTY_CODEID_ORDERINDEX = "CodeID_SPClientCodeSycnParamsEntity_Alias.OrderIndex";
		public static readonly string PROPERTY_CODEID_SPCODE = "CodeID_SPClientCodeSycnParamsEntity_Alias.SPCode";
		public static readonly string PROPERTY_CODEID_PROVINCE = "CodeID_SPClientCodeSycnParamsEntity_Alias.Province";
		public static readonly string PROPERTY_CODEID_DISABLECITY = "CodeID_SPClientCodeSycnParamsEntity_Alias.DisableCity";
		public static readonly string PROPERTY_CODEID_ISDIABLE = "CodeID_SPClientCodeSycnParamsEntity_Alias.IsDiable";
		public static readonly string PROPERTY_CODEID_SPTYPE = "CodeID_SPClientCodeSycnParamsEntity_Alias.SPType";
		public static readonly string PROPERTY_CODEID_CODELENGTH = "CodeID_SPClientCodeSycnParamsEntity_Alias.CodeLength";
		public static readonly string PROPERTY_CODEID_DAYLIMIT = "CodeID_SPClientCodeSycnParamsEntity_Alias.DayLimit";
		public static readonly string PROPERTY_CODEID_MONTHLIMIT = "CodeID_SPClientCodeSycnParamsEntity_Alias.MonthLimit";
		public static readonly string PROPERTY_CODEID_PRICE = "CodeID_SPClientCodeSycnParamsEntity_Alias.Price";
		public static readonly string PROPERTY_CODEID_SENDTEXT = "CodeID_SPClientCodeSycnParamsEntity_Alias.SendText";
		public static readonly string PROPERTY_CODEID_HASFILTERS = "CodeID_SPClientCodeSycnParamsEntity_Alias.HasFilters";
		public static readonly string PROPERTY_CODEID_CREATEBY = "CodeID_SPClientCodeSycnParamsEntity_Alias.CreateBy";
		public static readonly string PROPERTY_CODEID_CREATEAT = "CodeID_SPClientCodeSycnParamsEntity_Alias.CreateAt";
		public static readonly string PROPERTY_CODEID_LASTMODIFYBY = "CodeID_SPClientCodeSycnParamsEntity_Alias.LastModifyBy";
		public static readonly string PROPERTY_CODEID_LASTMODIFYAT = "CodeID_SPClientCodeSycnParamsEntity_Alias.LastModifyAt";
		public static readonly string PROPERTY_CODEID_LASTMODIFYCOMMENT = "CodeID_SPClientCodeSycnParamsEntity_Alias.LastModifyComment";
		public static readonly string PROPERTY_CODEID_HASPARAMSCONVERT = "CodeID_SPClientCodeSycnParamsEntity_Alias.HasParamsConvert";
		#endregion
      	
	
	
		 
		
		
		
		


		#region Public Property
		/// <summary>
		/// 
		/// </summary>		
		public int Id
		{
			get
			{
				return entity.Id;
			}
			set
			{
				entity.Id = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public string Name
		{
			get
			{
				return entity.Name;
			}
			set
			{
				entity.Name = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public string Description
		{
			get
			{
				return entity.Description;
			}
			set
			{
				entity.Description = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public bool IsEnable
		{
			get
			{
				return entity.IsEnable;
			}
			set
			{
				entity.IsEnable = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public bool IsRequired
		{
			get
			{
				return entity.IsRequired;
			}
			set
			{
				entity.IsRequired = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public SPCodeWrapper CodeID
		{
			get
			{
				return SPCodeWrapper.ConvertEntityToWrapper(entity.CodeID) ;
			}
			set
			{
				entity.CodeID = ((value == null) ? null : value.entity);
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public string MappingParams
		{
			get
			{
				return entity.MappingParams;
			}
			set
			{
				entity.MappingParams = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public string Title
		{
			get
			{
				return entity.Title;
			}
			set
			{
				entity.Title = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public string ParamsValue
		{
			get
			{
				return entity.ParamsValue;
			}
			set
			{
				entity.ParamsValue = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public string ParamsType
		{
			get
			{
				return entity.ParamsType;
			}
			set
			{
				entity.ParamsType = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public int? CreateBy
		{
			get
			{
				return entity.CreateBy;
			}
			set
			{
				entity.CreateBy = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public DateTime? CreateAt
		{
			get
			{
				return entity.CreateAt;
			}
			set
			{
				entity.CreateAt = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public int? LastModifyBy
		{
			get
			{
				return entity.LastModifyBy;
			}
			set
			{
				entity.LastModifyBy = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public DateTime? LastModifyAt
		{
			get
			{
				return entity.LastModifyAt;
			}
			set
			{
				entity.LastModifyAt = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public string LastModifyComment
		{
			get
			{
				return entity.LastModifyComment;
			}
			set
			{
				entity.LastModifyComment = value;
			}
		}
		#endregion 





        #region "FKQuery"
		
        public static List<SPClientCodeSycnParamsWrapper> FindAllByOrderByAndFilterAndCodeID(string orderByColumnName, bool isDesc,   SPCodeWrapper codeID,  PageQueryParams pageQueryParams)
        {
            return ConvertToWrapperList(businessProxy.FindAllByOrderByAndFilterAndCodeID(orderByColumnName, isDesc,   codeID.entity, pageQueryParams));
        }

        public static List<SPClientCodeSycnParamsWrapper> FindAllByCodeID(SPCodeWrapper codeID)
        {
            return ConvertToWrapperList(businessProxy.FindAllByCodeID(codeID.entity));
        }
		



        #endregion








        #region Static Common Data Operation
		
		internal static List<SPClientCodeSycnParamsWrapper> ConvertToWrapperList(List<SPClientCodeSycnParamsEntity> entitylist)
        {
            List<SPClientCodeSycnParamsWrapper> list = new List<SPClientCodeSycnParamsWrapper>();
            foreach (SPClientCodeSycnParamsEntity lentity in entitylist)
            {
                list.Add(ConvertEntityToWrapper(lentity));
            }
            return list;
        }

		internal static List<SPClientCodeSycnParamsWrapper> ConvertToWrapperList(IList<SPClientCodeSycnParamsEntity> entitylist)
        {
            List<SPClientCodeSycnParamsWrapper> list = new List<SPClientCodeSycnParamsWrapper>();
            foreach (SPClientCodeSycnParamsEntity lentity in entitylist)
            {
                list.Add(ConvertEntityToWrapper(lentity));
            }
            return list;
        }
		
		internal static List<SPClientCodeSycnParamsEntity> ConvertToEntityList(List<SPClientCodeSycnParamsWrapper> wrapperlist)
        {
            List<SPClientCodeSycnParamsEntity> list = new List<SPClientCodeSycnParamsEntity>();
            foreach (SPClientCodeSycnParamsWrapper wrapper in wrapperlist)
            {
                list.Add(wrapper.entity);
            }
            return list;
        }

        internal static SPClientCodeSycnParamsWrapper ConvertEntityToWrapper(SPClientCodeSycnParamsEntity entity)
        {
            if (entity == null)
                return null;
				
            if (entity.Id == 0)
                return null;

            return new SPClientCodeSycnParamsWrapper(entity);
        }
		
		#endregion

    }//End Class
}// End Namespace

