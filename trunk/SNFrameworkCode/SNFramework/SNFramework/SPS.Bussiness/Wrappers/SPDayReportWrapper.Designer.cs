// Generated by MyGeneration Version # (1.3.0.9)
using System;
using System.Collections.Generic;
using System.Text;
using Spring.Context.Support;
using Common.Logging;
using Legendigital.Framework.Common.Bussiness.NHibernate;
using SPS.Entity.Tables;
using SPS.Bussiness.ServiceProxys.Tables.Container;
using SPS.Bussiness.ServiceProxys.Tables;
using Legendigital.Framework.Common.Data.NHibernate.DynamicQuery;

namespace SPS.Bussiness.Wrappers
{
    public partial class SPDayReportWrapper   
    {
        #region Member

		internal static readonly ISPDayReportServiceProxy businessProxy = ((SPS.Bussiness.ServiceProxys.Tables.Container.ServiceProxyContainer)(ContextRegistry.GetContext().GetObject("ServiceProxyContainerIocID", typeof(SPS.Bussiness.ServiceProxys.Tables.Container.ServiceProxyContainer)))).SPDayReportServiceProxyInstance;
		
		
		internal SPDayReportEntity Entity
        {
            get { return this.entity; }
        }
		
        #endregion

        #region Construtor
		public SPDayReportWrapper() : base(new SPDayReportEntity())
        {
            
        }

        internal SPDayReportWrapper(SPDayReportEntity entityObj)
            : base(entityObj)
        {
        }
		#endregion

        #region Process Column Name
        private static string ProcessColumnName(string columnName)
        {
            switch (columnName)
            {
		        case "ClientID_Id":
					return PROPERTY_CLIENTID_ID;
		        case "ClientID_Name":
					return PROPERTY_CLIENTID_NAME;
		        case "ClientID_Description":
					return PROPERTY_CLIENTID_DESCRIPTION;
		        case "ClientID_UserID":
					return PROPERTY_CLIENTID_USERID;
		        case "ClientID_IsDefaultClient":
					return PROPERTY_CLIENTID_ISDEFAULTCLIENT;
		        case "ClientID_SyncData":
					return PROPERTY_CLIENTID_SYNCDATA;
		        case "ClientID_SycnRetryTimes":
					return PROPERTY_CLIENTID_SYCNRETRYTIMES;
		        case "ClientID_SyncType":
					return PROPERTY_CLIENTID_SYNCTYPE;
		        case "ClientID_SycnNotInterceptCount":
					return PROPERTY_CLIENTID_SYCNNOTINTERCEPTCOUNT;
		        case "ClientID_SycnDataUrl":
					return PROPERTY_CLIENTID_SYCNDATAURL;
		        case "ClientID_SycnOkMessage":
					return PROPERTY_CLIENTID_SYCNOKMESSAGE;
		        case "ClientID_SycnFailedMessage":
					return PROPERTY_CLIENTID_SYCNFAILEDMESSAGE;
		        case "ClientID_Alias":
					return PROPERTY_CLIENTID_ALIAS;
		        case "ClientID_InterceptRate":
					return PROPERTY_CLIENTID_INTERCEPTRATE;
		        case "ClientID_DefaultPrice":
					return PROPERTY_CLIENTID_DEFAULTPRICE;
		        case "ClientID_DefaultShowRecordDays":
					return PROPERTY_CLIENTID_DEFAULTSHOWRECORDDAYS;
		        case "ClientID_CreateBy":
					return PROPERTY_CLIENTID_CREATEBY;
		        case "ClientID_CreateAt":
					return PROPERTY_CLIENTID_CREATEAT;
		        case "ClientID_LastModifyBy":
					return PROPERTY_CLIENTID_LASTMODIFYBY;
		        case "ClientID_LastModifyAt":
					return PROPERTY_CLIENTID_LASTMODIFYAT;
		        case "ClientID_LastModifyComment":
					return PROPERTY_CLIENTID_LASTMODIFYCOMMENT;
		        case "ChannelID_Id":
					return PROPERTY_CHANNELID_ID;
		        case "ChannelID_Name":
					return PROPERTY_CHANNELID_NAME;
		        case "ChannelID_Code":
					return PROPERTY_CHANNELID_CODE;
		        case "ChannelID_DataOkMessage":
					return PROPERTY_CHANNELID_DATAOKMESSAGE;
		        case "ChannelID_DataFailedMessage":
					return PROPERTY_CHANNELID_DATAFAILEDMESSAGE;
		        case "ChannelID_Description":
					return PROPERTY_CHANNELID_DESCRIPTION;
		        case "ChannelID_DataAdapterType":
					return PROPERTY_CHANNELID_DATAADAPTERTYPE;
		        case "ChannelID_DataAdapterUrl":
					return PROPERTY_CHANNELID_DATAADAPTERURL;
		        case "ChannelID_ChannelType":
					return PROPERTY_CHANNELID_CHANNELTYPE;
		        case "ChannelID_IVRFeeTimeType":
					return PROPERTY_CHANNELID_IVRFEETIMETYPE;
		        case "ChannelID_IVRTimeFormat":
					return PROPERTY_CHANNELID_IVRTIMEFORMAT;
		        case "ChannelID_IsStateReport":
					return PROPERTY_CHANNELID_ISSTATEREPORT;
		        case "ChannelID_StateReportType":
					return PROPERTY_CHANNELID_STATEREPORTTYPE;
		        case "ChannelID_ReportOkMessage":
					return PROPERTY_CHANNELID_REPORTOKMESSAGE;
		        case "ChannelID_ReportFailedMessage":
					return PROPERTY_CHANNELID_REPORTFAILEDMESSAGE;
		        case "ChannelID_StateReportParamName":
					return PROPERTY_CHANNELID_STATEREPORTPARAMNAME;
		        case "ChannelID_StateReportParamValue":
					return PROPERTY_CHANNELID_STATEREPORTPARAMVALUE;
		        case "ChannelID_RequestTypeParamName":
					return PROPERTY_CHANNELID_REQUESTTYPEPARAMNAME;
		        case "ChannelID_RequestTypeParamStateReportValue":
					return PROPERTY_CHANNELID_REQUESTTYPEPARAMSTATEREPORTVALUE;
		        case "ChannelID_RequestTypeParamDataReportValue":
					return PROPERTY_CHANNELID_REQUESTTYPEPARAMDATAREPORTVALUE;
		        case "ChannelID_HasFilters":
					return PROPERTY_CHANNELID_HASFILTERS;
		        case "ChannelID_IsMonitorRequest":
					return PROPERTY_CHANNELID_ISMONITORREQUEST;
		        case "ChannelID_IsLogRequest":
					return PROPERTY_CHANNELID_ISLOGREQUEST;
		        case "ChannelID_IsParamsConvert":
					return PROPERTY_CHANNELID_ISPARAMSCONVERT;
		        case "ChannelID_IsAutoLinkID":
					return PROPERTY_CHANNELID_ISAUTOLINKID;
		        case "ChannelID_AutoLinkIDFields":
					return PROPERTY_CHANNELID_AUTOLINKIDFIELDS;
		        case "ChannelID_LogRequestType":
					return PROPERTY_CHANNELID_LOGREQUESTTYPE;
		        case "ChannelID_Price":
					return PROPERTY_CHANNELID_PRICE;
		        case "ChannelID_DefaultRate":
					return PROPERTY_CHANNELID_DEFAULTRATE;
		        case "ChannelID_ChannelDetailInfo":
					return PROPERTY_CHANNELID_CHANNELDETAILINFO;
		        case "ChannelID_UpperID":
					return PROPERTY_CHANNELID_UPPERID;
		        case "ChannelID_ChannelStatus":
					return PROPERTY_CHANNELID_CHANNELSTATUS;
		        case "ChannelID_IsDisable":
					return PROPERTY_CHANNELID_ISDISABLE;
		        case "ChannelID_CreateBy":
					return PROPERTY_CHANNELID_CREATEBY;
		        case "ChannelID_CreateAt":
					return PROPERTY_CHANNELID_CREATEAT;
		        case "ChannelID_LastModifyBy":
					return PROPERTY_CHANNELID_LASTMODIFYBY;
		        case "ChannelID_LastModifyAt":
					return PROPERTY_CHANNELID_LASTMODIFYAT;
		        case "ChannelID_LastModifyComment":
					return PROPERTY_CHANNELID_LASTMODIFYCOMMENT;
		        case "CodeID_Id":
					return PROPERTY_CODEID_ID;
		        case "CodeID_Name":
					return PROPERTY_CODEID_NAME;
		        case "CodeID_Description":
					return PROPERTY_CODEID_DESCRIPTION;
		        case "CodeID_Code":
					return PROPERTY_CODEID_CODE;
		        case "CodeID_CodeType":
					return PROPERTY_CODEID_CODETYPE;
		        case "CodeID_ChannelID":
					return PROPERTY_CODEID_CHANNELID;
		        case "CodeID_Mo":
					return PROPERTY_CODEID_MO;
		        case "CodeID_MOType":
					return PROPERTY_CODEID_MOTYPE;
		        case "CodeID_MOLength":
					return PROPERTY_CODEID_MOLENGTH;
		        case "CodeID_OrderIndex":
					return PROPERTY_CODEID_ORDERINDEX;
		        case "CodeID_SPCode":
					return PROPERTY_CODEID_SPCODE;
		        case "CodeID_SPCodeType":
					return PROPERTY_CODEID_SPCODETYPE;
		        case "CodeID_SPCodeLength":
					return PROPERTY_CODEID_SPCODELENGTH;
		        case "CodeID_HasFilters":
					return PROPERTY_CODEID_HASFILTERS;
		        case "CodeID_HasParamsConvert":
					return PROPERTY_CODEID_HASPARAMSCONVERT;
		        case "CodeID_Province":
					return PROPERTY_CODEID_PROVINCE;
		        case "CodeID_DisableCity":
					return PROPERTY_CODEID_DISABLECITY;
		        case "CodeID_IsDiable":
					return PROPERTY_CODEID_ISDIABLE;
		        case "CodeID_DayLimit":
					return PROPERTY_CODEID_DAYLIMIT;
		        case "CodeID_MonthLimit":
					return PROPERTY_CODEID_MONTHLIMIT;
		        case "CodeID_Price":
					return PROPERTY_CODEID_PRICE;
		        case "CodeID_SendText":
					return PROPERTY_CODEID_SENDTEXT;
		        case "CodeID_CreateBy":
					return PROPERTY_CODEID_CREATEBY;
		        case "CodeID_CreateAt":
					return PROPERTY_CODEID_CREATEAT;
		        case "CodeID_LastModifyBy":
					return PROPERTY_CODEID_LASTMODIFYBY;
		        case "CodeID_LastModifyAt":
					return PROPERTY_CODEID_LASTMODIFYAT;
		        case "CodeID_LastModifyComment":
					return PROPERTY_CODEID_LASTMODIFYCOMMENT;
		        case "UperID_Id":
					return PROPERTY_UPERID_ID;
		        case "UperID_Name":
					return PROPERTY_UPERID_NAME;
		        case "UperID_Code":
					return PROPERTY_UPERID_CODE;
		        case "UperID_Description":
					return PROPERTY_UPERID_DESCRIPTION;
		        case "UperID_CreateBy":
					return PROPERTY_UPERID_CREATEBY;
		        case "UperID_CreateAt":
					return PROPERTY_UPERID_CREATEAT;
		        case "UperID_LastModifyBy":
					return PROPERTY_UPERID_LASTMODIFYBY;
		        case "UperID_LastModifyAt":
					return PROPERTY_UPERID_LASTMODIFYAT;
		        case "UperID_LastModifyComment":
					return PROPERTY_UPERID_LASTMODIFYCOMMENT;
              default:
                    return columnName;
            }
        }

        private static void ProcessQueryFilters(List<QueryFilter> filters)
        {
            foreach (QueryFilter queryFilter in filters)
            {
                queryFilter.FilterFieldName = ProcessColumnName(queryFilter.FilterFieldName);
            }
        }
		#endregion
		
      #region 公共常量

		public static readonly string CLASS_FULL_NAME = "SPS.Entity.Tables.SPDayReportEntity";
		public static readonly string PROPERTY_NAME_ID = "Id";
		public static readonly string PROPERTY_NAME_REPORTDATE = "ReportDate";
		public static readonly string PROPERTY_NAME_TOTALCOUNT = "TotalCount";
		public static readonly string PROPERTY_NAME_INTERCEPTCOUNT = "InterceptCount";
		public static readonly string PROPERTY_NAME_DOWNTOTALCOUNT = "DownTotalCount";
		public static readonly string PROPERTY_NAME_DOWNSUCCESS = "DownSuccess";
		public static readonly string PROPERTY_NAME_CLIENTID = "ClientID";
		public static readonly string PROPERTY_NAME_CHANNELID = "ChannelID";
		public static readonly string PROPERTY_NAME_CODEID = "CodeID";
		public static readonly string PROPERTY_NAME_UPERID = "UperID";
		
        #endregion
	
 
		#region clientID字段外键查询字段
        public const string PROPERTY_CLIENTID_ALIAS_NAME = "ClientID_SPDayReportEntity_Alias";
		public const string PROPERTY_CLIENTID_ID = "ClientID_SPDayReportEntity_Alias.Id";
		public const string PROPERTY_CLIENTID_NAME = "ClientID_SPDayReportEntity_Alias.Name";
		public const string PROPERTY_CLIENTID_DESCRIPTION = "ClientID_SPDayReportEntity_Alias.Description";
		public const string PROPERTY_CLIENTID_USERID = "ClientID_SPDayReportEntity_Alias.UserID";
		public const string PROPERTY_CLIENTID_ISDEFAULTCLIENT = "ClientID_SPDayReportEntity_Alias.IsDefaultClient";
		public const string PROPERTY_CLIENTID_SYNCDATA = "ClientID_SPDayReportEntity_Alias.SyncData";
		public const string PROPERTY_CLIENTID_SYCNRETRYTIMES = "ClientID_SPDayReportEntity_Alias.SycnRetryTimes";
		public const string PROPERTY_CLIENTID_SYNCTYPE = "ClientID_SPDayReportEntity_Alias.SyncType";
		public const string PROPERTY_CLIENTID_SYCNNOTINTERCEPTCOUNT = "ClientID_SPDayReportEntity_Alias.SycnNotInterceptCount";
		public const string PROPERTY_CLIENTID_SYCNDATAURL = "ClientID_SPDayReportEntity_Alias.SycnDataUrl";
		public const string PROPERTY_CLIENTID_SYCNOKMESSAGE = "ClientID_SPDayReportEntity_Alias.SycnOkMessage";
		public const string PROPERTY_CLIENTID_SYCNFAILEDMESSAGE = "ClientID_SPDayReportEntity_Alias.SycnFailedMessage";
		public const string PROPERTY_CLIENTID_ALIAS = "ClientID_SPDayReportEntity_Alias.Alias";
		public const string PROPERTY_CLIENTID_INTERCEPTRATE = "ClientID_SPDayReportEntity_Alias.InterceptRate";
		public const string PROPERTY_CLIENTID_DEFAULTPRICE = "ClientID_SPDayReportEntity_Alias.DefaultPrice";
		public const string PROPERTY_CLIENTID_DEFAULTSHOWRECORDDAYS = "ClientID_SPDayReportEntity_Alias.DefaultShowRecordDays";
		public const string PROPERTY_CLIENTID_CREATEBY = "ClientID_SPDayReportEntity_Alias.CreateBy";
		public const string PROPERTY_CLIENTID_CREATEAT = "ClientID_SPDayReportEntity_Alias.CreateAt";
		public const string PROPERTY_CLIENTID_LASTMODIFYBY = "ClientID_SPDayReportEntity_Alias.LastModifyBy";
		public const string PROPERTY_CLIENTID_LASTMODIFYAT = "ClientID_SPDayReportEntity_Alias.LastModifyAt";
		public const string PROPERTY_CLIENTID_LASTMODIFYCOMMENT = "ClientID_SPDayReportEntity_Alias.LastModifyComment";
		#endregion
		#region channelID字段外键查询字段
        public const string PROPERTY_CHANNELID_ALIAS_NAME = "ChannelID_SPDayReportEntity_Alias";
		public const string PROPERTY_CHANNELID_ID = "ChannelID_SPDayReportEntity_Alias.Id";
		public const string PROPERTY_CHANNELID_NAME = "ChannelID_SPDayReportEntity_Alias.Name";
		public const string PROPERTY_CHANNELID_CODE = "ChannelID_SPDayReportEntity_Alias.Code";
		public const string PROPERTY_CHANNELID_DATAOKMESSAGE = "ChannelID_SPDayReportEntity_Alias.DataOkMessage";
		public const string PROPERTY_CHANNELID_DATAFAILEDMESSAGE = "ChannelID_SPDayReportEntity_Alias.DataFailedMessage";
		public const string PROPERTY_CHANNELID_DESCRIPTION = "ChannelID_SPDayReportEntity_Alias.Description";
		public const string PROPERTY_CHANNELID_DATAADAPTERTYPE = "ChannelID_SPDayReportEntity_Alias.DataAdapterType";
		public const string PROPERTY_CHANNELID_DATAADAPTERURL = "ChannelID_SPDayReportEntity_Alias.DataAdapterUrl";
		public const string PROPERTY_CHANNELID_CHANNELTYPE = "ChannelID_SPDayReportEntity_Alias.ChannelType";
		public const string PROPERTY_CHANNELID_IVRFEETIMETYPE = "ChannelID_SPDayReportEntity_Alias.IVRFeeTimeType";
		public const string PROPERTY_CHANNELID_IVRTIMEFORMAT = "ChannelID_SPDayReportEntity_Alias.IVRTimeFormat";
		public const string PROPERTY_CHANNELID_ISSTATEREPORT = "ChannelID_SPDayReportEntity_Alias.IsStateReport";
		public const string PROPERTY_CHANNELID_STATEREPORTTYPE = "ChannelID_SPDayReportEntity_Alias.StateReportType";
		public const string PROPERTY_CHANNELID_REPORTOKMESSAGE = "ChannelID_SPDayReportEntity_Alias.ReportOkMessage";
		public const string PROPERTY_CHANNELID_REPORTFAILEDMESSAGE = "ChannelID_SPDayReportEntity_Alias.ReportFailedMessage";
		public const string PROPERTY_CHANNELID_STATEREPORTPARAMNAME = "ChannelID_SPDayReportEntity_Alias.StateReportParamName";
		public const string PROPERTY_CHANNELID_STATEREPORTPARAMVALUE = "ChannelID_SPDayReportEntity_Alias.StateReportParamValue";
		public const string PROPERTY_CHANNELID_REQUESTTYPEPARAMNAME = "ChannelID_SPDayReportEntity_Alias.RequestTypeParamName";
		public const string PROPERTY_CHANNELID_REQUESTTYPEPARAMSTATEREPORTVALUE = "ChannelID_SPDayReportEntity_Alias.RequestTypeParamStateReportValue";
		public const string PROPERTY_CHANNELID_REQUESTTYPEPARAMDATAREPORTVALUE = "ChannelID_SPDayReportEntity_Alias.RequestTypeParamDataReportValue";
		public const string PROPERTY_CHANNELID_HASFILTERS = "ChannelID_SPDayReportEntity_Alias.HasFilters";
		public const string PROPERTY_CHANNELID_ISMONITORREQUEST = "ChannelID_SPDayReportEntity_Alias.IsMonitorRequest";
		public const string PROPERTY_CHANNELID_ISLOGREQUEST = "ChannelID_SPDayReportEntity_Alias.IsLogRequest";
		public const string PROPERTY_CHANNELID_ISPARAMSCONVERT = "ChannelID_SPDayReportEntity_Alias.IsParamsConvert";
		public const string PROPERTY_CHANNELID_ISAUTOLINKID = "ChannelID_SPDayReportEntity_Alias.IsAutoLinkID";
		public const string PROPERTY_CHANNELID_AUTOLINKIDFIELDS = "ChannelID_SPDayReportEntity_Alias.AutoLinkIDFields";
		public const string PROPERTY_CHANNELID_LOGREQUESTTYPE = "ChannelID_SPDayReportEntity_Alias.LogRequestType";
		public const string PROPERTY_CHANNELID_PRICE = "ChannelID_SPDayReportEntity_Alias.Price";
		public const string PROPERTY_CHANNELID_DEFAULTRATE = "ChannelID_SPDayReportEntity_Alias.DefaultRate";
		public const string PROPERTY_CHANNELID_CHANNELDETAILINFO = "ChannelID_SPDayReportEntity_Alias.ChannelDetailInfo";
		public const string PROPERTY_CHANNELID_UPPERID = "ChannelID_SPDayReportEntity_Alias.UpperID";
		public const string PROPERTY_CHANNELID_CHANNELSTATUS = "ChannelID_SPDayReportEntity_Alias.ChannelStatus";
		public const string PROPERTY_CHANNELID_ISDISABLE = "ChannelID_SPDayReportEntity_Alias.IsDisable";
		public const string PROPERTY_CHANNELID_CREATEBY = "ChannelID_SPDayReportEntity_Alias.CreateBy";
		public const string PROPERTY_CHANNELID_CREATEAT = "ChannelID_SPDayReportEntity_Alias.CreateAt";
		public const string PROPERTY_CHANNELID_LASTMODIFYBY = "ChannelID_SPDayReportEntity_Alias.LastModifyBy";
		public const string PROPERTY_CHANNELID_LASTMODIFYAT = "ChannelID_SPDayReportEntity_Alias.LastModifyAt";
		public const string PROPERTY_CHANNELID_LASTMODIFYCOMMENT = "ChannelID_SPDayReportEntity_Alias.LastModifyComment";
		#endregion
		#region codeID字段外键查询字段
        public const string PROPERTY_CODEID_ALIAS_NAME = "CodeID_SPDayReportEntity_Alias";
		public const string PROPERTY_CODEID_ID = "CodeID_SPDayReportEntity_Alias.Id";
		public const string PROPERTY_CODEID_NAME = "CodeID_SPDayReportEntity_Alias.Name";
		public const string PROPERTY_CODEID_DESCRIPTION = "CodeID_SPDayReportEntity_Alias.Description";
		public const string PROPERTY_CODEID_CODE = "CodeID_SPDayReportEntity_Alias.Code";
		public const string PROPERTY_CODEID_CODETYPE = "CodeID_SPDayReportEntity_Alias.CodeType";
		public const string PROPERTY_CODEID_CHANNELID = "CodeID_SPDayReportEntity_Alias.ChannelID";
		public const string PROPERTY_CODEID_MO = "CodeID_SPDayReportEntity_Alias.Mo";
		public const string PROPERTY_CODEID_MOTYPE = "CodeID_SPDayReportEntity_Alias.MOType";
		public const string PROPERTY_CODEID_MOLENGTH = "CodeID_SPDayReportEntity_Alias.MOLength";
		public const string PROPERTY_CODEID_ORDERINDEX = "CodeID_SPDayReportEntity_Alias.OrderIndex";
		public const string PROPERTY_CODEID_SPCODE = "CodeID_SPDayReportEntity_Alias.SPCode";
		public const string PROPERTY_CODEID_SPCODETYPE = "CodeID_SPDayReportEntity_Alias.SPCodeType";
		public const string PROPERTY_CODEID_SPCODELENGTH = "CodeID_SPDayReportEntity_Alias.SPCodeLength";
		public const string PROPERTY_CODEID_HASFILTERS = "CodeID_SPDayReportEntity_Alias.HasFilters";
		public const string PROPERTY_CODEID_HASPARAMSCONVERT = "CodeID_SPDayReportEntity_Alias.HasParamsConvert";
		public const string PROPERTY_CODEID_PROVINCE = "CodeID_SPDayReportEntity_Alias.Province";
		public const string PROPERTY_CODEID_DISABLECITY = "CodeID_SPDayReportEntity_Alias.DisableCity";
		public const string PROPERTY_CODEID_ISDIABLE = "CodeID_SPDayReportEntity_Alias.IsDiable";
		public const string PROPERTY_CODEID_DAYLIMIT = "CodeID_SPDayReportEntity_Alias.DayLimit";
		public const string PROPERTY_CODEID_MONTHLIMIT = "CodeID_SPDayReportEntity_Alias.MonthLimit";
		public const string PROPERTY_CODEID_PRICE = "CodeID_SPDayReportEntity_Alias.Price";
		public const string PROPERTY_CODEID_SENDTEXT = "CodeID_SPDayReportEntity_Alias.SendText";
		public const string PROPERTY_CODEID_CREATEBY = "CodeID_SPDayReportEntity_Alias.CreateBy";
		public const string PROPERTY_CODEID_CREATEAT = "CodeID_SPDayReportEntity_Alias.CreateAt";
		public const string PROPERTY_CODEID_LASTMODIFYBY = "CodeID_SPDayReportEntity_Alias.LastModifyBy";
		public const string PROPERTY_CODEID_LASTMODIFYAT = "CodeID_SPDayReportEntity_Alias.LastModifyAt";
		public const string PROPERTY_CODEID_LASTMODIFYCOMMENT = "CodeID_SPDayReportEntity_Alias.LastModifyComment";
		#endregion
		#region uperID字段外键查询字段
        public const string PROPERTY_UPERID_ALIAS_NAME = "UperID_SPDayReportEntity_Alias";
		public const string PROPERTY_UPERID_ID = "UperID_SPDayReportEntity_Alias.Id";
		public const string PROPERTY_UPERID_NAME = "UperID_SPDayReportEntity_Alias.Name";
		public const string PROPERTY_UPERID_CODE = "UperID_SPDayReportEntity_Alias.Code";
		public const string PROPERTY_UPERID_DESCRIPTION = "UperID_SPDayReportEntity_Alias.Description";
		public const string PROPERTY_UPERID_CREATEBY = "UperID_SPDayReportEntity_Alias.CreateBy";
		public const string PROPERTY_UPERID_CREATEAT = "UperID_SPDayReportEntity_Alias.CreateAt";
		public const string PROPERTY_UPERID_LASTMODIFYBY = "UperID_SPDayReportEntity_Alias.LastModifyBy";
		public const string PROPERTY_UPERID_LASTMODIFYAT = "UperID_SPDayReportEntity_Alias.LastModifyAt";
		public const string PROPERTY_UPERID_LASTMODIFYCOMMENT = "UperID_SPDayReportEntity_Alias.LastModifyComment";
		#endregion
      	
	
	
		 
		
		
		
		


		#region Public Property
		/// <summary>
		/// 
		/// </summary>		
		public int Id
		{
			get
			{
				return entity.Id;
			}
			set
			{
				entity.Id = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public DateTime ReportDate
		{
			get
			{
				return entity.ReportDate;
			}
			set
			{
				entity.ReportDate = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public int TotalCount
		{
			get
			{
				return entity.TotalCount;
			}
			set
			{
				entity.TotalCount = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public int InterceptCount
		{
			get
			{
				return entity.InterceptCount;
			}
			set
			{
				entity.InterceptCount = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public int DownTotalCount
		{
			get
			{
				return entity.DownTotalCount;
			}
			set
			{
				entity.DownTotalCount = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public int DownSuccess
		{
			get
			{
				return entity.DownSuccess;
			}
			set
			{
				entity.DownSuccess = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public SPSClientWrapper ClientID
		{
			get
			{
				return SPSClientWrapper.ConvertEntityToWrapper(entity.ClientID) ;
			}
			set
			{
				entity.ClientID = ((value == null) ? null : value.Entity);
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public SPChannelWrapper ChannelID
		{
			get
			{
				return SPChannelWrapper.ConvertEntityToWrapper(entity.ChannelID) ;
			}
			set
			{
				entity.ChannelID = ((value == null) ? null : value.Entity);
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public SPCodeWrapper CodeID
		{
			get
			{
				return SPCodeWrapper.ConvertEntityToWrapper(entity.CodeID) ;
			}
			set
			{
				entity.CodeID = ((value == null) ? null : value.Entity);
			}
		}
		/// <summary>
		/// 
		/// </summary>		
		public SPUpperWrapper UperID
		{
			get
			{
				return SPUpperWrapper.ConvertEntityToWrapper(entity.UperID) ;
			}
			set
			{
				entity.UperID = ((value == null) ? null : value.Entity);
			}
		}
		#endregion 


		#region Query Property
		
		
		#region clientID字段外键查询字段
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTID_ID)]
        public int? ClientID_Id
        {
            get
            {
                if (this. ClientID == null)
                    return null;
                return  ClientID.Id;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTID_NAME)]
        public string ClientID_Name
        {
            get
            {
                if (this. ClientID == null)
                    return null;
                return  ClientID.Name;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTID_DESCRIPTION)]
        public string ClientID_Description
        {
            get
            {
                if (this. ClientID == null)
                    return null;
                return  ClientID.Description;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTID_USERID)]
        public int? ClientID_UserID
        {
            get
            {
                if (this. ClientID == null)
                    return null;
                return  ClientID.UserID;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTID_ISDEFAULTCLIENT)]
        public bool? ClientID_IsDefaultClient
        {
            get
            {
                if (this. ClientID == null)
                    return null;
                return  ClientID.IsDefaultClient;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTID_SYNCDATA)]
        public bool? ClientID_SyncData
        {
            get
            {
                if (this. ClientID == null)
                    return null;
                return  ClientID.SyncData;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTID_SYCNRETRYTIMES)]
        public int? ClientID_SycnRetryTimes
        {
            get
            {
                if (this. ClientID == null)
                    return null;
                return  ClientID.SycnRetryTimes;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTID_SYNCTYPE)]
        public string ClientID_SyncType
        {
            get
            {
                if (this. ClientID == null)
                    return null;
                return  ClientID.SyncType;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTID_SYCNNOTINTERCEPTCOUNT)]
        public int? ClientID_SycnNotInterceptCount
        {
            get
            {
                if (this. ClientID == null)
                    return null;
                return  ClientID.SycnNotInterceptCount;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTID_SYCNDATAURL)]
        public string ClientID_SycnDataUrl
        {
            get
            {
                if (this. ClientID == null)
                    return null;
                return  ClientID.SycnDataUrl;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTID_SYCNOKMESSAGE)]
        public string ClientID_SycnOkMessage
        {
            get
            {
                if (this. ClientID == null)
                    return null;
                return  ClientID.SycnOkMessage;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTID_SYCNFAILEDMESSAGE)]
        public string ClientID_SycnFailedMessage
        {
            get
            {
                if (this. ClientID == null)
                    return null;
                return  ClientID.SycnFailedMessage;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTID_ALIAS)]
        public string ClientID_Alias
        {
            get
            {
                if (this. ClientID == null)
                    return null;
                return  ClientID.Alias;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTID_INTERCEPTRATE)]
        public decimal? ClientID_InterceptRate
        {
            get
            {
                if (this. ClientID == null)
                    return null;
                return  ClientID.InterceptRate;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTID_DEFAULTPRICE)]
        public decimal? ClientID_DefaultPrice
        {
            get
            {
                if (this. ClientID == null)
                    return null;
                return  ClientID.DefaultPrice;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTID_DEFAULTSHOWRECORDDAYS)]
        public int? ClientID_DefaultShowRecordDays
        {
            get
            {
                if (this. ClientID == null)
                    return null;
                return  ClientID.DefaultShowRecordDays;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTID_CREATEBY)]
        public int? ClientID_CreateBy
        {
            get
            {
                if (this. ClientID == null)
                    return null;
                return  ClientID.CreateBy;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTID_CREATEAT)]
        public DateTime? ClientID_CreateAt
        {
            get
            {
                if (this. ClientID == null)
                    return null;
                return  ClientID.CreateAt;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTID_LASTMODIFYBY)]
        public int? ClientID_LastModifyBy
        {
            get
            {
                if (this. ClientID == null)
                    return null;
                return  ClientID.LastModifyBy;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTID_LASTMODIFYAT)]
        public DateTime? ClientID_LastModifyAt
        {
            get
            {
                if (this. ClientID == null)
                    return null;
                return  ClientID.LastModifyAt;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CLIENTID_LASTMODIFYCOMMENT)]
        public string ClientID_LastModifyComment
        {
            get
            {
                if (this. ClientID == null)
                    return null;
                return  ClientID.LastModifyComment;
            }
        }
		#endregion
		#region channelID字段外键查询字段
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_ID)]
        public int? ChannelID_Id
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.Id;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_NAME)]
        public string ChannelID_Name
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.Name;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_CODE)]
        public string ChannelID_Code
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.Code;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_DATAOKMESSAGE)]
        public string ChannelID_DataOkMessage
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.DataOkMessage;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_DATAFAILEDMESSAGE)]
        public string ChannelID_DataFailedMessage
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.DataFailedMessage;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_DESCRIPTION)]
        public string ChannelID_Description
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.Description;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_DATAADAPTERTYPE)]
        public string ChannelID_DataAdapterType
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.DataAdapterType;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_DATAADAPTERURL)]
        public string ChannelID_DataAdapterUrl
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.DataAdapterUrl;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_CHANNELTYPE)]
        public string ChannelID_ChannelType
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.ChannelType;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_IVRFEETIMETYPE)]
        public string ChannelID_IVRFeeTimeType
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.IVRFeeTimeType;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_IVRTIMEFORMAT)]
        public string ChannelID_IVRTimeFormat
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.IVRTimeFormat;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_ISSTATEREPORT)]
        public bool? ChannelID_IsStateReport
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.IsStateReport;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_STATEREPORTTYPE)]
        public string ChannelID_StateReportType
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.StateReportType;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_REPORTOKMESSAGE)]
        public string ChannelID_ReportOkMessage
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.ReportOkMessage;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_REPORTFAILEDMESSAGE)]
        public string ChannelID_ReportFailedMessage
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.ReportFailedMessage;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_STATEREPORTPARAMNAME)]
        public string ChannelID_StateReportParamName
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.StateReportParamName;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_STATEREPORTPARAMVALUE)]
        public string ChannelID_StateReportParamValue
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.StateReportParamValue;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_REQUESTTYPEPARAMNAME)]
        public string ChannelID_RequestTypeParamName
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.RequestTypeParamName;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_REQUESTTYPEPARAMSTATEREPORTVALUE)]
        public string ChannelID_RequestTypeParamStateReportValue
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.RequestTypeParamStateReportValue;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_REQUESTTYPEPARAMDATAREPORTVALUE)]
        public string ChannelID_RequestTypeParamDataReportValue
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.RequestTypeParamDataReportValue;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_HASFILTERS)]
        public bool? ChannelID_HasFilters
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.HasFilters;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_ISMONITORREQUEST)]
        public bool? ChannelID_IsMonitorRequest
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.IsMonitorRequest;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_ISLOGREQUEST)]
        public bool? ChannelID_IsLogRequest
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.IsLogRequest;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_ISPARAMSCONVERT)]
        public bool? ChannelID_IsParamsConvert
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.IsParamsConvert;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_ISAUTOLINKID)]
        public bool? ChannelID_IsAutoLinkID
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.IsAutoLinkID;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_AUTOLINKIDFIELDS)]
        public string ChannelID_AutoLinkIDFields
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.AutoLinkIDFields;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_LOGREQUESTTYPE)]
        public string ChannelID_LogRequestType
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.LogRequestType;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_PRICE)]
        public decimal? ChannelID_Price
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.Price;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_DEFAULTRATE)]
        public decimal? ChannelID_DefaultRate
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.DefaultRate;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_CHANNELDETAILINFO)]
        public string ChannelID_ChannelDetailInfo
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.ChannelDetailInfo;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_UPPERID)]
        public SPUpperWrapper ChannelID_UpperID
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.UpperID;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_CHANNELSTATUS)]
        public string ChannelID_ChannelStatus
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.ChannelStatus;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_ISDISABLE)]
        public bool? ChannelID_IsDisable
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.IsDisable;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_CREATEBY)]
        public int? ChannelID_CreateBy
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.CreateBy;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_CREATEAT)]
        public DateTime? ChannelID_CreateAt
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.CreateAt;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_LASTMODIFYBY)]
        public int? ChannelID_LastModifyBy
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.LastModifyBy;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_LASTMODIFYAT)]
        public DateTime? ChannelID_LastModifyAt
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.LastModifyAt;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CHANNELID_LASTMODIFYCOMMENT)]
        public string ChannelID_LastModifyComment
        {
            get
            {
                if (this. ChannelID == null)
                    return null;
                return  ChannelID.LastModifyComment;
            }
        }
		#endregion
		#region codeID字段外键查询字段
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_ID)]
        public int? CodeID_Id
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.Id;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_NAME)]
        public string CodeID_Name
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.Name;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_DESCRIPTION)]
        public string CodeID_Description
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.Description;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_CODE)]
        public string CodeID_Code
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.Code;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_CODETYPE)]
        public string CodeID_CodeType
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.CodeType;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_CHANNELID)]
        public SPChannelWrapper CodeID_ChannelID
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.ChannelID;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_MO)]
        public string CodeID_Mo
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.Mo;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_MOTYPE)]
        public string CodeID_MOType
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.MOType;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_MOLENGTH)]
        public int? CodeID_MOLength
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.MOLength;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_ORDERINDEX)]
        public int? CodeID_OrderIndex
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.OrderIndex;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_SPCODE)]
        public string CodeID_SPCode
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.SPCode;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_SPCODETYPE)]
        public string CodeID_SPCodeType
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.SPCodeType;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_SPCODELENGTH)]
        public int? CodeID_SPCodeLength
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.SPCodeLength;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_HASFILTERS)]
        public bool? CodeID_HasFilters
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.HasFilters;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_HASPARAMSCONVERT)]
        public bool? CodeID_HasParamsConvert
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.HasParamsConvert;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_PROVINCE)]
        public string CodeID_Province
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.Province;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_DISABLECITY)]
        public string CodeID_DisableCity
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.DisableCity;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_ISDIABLE)]
        public bool? CodeID_IsDiable
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.IsDiable;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_DAYLIMIT)]
        public string CodeID_DayLimit
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.DayLimit;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_MONTHLIMIT)]
        public string CodeID_MonthLimit
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.MonthLimit;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_PRICE)]
        public decimal? CodeID_Price
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.Price;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_SENDTEXT)]
        public string CodeID_SendText
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.SendText;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_CREATEBY)]
        public int? CodeID_CreateBy
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.CreateBy;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_CREATEAT)]
        public DateTime? CodeID_CreateAt
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.CreateAt;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_LASTMODIFYBY)]
        public int? CodeID_LastModifyBy
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.LastModifyBy;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_LASTMODIFYAT)]
        public DateTime? CodeID_LastModifyAt
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.LastModifyAt;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_CODEID_LASTMODIFYCOMMENT)]
        public string CodeID_LastModifyComment
        {
            get
            {
                if (this. CodeID == null)
                    return null;
                return  CodeID.LastModifyComment;
            }
        }
		#endregion
		#region uperID字段外键查询字段
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_UPERID_ID)]
        public int? UperID_Id
        {
            get
            {
                if (this. UperID == null)
                    return null;
                return  UperID.Id;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_UPERID_NAME)]
        public string UperID_Name
        {
            get
            {
                if (this. UperID == null)
                    return null;
                return  UperID.Name;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_UPERID_CODE)]
        public string UperID_Code
        {
            get
            {
                if (this. UperID == null)
                    return null;
                return  UperID.Code;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_UPERID_DESCRIPTION)]
        public string UperID_Description
        {
            get
            {
                if (this. UperID == null)
                    return null;
                return  UperID.Description;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_UPERID_CREATEBY)]
        public int? UperID_CreateBy
        {
            get
            {
                if (this. UperID == null)
                    return null;
                return  UperID.CreateBy;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_UPERID_CREATEAT)]
        public DateTime? UperID_CreateAt
        {
            get
            {
                if (this. UperID == null)
                    return null;
                return  UperID.CreateAt;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_UPERID_LASTMODIFYBY)]
        public int? UperID_LastModifyBy
        {
            get
            {
                if (this. UperID == null)
                    return null;
                return  UperID.LastModifyBy;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_UPERID_LASTMODIFYAT)]
        public DateTime? UperID_LastModifyAt
        {
            get
            {
                if (this. UperID == null)
                    return null;
                return  UperID.LastModifyAt;
            }
        }
		[NhibernateQueryPropertyAttribute(MappingColumnName = PROPERTY_UPERID_LASTMODIFYCOMMENT)]
        public string UperID_LastModifyComment
        {
            get
            {
                if (this. UperID == null)
                    return null;
                return  UperID.LastModifyComment;
            }
        }
		#endregion
      	
   
		#endregion


        #region "FKQuery"
		
        public static List<SPDayReportWrapper> FindAllByOrderByAndFilterAndClientID(string orderByColumnName, bool isDesc,   SPSClientWrapper clientID,  PageQueryParams pageQueryParams)
        {
            return ConvertToWrapperList(businessProxy.FindAllByOrderByAndFilterAndClientID(orderByColumnName, isDesc,   clientID.Entity, pageQueryParams));
        }

        public static List<SPDayReportWrapper> FindAllByClientID(SPSClientWrapper clientID)
        {
            return ConvertToWrapperList(businessProxy.FindAllByClientID(clientID.Entity));
        }
		
		
        public static List<SPDayReportWrapper> FindAllByOrderByAndFilterAndChannelID(string orderByColumnName, bool isDesc,   SPChannelWrapper channelID,  PageQueryParams pageQueryParams)
        {
            return ConvertToWrapperList(businessProxy.FindAllByOrderByAndFilterAndChannelID(orderByColumnName, isDesc,   channelID.Entity, pageQueryParams));
        }

        public static List<SPDayReportWrapper> FindAllByChannelID(SPChannelWrapper channelID)
        {
            return ConvertToWrapperList(businessProxy.FindAllByChannelID(channelID.Entity));
        }
		
		
        public static List<SPDayReportWrapper> FindAllByOrderByAndFilterAndCodeID(string orderByColumnName, bool isDesc,   SPCodeWrapper codeID,  PageQueryParams pageQueryParams)
        {
            return ConvertToWrapperList(businessProxy.FindAllByOrderByAndFilterAndCodeID(orderByColumnName, isDesc,   codeID.Entity, pageQueryParams));
        }

        public static List<SPDayReportWrapper> FindAllByCodeID(SPCodeWrapper codeID)
        {
            return ConvertToWrapperList(businessProxy.FindAllByCodeID(codeID.Entity));
        }
		
		
        public static List<SPDayReportWrapper> FindAllByOrderByAndFilterAndUperID(string orderByColumnName, bool isDesc,   SPUpperWrapper uperID,  PageQueryParams pageQueryParams)
        {
            return ConvertToWrapperList(businessProxy.FindAllByOrderByAndFilterAndUperID(orderByColumnName, isDesc,   uperID.Entity, pageQueryParams));
        }

        public static List<SPDayReportWrapper> FindAllByUperID(SPUpperWrapper uperID)
        {
            return ConvertToWrapperList(businessProxy.FindAllByUperID(uperID.Entity));
        }
		



        #endregion








        #region Static Common Data Operation
		
		internal static List<SPDayReportWrapper> ConvertToWrapperList(List<SPDayReportEntity> entitylist)
        {
            List<SPDayReportWrapper> list = new List<SPDayReportWrapper>();
            foreach (SPDayReportEntity lentity in entitylist)
            {
                list.Add(ConvertEntityToWrapper(lentity));
            }
            return list;
        }

		internal static List<SPDayReportWrapper> ConvertToWrapperList(IList<SPDayReportEntity> entitylist)
        {
            List<SPDayReportWrapper> list = new List<SPDayReportWrapper>();
            foreach (SPDayReportEntity lentity in entitylist)
            {
                list.Add(ConvertEntityToWrapper(lentity));
            }
            return list;
        }
		
		internal static List<SPDayReportEntity> ConvertToEntityList(List<SPDayReportWrapper> wrapperlist)
        {
            List<SPDayReportEntity> list = new List<SPDayReportEntity>();
            foreach (SPDayReportWrapper wrapper in wrapperlist)
            {
                list.Add(wrapper.entity);
            }
            return list;
        }

        internal static SPDayReportWrapper ConvertEntityToWrapper(SPDayReportEntity entity)
        {
            if (entity == null)
                return null;
				
            if (entity.Id == 0)
                return null;

            return new SPDayReportWrapper(entity);
        }
		
		#endregion

    }//End Class
}// End Namespace

