// Generated by MyGeneration Version # (1.3.0.9)
using System;
using System.Collections.Generic;
using System.Text;
using Legendigital.Framework.Common.BaseFramework.Bussiness.SystemConst;
using Legendigital.Framework.Common.BaseFramework.Bussiness.Wrappers;
using Legendigital.Framework.Common.Bussiness.Interfaces;
using Legendigital.Framework.Common.Data.Interfaces;
using Legendigital.Framework.Common.Bussiness.NHibernate;
using SPS.Data.Tables;
using SPS.Entity.Tables;


namespace SPS.Bussiness.ServiceProxys.Tables
{
	public interface ISPSClientServiceProxy : IBaseSpringNHibernateEntityServiceProxy<SPSClientEntity> ,ISPSClientServiceProxyDesigner
    {
	    void QuickAdd(SPSClientEntity clientEntity, string loginId, string password);
    }

    internal partial class SPSClientServiceProxy : ISPSClientServiceProxy
    {

        public static SPSClientEntity NewDefaultSPClient(int defaultSPClientuserID)
        {
            SPSClientEntity spClientEntity = new SPSClientEntity();

            spClientEntity.Name = "默认下家";
            spClientEntity.Description = "默认下家";
            spClientEntity.UserID = defaultSPClientuserID;
            spClientEntity.IsDefaultClient = true;
            spClientEntity.Alias = "";
            spClientEntity.DefaultPrice = 0;
            spClientEntity.DefaultShowRecordDays = 100;
            spClientEntity.InterceptRate = 0;
            spClientEntity.SyncData = false;
 
            spClientEntity.SycnRetryTimes = 0;

            return spClientEntity;
        }

        public void QuickAdd(SPSClientEntity clientEntity, string loginId, string password)
        {
            int spClientuserID = SystemUserWrapper.QuickAddUser(loginId, RoleCodeList.ROLE_CODE_SPDOWNUSER, password, loginId + SystemConfigConst.Config_SysDefaultUsermail);

            if (spClientuserID < 0)
                throw new Exception("Create sPClient failed");
            clientEntity.UserID = spClientuserID;

            SelfDataObj.Save(clientEntity);

        }
    }
}
