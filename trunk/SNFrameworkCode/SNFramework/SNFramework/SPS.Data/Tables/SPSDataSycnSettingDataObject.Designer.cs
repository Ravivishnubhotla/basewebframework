// --------------------------------------------------------------------------------------------------------------------
// <copyright company="foreveross" file="SPSDataSycnSettingDataObject.Designer.cs">
//   Copyright (c) Foreveross Enterprises. All rights reserved.
// </copyright>
// <summary>
//   Generated by MyGeneration Version # (1.3.0.9)
// </summary>
// --------------------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Text;
using NHibernate.Criterion;
using Legendigital.Framework.Common.Data.NHibernate.DynamicQuery;
using Legendigital.Framework.Common.Data.NHibernate.DynamicQuery.Propertys;
using SPS.Entity.Tables;
using Legendigital.Framework.Common.Data.NHibernate;


namespace SPS.Data.Tables
{
    public partial class SPSDataSycnSettingDataObject : BaseNHibernateDataObject<SPSDataSycnSettingEntity,int>
    {
		#region Expression Query Property (标准查询字段)
		public static readonly IntProperty PROPERTY_ID = new IntProperty(Property.ForName(SPSDataSycnSettingEntity.PROPERTY_NAME_ID));		
		public static readonly IntProperty PROPERTY_SYCNRETRYTIMES = new IntProperty(Property.ForName(SPSDataSycnSettingEntity.PROPERTY_NAME_SYCNRETRYTIMES));		
		public static readonly StringProperty PROPERTY_SYNCTYPE = new StringProperty(Property.ForName(SPSDataSycnSettingEntity.PROPERTY_NAME_SYNCTYPE));		
		public static readonly BoolProperty PROPERTY_SYCNMO = new BoolProperty(Property.ForName(SPSDataSycnSettingEntity.PROPERTY_NAME_SYCNMO));		
		public static readonly StringProperty PROPERTY_SYCNMOURL = new StringProperty(Property.ForName(SPSDataSycnSettingEntity.PROPERTY_NAME_SYCNMOURL));		
		public static readonly StringProperty PROPERTY_SYCNMOOKMESSAGE = new StringProperty(Property.ForName(SPSDataSycnSettingEntity.PROPERTY_NAME_SYCNMOOKMESSAGE));		
		public static readonly StringProperty PROPERTY_SYCNMOFAILEDMESSAGE = new StringProperty(Property.ForName(SPSDataSycnSettingEntity.PROPERTY_NAME_SYCNMOFAILEDMESSAGE));		
		public static readonly BoolProperty PROPERTY_SYCNMR = new BoolProperty(Property.ForName(SPSDataSycnSettingEntity.PROPERTY_NAME_SYCNMR));		
		public static readonly StringProperty PROPERTY_SYCNMRURL = new StringProperty(Property.ForName(SPSDataSycnSettingEntity.PROPERTY_NAME_SYCNMRURL));		
		public static readonly StringProperty PROPERTY_SYCNMROKMESSAGE = new StringProperty(Property.ForName(SPSDataSycnSettingEntity.PROPERTY_NAME_SYCNMROKMESSAGE));		
		public static readonly StringProperty PROPERTY_SYCNMRFAILEDMESSAGE = new StringProperty(Property.ForName(SPSDataSycnSettingEntity.PROPERTY_NAME_SYCNMRFAILEDMESSAGE));		
		public static readonly BoolProperty PROPERTY_SYCNSATE = new BoolProperty(Property.ForName(SPSDataSycnSettingEntity.PROPERTY_NAME_SYCNSATE));		
		public static readonly StringProperty PROPERTY_SYCNSATEURL = new StringProperty(Property.ForName(SPSDataSycnSettingEntity.PROPERTY_NAME_SYCNSATEURL));		
		public static readonly StringProperty PROPERTY_SYCNSATEOKMESSAGE = new StringProperty(Property.ForName(SPSDataSycnSettingEntity.PROPERTY_NAME_SYCNSATEOKMESSAGE));		
		public static readonly StringProperty PROPERTY_SYCNSATEFAILEDMESSAGE = new StringProperty(Property.ForName(SPSDataSycnSettingEntity.PROPERTY_NAME_SYCNSATEFAILEDMESSAGE));		
      
		#region 子类集合字段查询字段
	
		#endregion

		#endregion

		
		public override string[] PkPropertyName
        {
            get { return new string[] { "Id" }; }
        }
		
		public override Type GetFieldTypeByFieldName(string fieldName)
        {
			switch (fieldName)
            {
                case "Id":
                    return typeof (int);
                case "SycnRetryTimes":
                    return typeof (int);
                case "SyncType":
                    return typeof (string);
                case "SycnMO":
                    return typeof (bool);
                case "SycnMOUrl":
                    return typeof (string);
                case "SycnMOOkMessage":
                    return typeof (string);
                case "SycnMOFailedMessage":
                    return typeof (string);
                case "SycnMR":
                    return typeof (bool);
                case "SycnMRUrl":
                    return typeof (string);
                case "SycnMROkMessage":
                    return typeof (string);
                case "SycnMRFailedMessage":
                    return typeof (string);
                case "SycnSate":
                    return typeof (bool);
                case "SycnSateUrl":
                    return typeof (string);
                case "SycnSateOkMessage":
                    return typeof (string);
                case "SycnSateFailedMessage":
                    return typeof (string);
          }
			return typeof(string);
        }
		
        public override void InClude_Parent_Table(string parent_alias, NHibernateDynamicQueryGenerator<SPSDataSycnSettingEntity> queryGenerator)
        {
            switch (parent_alias)
            {
                default:
                    break;
 
            }
        }
		
		
		

		
		
    }
}
