// Generated by MyGeneration Version # (1.3.0.9)
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace LD.SPPipeManage.Entity.Tables
{
	/// <summary>
	///	
	/// </summary>
	[DataContract]
	public partial class SPCodeInfoEntity : ICloneable
	{
        #region 公共常量

		public static readonly string CLASS_FULL_NAME = "LD.SPPipeManage.Entity.Tables.SPCodeInfoEntity";
		public static readonly string PROPERTY_NAME_ID = "Id";
		public static readonly string PROPERTY_NAME_CHANNELID = "ChannelID";
		public static readonly string PROPERTY_NAME_OPERATORTYPE = "OperatorType";
		public static readonly string PROPERTY_NAME_MO = "Mo";
		public static readonly string PROPERTY_NAME_CODETYPE = "CodeType";
		public static readonly string PROPERTY_NAME_SPCODE = "SPCode";
		public static readonly string PROPERTY_NAME_PROVINCE = "Province";
		public static readonly string PROPERTY_NAME_DISABLEAREA = "DisableArea";
		public static readonly string PROPERTY_NAME_DAYMONTHLIMIT = "DayMonthLimit";
		public static readonly string PROPERTY_NAME_ISLIMIT = "IsLimit";
		public static readonly string PROPERTY_NAME_ISENABLE = "IsEnable";
		public static readonly string PROPERTY_NAME_PRICE = "Price";
		public static readonly string PROPERTY_NAME_SENDTEXT = "SendText";
		public static readonly string PROPERTY_NAME_COMMENT = "Comment";
		public static readonly string PROPERTY_NAME_CREATEUSER = "CreateUser";
		public static readonly string PROPERTY_NAME_CREATETIME = "CreateTime";
		
        #endregion
	
        #region 私有成员变量

		private bool _isChanged;		
		private bool _isDeleted;
		
		private int _id;
		private SPChannelEntity _channelID;
		private string _operatorType;
		private string _mo;
		private string _codeType;
		private string _sPCode;
		private string _province;
		private string _disableArea;
		private string _dayMonthLimit;
		private bool _isLimit;
		private bool _isEnable;
		private string _price;
		private string _sendText;
		private string _comment;
		private int? _createUser;
		private DateTime? _createTime;
		
		#endregion

		#region 构造函数
		/// <summary>
		/// 默认构造函数
		/// </summary>
		public SPCodeInfoEntity()
		{
			_id = 0;
			_channelID = null;
			_operatorType = String.Empty;
			_mo = String.Empty;
			_codeType = String.Empty;
			_sPCode = String.Empty;
			_province = String.Empty;
			_disableArea = String.Empty;
			_dayMonthLimit = String.Empty;
			_isLimit = false;
			_isEnable = false;
			_price = null;
			_sendText = null;
			_comment = null;
			_createUser = null;
			_createTime = null;
		}
		#endregion

		#region 全构造函数
		/// <summary>
		/// 全构造函数
		/// </summary>
		public SPCodeInfoEntity( int id, SPChannelEntity channelID, string operatorType, string mo, string codeType, string sPCode, string province, string disableArea, string dayMonthLimit, bool isLimit, bool isEnable, string price, string sendText, string comment, int? createUser, DateTime? createTime)
		{
			_id = id;
			_channelID = channelID;
			_operatorType = operatorType;
			_mo = mo;
			_codeType = codeType;
			_sPCode = sPCode;
			_province = province;
			_disableArea = disableArea;
			_dayMonthLimit = dayMonthLimit;
			_isLimit = isLimit;
			_isEnable = isEnable;
			_price = price;
			_sendText = sendText;
			_comment = comment;
			_createUser = createUser;
			_createTime = createTime;
		}
		#endregion     
	
	    #region 公共属性

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual int Id
		{
			get { return _id; }

			set	
			{
				_isChanged |= (_id != value); _id = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual SPChannelEntity ChannelID
		{
			get { return _channelID; }

			set	
			{
				_isChanged |= (_channelID != value); _channelID = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual string OperatorType
		{
			get { return _operatorType; }

			set	
			{

				if( value != null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for OperatorType", value, value.ToString());
				_isChanged |= (_operatorType != value); _operatorType = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual string Mo
		{
			get { return _mo; }

			set	
			{

				if( value != null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for Mo", value, value.ToString());
				_isChanged |= (_mo != value); _mo = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual string CodeType
		{
			get { return _codeType; }

			set	
			{

				if( value != null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for CodeType", value, value.ToString());
				_isChanged |= (_codeType != value); _codeType = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual string SPCode
		{
			get { return _sPCode; }

			set	
			{

				if( value != null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for SPCode", value, value.ToString());
				_isChanged |= (_sPCode != value); _sPCode = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual string Province
		{
			get { return _province; }

			set	
			{

				if( value != null && value.Length > 1000)
					throw new ArgumentOutOfRangeException("Invalid value for Province", value, value.ToString());
				_isChanged |= (_province != value); _province = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual string DisableArea
		{
			get { return _disableArea; }

			set	
			{

				if( value != null && value.Length > 1000)
					throw new ArgumentOutOfRangeException("Invalid value for DisableArea", value, value.ToString());
				_isChanged |= (_disableArea != value); _disableArea = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual string DayMonthLimit
		{
			get { return _dayMonthLimit; }

			set	
			{

				if( value != null && value.Length > 1000)
					throw new ArgumentOutOfRangeException("Invalid value for DayMonthLimit", value, value.ToString());
				_isChanged |= (_dayMonthLimit != value); _dayMonthLimit = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual bool IsLimit
		{
			get { return _isLimit; }

			set	
			{
				_isChanged |= (_isLimit != value); _isLimit = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual bool IsEnable
		{
			get { return _isEnable; }

			set	
			{
				_isChanged |= (_isEnable != value); _isEnable = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual string Price
		{
			get { return _price; }

			set	
			{

				if( value != null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for Price", value, value.ToString());
				_isChanged |= (_price != value); _price = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual string SendText
		{
			get { return _sendText; }

			set	
			{

				if( value != null && value.Length > 1000)
					throw new ArgumentOutOfRangeException("Invalid value for SendText", value, value.ToString());
				_isChanged |= (_sendText != value); _sendText = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual string Comment
		{
			get { return _comment; }

			set	
			{

				if( value != null && value.Length > 2000)
					throw new ArgumentOutOfRangeException("Invalid value for Comment", value, value.ToString());
				_isChanged |= (_comment != value); _comment = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual int? CreateUser
		{
			get { return _createUser; }

			set	
			{
				_isChanged |= (_createUser != value); _createUser = value;
			}
		}

		/// <summary>
		/// 
		/// </summary>
		[DataMember]
		public virtual DateTime? CreateTime
		{
			get { return _createTime; }

			set	
			{
				_isChanged |= (_createTime != value); _createTime = value;
			}
		}
		/// <summary>
		/// 返回对象是否被改变。
		/// </summary>
		public virtual bool IsChanged
		{
			get { return _isChanged; }
		}
		
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public virtual bool IsDeleted
		{
			get { return _isDeleted; }
		}
		
		#endregion 

        #region 公共方法
		
		/// <summary>
		/// mark the item as deleted
		/// </summary>
		public virtual void MarkAsDeleted()
		{
			_isDeleted = true;
			_isChanged = true;
		}
		
		#endregion

		#region Equals 和 HashCode 方法覆盖
		/// <summary>
		/// local implementation of Equals based on unique value members
		/// </summary>
		public override bool Equals( object obj )
		{
			if( this == obj ) return true;
			
			if( ( obj == null ) || ( obj.GetType() != this.GetType() ) ) return false;
			
			SPCodeInfoEntity castObj = (SPCodeInfoEntity)obj;
			
			return ( castObj != null ) && ( this._id == castObj.Id );
		}
		
		/// <summary>
		/// local implementation of GetHashCode based on unique value members
		/// </summary>
		public override int GetHashCode()
		{
			
			int hash = 57; 
			hash = 27 * hash * _id.GetHashCode();

			return hash; 
		}
		#endregion
	
		#region ICloneable methods
		
		public virtual object Clone()
		{
			return this.MemberwiseClone();
		}
		
		#endregion
	
	}
}
