// Generated by MyGeneration Version # (1.3.0.9)
using System;
using System.Collections.Generic;
using System.Text;
using Legendigital.Framework.Common.Bussiness.NHibernate;
using NHibernate.Criterion;
using Legendigital.Framework.Common.Data.NHibernate.DynamicQuery;
using LD.SPPipeManage.Entity.Tables;
using Legendigital.Framework.Common.Data.NHibernate;

namespace LD.SPPipeManage.Data.Tables
{
    public partial class SPCodeInfoDataObject
    {
        public List<SPCodeInfoEntity> FindAllByOrderByAndFilterAndChannelID(SPChannelEntity channelEntity, List<QueryFilter> filters, string orderByColumnName, bool isDesc, int pageIndex, int pageSize, out int recordCount)
        {
            NHibernateDynamicQueryGenerator<SPCodeInfoEntity> queryGenerator = this.GetNewQueryBuilder();

            if (channelEntity != null)
                queryGenerator.AddWhereClause(PROPERTY_CHANNELID.Eq(channelEntity));

            AddDefaultOrderByToQueryGenerator(orderByColumnName, isDesc, queryGenerator);

            queryGenerator.SetFirstResult((pageIndex - 1) * pageSize);

            queryGenerator.SetMaxResults(pageSize);

            List<SPCodeInfoEntity> results = FindListByPageByQueryBuilder(queryGenerator, out recordCount);

            return results;
        }

        public List<SPCodeInfoEntity> FindAllByOrderByAndFilterAndChannelID(SPChannelEntity channelEntity, List<QueryFilter> queryFilters, string orderByColumnName, bool isDesc)
        {
            NHibernateDynamicQueryGenerator<SPCodeInfoEntity> queryGenerator = this.GetNewQueryBuilder();

            if (channelEntity != null)
                queryGenerator.AddWhereClause(PROPERTY_CHANNELID.Eq(channelEntity));

            AddDefaultOrderByToQueryGenerator(orderByColumnName, isDesc, queryGenerator);

            List<SPCodeInfoEntity> results = FindListByQueryBuilder(queryGenerator);

            return results;
        }
    }
}
