// Generated by MyGeneration Version # (1.3.0.9)
using System;
using System.Collections.Generic;
using System.Text;
using NHibernate.Criterion;
using Legendigital.Framework.Common.Data.NHibernate.DynamicQuery;
using LD.SPPipeManage.Entity.Tables;
using Legendigital.Framework.Common.Data.NHibernate;

namespace LD.SPPipeManage.Data.Tables
{
    public partial class SPSendClientParamsDataObject
    {
        public List<SPSendClientParamsEntity> FindAllByOrderByAndClientID(string sortFieldName, bool isDesc, int pageIndex, int limit, SPClientEntity client, out int recordCount)
        {
            NHibernateDynamicQueryGenerator<SPSendClientParamsEntity> queryGenerator = this.GetNewQueryBuilder();

            queryGenerator.AddWhereClause(PROPERTY_CLIENTID.Eq(client));

            AddDefaultOrderByToQueryGenerator(sortFieldName, isDesc, queryGenerator);

            return this.FindListByPageByQueryBuilder(queryGenerator, pageIndex, limit, out recordCount);

        }

        public List<SPSendClientParamsEntity> GetAllEnableParams(SPClientEntity spClientEntity)
        {
            NHibernateDynamicQueryGenerator<SPSendClientParamsEntity> queryGenerator = this.GetNewQueryBuilder();

            queryGenerator.AddWhereClause(PROPERTY_CLIENTID.Eq(spClientEntity));

            queryGenerator.AddWhereClause(PROPERTY_ISENABLE.Eq(true));

            queryGenerator.AddOrderBy(PROPERTY_ID.Desc());

            return this.FindListByQueryBuilder(queryGenerator);
        }
    }
}
