// Generated by MyGeneration Version # (1.3.0.9)
using System;
using System.Collections.Generic;


namespace Legendigital.Framework.Common.BaseFramework.Entity.Tables
{
	/// <summary>
	///	用户组
	/// </summary>
	
	public partial class SystemUserGroupEntity : ICloneable
	{
        #region 公共常量

		public static readonly string CLASS_FULL_NAME = "Legendigital.Framework.Common.BaseFramework.Entity.Tables.SystemUserGroupEntity";
		public static readonly string PROPERTY_NAME_GROUPID = "GroupID";
		public static readonly string PROPERTY_NAME_GROUPNAMECN = "GroupNameCn";
		public static readonly string PROPERTY_NAME_GROUPNAMEEN = "GroupNameEn";
		public static readonly string PROPERTY_NAME_GROUPDESCRIPTION = "GroupDescription";
		
        #endregion
	
        #region 私有成员变量

		private bool _isChanged;		
		private bool _isDeleted;
		
		private int _groupID;
		private string _groupNameCn;
		private string _groupNameEn;
		private string _groupDescription;
		
		#endregion

		#region 构造函数
		/// <summary>
		/// 默认构造函数
		/// </summary>
		public SystemUserGroupEntity()
		{
			_groupID = 0;
			_groupNameCn = String.Empty;
			_groupNameEn = String.Empty;
			_groupDescription = null;
		}
		#endregion

		#region 全构造函数
		/// <summary>
		/// 全构造函数
		/// </summary>
		public SystemUserGroupEntity( int groupID, string groupNameCn, string groupNameEn, string groupDescription)
		{
			_groupID = groupID;
			_groupNameCn = groupNameCn;
			_groupNameEn = groupNameEn;
			_groupDescription = groupDescription;
		}
		#endregion     
	
	    #region 公共属性

		/// <summary>
		/// 主键
		/// </summary>
		
		public virtual int GroupID
		{
			get { return _groupID; }

			set	
			{
				_isChanged |= (_groupID != value); _groupID = value;
			}
		}

		/// <summary>
		/// 用户组中文名
		/// </summary>
		
		public virtual string GroupNameCn
		{
			get { return _groupNameCn; }

			set	
			{

				if( value != null && value.Length > 400)
					throw new ArgumentOutOfRangeException("Invalid value for GroupNameCn", value, value.ToString());
				_isChanged |= (_groupNameCn != value); _groupNameCn = value;
			}
		}

		/// <summary>
		/// 用户组英文名
		/// </summary>
		
		public virtual string GroupNameEn
		{
			get { return _groupNameEn; }

			set	
			{

				if( value != null && value.Length > 400)
					throw new ArgumentOutOfRangeException("Invalid value for GroupNameEn", value, value.ToString());
				_isChanged |= (_groupNameEn != value); _groupNameEn = value;
			}
		}

		/// <summary>
		/// 用户组描述
		/// </summary>
		
		public virtual string GroupDescription
		{
			get { return _groupDescription; }

			set	
			{

				if( value != null && value.Length > 4000)
					throw new ArgumentOutOfRangeException("Invalid value for GroupDescription", value, value.ToString());
				_isChanged |= (_groupDescription != value); _groupDescription = value;
			}
		}
		/// <summary>
		/// 返回对象是否被改变。
		/// </summary>
		public virtual bool IsChanged
		{
			get { return _isChanged; }
		}
		
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public virtual bool IsDeleted
		{
			get { return _isDeleted; }
		}
		
		#endregion 

        #region 公共方法
		
		/// <summary>
		/// mark the item as deleted
		/// </summary>
		public virtual void MarkAsDeleted()
		{
			_isDeleted = true;
			_isChanged = true;
		}
		
		#endregion

		#region Equals 和 HashCode 方法覆盖
		/// <summary>
		/// local implementation of Equals based on unique value members
		/// </summary>
		public override bool Equals( object obj )
		{
			if( this == obj ) return true;
			
			if( ( obj == null ) || ( obj.GetType() != this.GetType() ) ) return false;
			
			SystemUserGroupEntity castObj = (SystemUserGroupEntity)obj;
			
			return ( castObj != null ) && ( this._groupID == castObj.GroupID );
		}
		
		/// <summary>
		/// local implementation of GetHashCode based on unique value members
		/// </summary>
		public override int GetHashCode()
		{
			
			int hash = 57; 
			hash = 27 * hash * _groupID.GetHashCode();

			return hash; 
		}
		#endregion
	
		#region ICloneable methods
		
		public virtual object Clone()
		{
			return this.MemberwiseClone();
		}
		
		#endregion
	
	}
}
