// Generated by MyGeneration Version # (1.3.0.9)
using System;
using System.Collections.Generic;
using Legendigital.Framework.Common.Bussiness.Interfaces;
using Legendigital.Framework.Common.Bussiness;
using PhotoAblum.Web.Codes.Data.Tables;
using PhotoAblum.Web.Codes.Entity.Tables;
using Spring.Transaction.Interceptor;


namespace PhotoAblum.Web.Codes.Bussiness.ServiceProxys.Tables
{
	public interface IPhotoServiceProxy : IBaseSpringNHibernateEntityServiceProxy<PhotoEntity>
    {
	    List<PhotoEntity> GetByAlbumID(int albumId);
        int GeneretaNewOrderIndex();
    }

    public partial class PhotoServiceProxy : IPhotoServiceProxy
    {
        public List<PhotoEntity> GetByAlbumID(int albumId)
        {
            return this.SelfDataObj.GetByAlbumID(albumId);  
        }

        [Transaction(ReadOnly = false)]
        public int GeneretaNewOrderIndex()
        {
            PhotoEntity photoEntity = this.SelfDataObj.FindMaxOrderAlbum();

            if (photoEntity == null)
            {
                return 0;
            }

            if (!photoEntity.OrderIndex.HasValue)
            {
                photoEntity.OrderIndex = 0;
                this.selfDataObject.Update(photoEntity);
                return 1;
            }

            return photoEntity.OrderIndex.Value + 1;
        }
    }
}
