// Generated by MyGeneration Version # (1.3.0.9)
using System;
using Legendigital.Framework.Common.Bussiness.Interfaces;
using Legendigital.Framework.Common.Bussiness;
using PhotoAblum.Web.Codes.Bussiness.Wrappers;
using PhotoAblum.Web.Codes.Data.Tables;
using PhotoAblum.Web.Codes.Entity.Tables;
using Spring.Transaction.Interceptor;


namespace PhotoAblum.Web.Codes.Bussiness.ServiceProxys.Tables
{
	public interface IAlbumServiceProxy : IBaseSpringNHibernateEntityServiceProxy<AlbumEntity>
    {
	    AlbumEntity FindByDirName(string dirName);
	    int GeneretaNewOrderIndex();
    }

    public partial class AlbumServiceProxy : IAlbumServiceProxy
    {
        public AlbumEntity FindByDirName(string dirName)
        {
            return this.SelfDataObj.FindByDirName(dirName);
        }

        [Transaction(ReadOnly = false)]
        public int GeneretaNewOrderIndex()
        {
            AlbumEntity albumEntity = this.SelfDataObj.FindMaxOrderAlbum();

            if(albumEntity==null)
            {
                return 0;
            }

            if (!albumEntity.OrderIndex.HasValue)
            {
                albumEntity.OrderIndex = 0;
                this.selfDataObject.Update(albumEntity);
                return 1;
            }

            return albumEntity.OrderIndex.Value + 1;
        }
    }
}
